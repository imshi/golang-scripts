<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1207" height="7164" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 1207 7164"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 191, 118)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3481,0,0,1,82.50000440329313,81.49995934218168"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M154.50000440329313,81.49995934218168C162.50000440329313,81.49995934218168,162.50000440329313,29.499959342181683,170.50000440329313,29.499959342181683"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M154.50000440329313,81.49995934218168C162.50000440329313,81.49995934218168,162.50000440329313,55.49995934218168,170.50000440329313,55.49995934218168"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M154.50000440329313,81.49995934218168C162.50000440329313,81.49995934218168,162.50000440329313,81.49995934218168,170.50000440329313,81.49995934218168"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M154.50000440329313,81.49995934218168C162.50000440329313,81.49995934218168,162.50000440329313,107.49995934218168,170.50000440329313,107.49995934218168"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M154.50000440329313,81.49995934218168C162.50000440329313,81.49995934218168,162.50000440329313,133.49995934218168,170.50000440329313,133.49995934218168"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3350,0,0,1,82.50000440329313,212.49995934218168"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M180.50000440329313,212.49995934218168C188.50000440329313,212.49995934218168,188.50000440329313,167.49995934218168,196.50000440329313,167.49995934218168"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M180.50000440329313,212.49995934218168C188.50000440329313,212.49995934218168,188.50000440329313,193.49995934218168,196.50000440329313,193.49995934218168"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M180.50000440329313,212.49995934218168C188.50000440329313,212.49995934218168,188.50000440329313,258.4999593421817,196.50000440329313,258.4999593421817"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M255.50000440329313,258.4999593421817C263.50000440329313,258.4999593421817,263.50000440329313,219.49995934218168,271.50000440329313,219.49995934218168"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M255.50000440329313,258.4999593421817C263.50000440329313,258.4999593421817,263.50000440329313,245.49995934218168,271.50000440329313,245.49995934218168"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M255.50000440329313,258.4999593421817C263.50000440329313,258.4999593421817,263.50000440329313,271.4999593421817,271.50000440329313,271.4999593421817"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M255.50000440329313,258.4999593421817C263.50000440329313,258.4999593421817,263.50000440329313,297.4999593421817,271.50000440329313,297.4999593421817"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3114,0,0,1,82.50000440329313,448.4999593421817"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,331.4999593421817,197.50000440329313,331.4999593421817"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,370.4999593421817,197.50000440329313,370.4999593421817"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,370.4999593421817C241.50000440329313,370.4999593421817,241.50000440329313,357.4999593421817,249.50000440329313,357.4999593421817"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,370.4999593421817C241.50000440329313,370.4999593421817,241.50000440329313,383.4999593421817,249.50000440329313,383.4999593421817"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,435.4999593421817,197.50000440329313,435.4999593421817"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M472.50000440329313,435.4999593421817C480.50000440329313,435.4999593421817,480.50000440329313,409.4999593421817,488.50000440329313,409.4999593421817"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M472.50000440329313,435.4999593421817C480.50000440329313,435.4999593421817,480.50000440329313,435.4999593421817,488.50000440329313,435.4999593421817"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M472.50000440329313,435.4999593421817C480.50000440329313,435.4999593421817,480.50000440329313,461.4999593421817,488.50000440329313,461.4999593421817"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,500.4999593421817,197.50000440329313,500.4999593421817"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M243.50000440329313,500.4999593421817C251.50000440329313,500.4999593421817,251.50000440329313,487.4999593421817,259.50000440329313,487.4999593421817"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M243.50000440329313,500.4999593421817C251.50000440329313,500.4999593421817,251.50000440329313,513.4999593421817,259.50000440329313,513.4999593421817"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,539.4999593421817,197.50000440329313,539.4999593421817"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M244.50000440329313,539.4999593421817C252.50000440329313,539.4999593421817,252.50000440329313,539.4999593421817,260.50000440329313,539.4999593421817"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,448.4999593421817C189.50000440329313,448.4999593421817,189.50000440329313,565.4999593421817,197.50000440329313,565.4999593421817"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,565.4999593421817C241.50000440329313,565.4999593421817,241.50000440329313,565.4999593421817,249.50000440329313,565.4999593421817"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,2768,0,0,1,82.50000440329313,794.4999593421817"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,794.4999593421817C189.50000440329313,794.4999593421817,189.50000440329313,651.4999593421817,197.50000440329313,651.4999593421817"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M257.50000440329313,651.4999593421817C265.50000440329313,651.4999593421817,265.50000440329313,599.4999593421817,273.50000440329313,599.4999593421817"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M257.50000440329313,651.4999593421817C265.50000440329313,651.4999593421817,265.50000440329313,625.4999593421817,273.50000440329313,625.4999593421817"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M257.50000440329313,651.4999593421817C265.50000440329313,651.4999593421817,265.50000440329313,651.4999593421817,273.50000440329313,651.4999593421817"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M257.50000440329313,651.4999593421817C265.50000440329313,651.4999593421817,265.50000440329313,677.4999593421817,273.50000440329313,677.4999593421817"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M257.50000440329313,651.4999593421817C265.50000440329313,651.4999593421817,265.50000440329313,703.4999593421817,273.50000440329313,703.4999593421817"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,794.4999593421817C189.50000440329313,794.4999593421817,189.50000440329313,820.4999593421817,197.50000440329313,820.4999593421817"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,729.4999593421817,302.50000440329313,729.4999593421817"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,755.4999593421817,302.50000440329313,755.4999593421817"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,781.4999593421817,302.50000440329313,781.4999593421817"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,807.4999593421817,302.50000440329313,807.4999593421817"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,833.4999593421817,302.50000440329313,833.4999593421817"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,859.4999593421817,302.50000440329313,859.4999593421817"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,885.4999593421817,302.50000440329313,885.4999593421817"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,820.4999593421817C294.50000440329313,820.4999593421817,294.50000440329313,911.4999593421817,302.50000440329313,911.4999593421817"></path><path id="kity_path_123" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,794.4999593421817C189.50000440329313,794.4999593421817,189.50000440329313,937.4999593421817,197.50000440329313,937.4999593421817"></path><path id="kity_path_125" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M281.50000440329313,937.4999593421817C289.50000440329313,937.4999593421817,289.50000440329313,937.4999593421817,297.50000440329313,937.4999593421817"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,2319,0,0,1,82.50000440329313,1243.4999593421817"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1243.4999593421817C161.50000440329313,1243.4999593421817,161.50000440329313,1083.4999593421817,169.50000440329313,1083.4999593421817"></path><path id="kity_path_131" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M228.50000440329313,1083.4999593421817C236.50000440329313,1083.4999593421817,236.50000440329313,970.4999593421817,244.50000440329313,970.4999593421817"></path><path id="kity_path_133" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M397.50000440329313,970.4999593421817C405.50000440329313,970.4999593421817,405.50000440329313,970.4999593421817,413.50000440329313,970.4999593421817"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M228.50000440329313,1083.4999593421817C236.50000440329313,1083.4999593421817,236.50000440329313,996.4999593421817,244.50000440329313,996.4999593421817"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M228.50000440329313,1083.4999593421817C236.50000440329313,1083.4999593421817,236.50000440329313,1061.4999593421817,244.50000440329313,1061.4999593421817"></path><path id="kity_path_139" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M304.50000440329313,1061.4999593421817C312.50000440329313,1061.4999593421817,312.50000440329313,1022.4999593421817,320.50000440329313,1022.4999593421817"></path><path id="kity_path_141" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M546.5000044032931,1022.4999593421817C554.5000044032931,1022.4999593421817,554.5000044032931,1022.4999593421817,562.5000044032931,1022.4999593421817"></path><path id="kity_path_143" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M304.50000440329313,1061.4999593421817C312.50000440329313,1061.4999593421817,312.50000440329313,1048.4999593421817,320.50000440329313,1048.4999593421817"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M500.50000440329313,1048.4999593421817C508.50000440329313,1048.4999593421817,508.50000440329313,1048.4999593421817,516.5000044032931,1048.4999593421817"></path><path id="kity_path_147" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M304.50000440329313,1061.4999593421817C312.50000440329313,1061.4999593421817,312.50000440329313,1074.4999593421817,320.50000440329313,1074.4999593421817"></path><path id="kity_path_149" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M815.5000044032931,1074.4999593421817C823.5000044032931,1074.4999593421817,823.5000044032931,1074.4999593421817,831.5000044032931,1074.4999593421817"></path><path id="kity_path_151" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M304.50000440329313,1061.4999593421817C312.50000440329313,1061.4999593421817,312.50000440329313,1100.4999593421817,320.50000440329313,1100.4999593421817"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M228.50000440329313,1083.4999593421817C236.50000440329313,1083.4999593421817,236.50000440329313,1196.4999593421817,244.50000440329313,1196.4999593421817"></path><path id="kity_path_155" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M303.50000440329313,1196.4999593421817C311.50000440329313,1196.4999593421817,311.50000440329313,1126.4999593421817,319.50000440329313,1126.4999593421817"></path><path id="kity_path_157" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M303.50000440329313,1196.4999593421817C311.50000440329313,1196.4999593421817,311.50000440329313,1152.4999593421817,319.50000440329313,1152.4999593421817"></path><path id="kity_path_159" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M303.50000440329313,1196.4999593421817C311.50000440329313,1196.4999593421817,311.50000440329313,1191.4999593421817,319.50000440329313,1191.4999593421817"></path><path id="kity_path_161" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M450.50000440329313,1191.4999593421817C458.50000440329313,1191.4999593421817,458.50000440329313,1178.4999593421817,466.50000440329313,1178.4999593421817"></path><path id="kity_path_163" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M450.50000440329313,1191.4999593421817C458.50000440329313,1191.4999593421817,458.50000440329313,1204.4999593421817,466.50000440329313,1204.4999593421817"></path><path id="kity_path_165" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M303.50000440329313,1196.4999593421817C311.50000440329313,1196.4999593421817,311.50000440329313,1248.4999593421817,319.50000440329313,1248.4999593421817"></path><path id="kity_path_167" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1243.4999593421817C161.50000440329313,1243.4999593421817,161.50000440329313,1318.4999593421817,169.50000440329313,1318.4999593421817"></path><path id="kity_path_169" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M241.50000440329313,1318.4999593421817C249.50000440329313,1318.4999593421817,249.50000440329313,1292.4999593421817,257.50000440329313,1292.4999593421817"></path><path id="kity_path_171" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M241.50000440329313,1318.4999593421817C249.50000440329313,1318.4999593421817,249.50000440329313,1318.4999593421817,257.50000440329313,1318.4999593421817"></path><path id="kity_path_173" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M241.50000440329313,1318.4999593421817C249.50000440329313,1318.4999593421817,249.50000440329313,1344.4999593421817,257.50000440329313,1344.4999593421817"></path><path id="kity_path_175" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1243.4999593421817C161.50000440329313,1243.4999593421817,161.50000440329313,1403.4999593421817,169.50000440329313,1403.4999593421817"></path><path id="kity_path_177" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M205.50000440329313,1403.4999593421817C213.50000440329313,1403.4999593421817,213.50000440329313,1371.4999593421817,221.50000440329313,1371.4999593421817"></path><path id="kity_path_179" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M205.50000440329313,1403.4999593421817C213.50000440329313,1403.4999593421817,213.50000440329313,1397.4999593421817,221.50000440329313,1397.4999593421817"></path><path id="kity_path_181" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M205.50000440329313,1403.4999593421817C213.50000440329313,1403.4999593421817,213.50000440329313,1436.4999593421817,221.50000440329313,1436.4999593421817"></path><path id="kity_path_183" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M411.50000440329313,1436.4999593421817C419.50000440329313,1436.4999593421817,419.50000440329313,1423.4999593421817,427.50000440329313,1423.4999593421817"></path><path id="kity_path_185" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M411.50000440329313,1436.4999593421817C419.50000440329313,1436.4999593421817,419.50000440329313,1449.4999593421817,427.50000440329313,1449.4999593421817"></path><path id="kity_path_187" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,1949,0,0,1,82.50000440329313,1613.4999593421817"></path><path id="kity_path_189" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1483.4999593421817,169.50000440329313,1483.4999593421817"></path><path id="kity_path_191" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1509.4999593421817,169.50000440329313,1509.4999593421817"></path><path id="kity_path_193" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1548.4999593421817,169.50000440329313,1548.4999593421817"></path><path id="kity_path_195" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M390.50000440329313,1548.4999593421817C398.50000440329313,1548.4999593421817,398.50000440329313,1535.4999593421817,406.50000440329313,1535.4999593421817"></path><path id="kity_path_197" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M390.50000440329313,1548.4999593421817C398.50000440329313,1548.4999593421817,398.50000440329313,1561.4999593421817,406.50000440329313,1561.4999593421817"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1587.4999593421817,169.50000440329313,1587.4999593421817"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1639.4999593421817,169.50000440329313,1639.4999593421817"></path><path id="kity_path_203" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M432.50000440329313,1639.4999593421817C440.50000440329313,1639.4999593421817,440.50000440329313,1613.4999593421817,448.50000440329313,1613.4999593421817"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M432.50000440329313,1639.4999593421817C440.50000440329313,1639.4999593421817,440.50000440329313,1639.4999593421817,448.50000440329313,1639.4999593421817"></path><path id="kity_path_207" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M432.50000440329313,1639.4999593421817C440.50000440329313,1639.4999593421817,440.50000440329313,1665.4999593421817,448.50000440329313,1665.4999593421817"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1691.4999593421817,169.50000440329313,1691.4999593421817"></path><path id="kity_path_211" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,1691.4999593421817C270.50000440329313,1691.4999593421817,270.50000440329313,1691.4999593421817,278.50000440329313,1691.4999593421817"></path><path id="kity_path_213" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1717.4999593421817,169.50000440329313,1717.4999593421817"></path><path id="kity_path_215" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,1613.4999593421817C161.50000440329313,1613.4999593421817,161.50000440329313,1743.4999593421817,169.50000440329313,1743.4999593421817"></path><path id="kity_path_217" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,1694,0,0,1,82.50000440329313,1868.4999593421817"></path><path id="kity_path_219" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1777.4999593421817,182.50000440329313,1777.4999593421817"></path><path id="kity_path_221" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1803.4999593421817,182.50000440329313,1803.4999593421817"></path><path id="kity_path_223" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1829.4999593421817,182.50000440329313,1829.4999593421817"></path><path id="kity_path_225" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1855.4999593421817,182.50000440329313,1855.4999593421817"></path><path id="kity_path_227" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1881.4999593421817,182.50000440329313,1881.4999593421817"></path><path id="kity_path_229" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1920.4999593421817,182.50000440329313,1920.4999593421817"></path><path id="kity_path_231" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M253.50000440329313,1920.4999593421817C261.50000440329313,1920.4999593421817,261.50000440329313,1907.4999593421817,269.50000440329313,1907.4999593421817"></path><path id="kity_path_233" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M253.50000440329313,1920.4999593421817C261.50000440329313,1920.4999593421817,261.50000440329313,1933.4999593421817,269.50000440329313,1933.4999593421817"></path><path id="kity_path_235" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M166.50000440329313,1868.4999593421817C174.50000440329313,1868.4999593421817,174.50000440329313,1959.4999593421817,182.50000440329313,1959.4999593421817"></path><path id="kity_path_237" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,1397,0,0,1,82.50000440329313,2165.4999593421817"></path><path id="kity_path_239" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,2165.4999593421817C189.50000440329313,2165.4999593421817,189.50000440329313,2077.4999593421817,197.50000440329313,2077.4999593421817"></path><path id="kity_path_241" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2077.4999593421817C264.50000440329313,2077.4999593421817,264.50000440329313,1993.4999593421817,272.50000440329313,1993.4999593421817"></path><path id="kity_path_243" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2077.4999593421817C264.50000440329313,2077.4999593421817,264.50000440329313,2058.4999593421817,272.50000440329313,2058.4999593421817"></path><path id="kity_path_245" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M330.50000440329313,2058.4999593421817C338.50000440329313,2058.4999593421817,338.50000440329313,2019.4999593421817,346.50000440329313,2019.4999593421817"></path><path id="kity_path_247" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M330.50000440329313,2058.4999593421817C338.50000440329313,2058.4999593421817,338.50000440329313,2045.4999593421817,346.50000440329313,2045.4999593421817"></path><path id="kity_path_249" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M330.50000440329313,2058.4999593421817C338.50000440329313,2058.4999593421817,338.50000440329313,2071.4999593421817,346.50000440329313,2071.4999593421817"></path><path id="kity_path_251" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M330.50000440329313,2058.4999593421817C338.50000440329313,2058.4999593421817,338.50000440329313,2097.4999593421817,346.50000440329313,2097.4999593421817"></path><path id="kity_path_253" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2077.4999593421817C264.50000440329313,2077.4999593421817,264.50000440329313,2123.4999593421817,272.50000440329313,2123.4999593421817"></path><path id="kity_path_255" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2077.4999593421817C264.50000440329313,2077.4999593421817,264.50000440329313,2162.4999593421817,272.50000440329313,2162.4999593421817"></path><path id="kity_path_257" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M418.50000440329313,2162.4999593421817C426.50000440329313,2162.4999593421817,426.50000440329313,2149.4999593421817,434.50000440329313,2149.4999593421817"></path><path id="kity_path_259" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M418.50000440329313,2162.4999593421817C426.50000440329313,2162.4999593421817,426.50000440329313,2175.4999593421817,434.50000440329313,2175.4999593421817"></path><path id="kity_path_261" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M181.50000440329313,2165.4999593421817C189.50000440329313,2165.4999593421817,189.50000440329313,2253.4999593421817,197.50000440329313,2253.4999593421817"></path><path id="kity_path_263" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2253.4999593421817C264.50000440329313,2253.4999593421817,264.50000440329313,2214.4999593421817,272.50000440329313,2214.4999593421817"></path><path id="kity_path_265" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M396.50000440329313,2214.4999593421817C404.50000440329313,2214.4999593421817,404.50000440329313,2201.4999593421817,412.50000440329313,2201.4999593421817"></path><path id="kity_path_267" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M396.50000440329313,2214.4999593421817C404.50000440329313,2214.4999593421817,404.50000440329313,2227.4999593421817,412.50000440329313,2227.4999593421817"></path><path id="kity_path_269" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M256.50000440329313,2253.4999593421817C264.50000440329313,2253.4999593421817,264.50000440329313,2292.4999593421817,272.50000440329313,2292.4999593421817"></path><path id="kity_path_271" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M367.50000440329313,2292.4999593421817C375.50000440329313,2292.4999593421817,375.50000440329313,2253.4999593421817,383.50000440329313,2253.4999593421817"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M367.50000440329313,2292.4999593421817C375.50000440329313,2292.4999593421817,375.50000440329313,2279.4999593421817,383.50000440329313,2279.4999593421817"></path><path id="kity_path_275" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M367.50000440329313,2292.4999593421817C375.50000440329313,2292.4999593421817,375.50000440329313,2305.4999593421817,383.50000440329313,2305.4999593421817"></path><path id="kity_path_277" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M367.50000440329313,2292.4999593421817C375.50000440329313,2292.4999593421817,375.50000440329313,2331.4999593421817,383.50000440329313,2331.4999593421817"></path><path id="kity_path_279" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,918,0,0,1,82.50000440329313,2644.4999593421817"></path><path id="kity_path_281" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2365.4999593421817,218.50000440329313,2365.4999593421817"></path><path id="kity_path_283" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2391.4999593421817,218.50000440329313,2391.4999593421817"></path><path id="kity_path_285" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2472.4999593421817,218.50000440329313,2472.4999593421817"></path><path id="kity_path_287" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M277.50000440329313,2472.4999593421817C285.50000440329313,2472.4999593421817,285.50000440329313,2417.4999593421817,293.50000440329313,2417.4999593421817"></path><path id="kity_path_289" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M277.50000440329313,2472.4999593421817C285.50000440329313,2472.4999593421817,285.50000440329313,2456.4999593421817,293.50000440329313,2456.4999593421817"></path><path id="kity_path_291" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M665.5000044032931,2456.4999593421817C673.5000044032931,2456.4999593421817,673.5000044032931,2443.4999593421817,681.5000044032931,2443.4999593421817"></path><path id="kity_path_293" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M665.5000044032931,2456.4999593421817C673.5000044032931,2456.4999593421817,673.5000044032931,2469.4999593421817,681.5000044032931,2469.4999593421817"></path><path id="kity_path_295" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M277.50000440329313,2472.4999593421817C285.50000440329313,2472.4999593421817,285.50000440329313,2527.4999593421817,293.50000440329313,2527.4999593421817"></path><path id="kity_path_297" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M352.50000440329313,2527.4999593421817C360.50000440329313,2527.4999593421817,360.50000440329313,2495.4999593421817,368.50000440329313,2495.4999593421817"></path><path id="kity_path_299" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M352.50000440329313,2527.4999593421817C360.50000440329313,2527.4999593421817,360.50000440329313,2521.4999593421817,368.50000440329313,2521.4999593421817"></path><path id="kity_path_301" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M352.50000440329313,2527.4999593421817C360.50000440329313,2527.4999593421817,360.50000440329313,2560.4999593421817,368.50000440329313,2560.4999593421817"></path><path id="kity_path_303" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M404.50000440329313,2560.4999593421817C412.50000440329313,2560.4999593421817,412.50000440329313,2547.4999593421817,420.50000440329313,2547.4999593421817"></path><path id="kity_path_305" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M404.50000440329313,2560.4999593421817C412.50000440329313,2560.4999593421817,412.50000440329313,2573.4999593421817,420.50000440329313,2573.4999593421817"></path><path id="kity_path_307" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2625.4999593421817,218.50000440329313,2625.4999593421817"></path><path id="kity_path_309" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M266.50000440329313,2625.4999593421817C274.50000440329313,2625.4999593421817,274.50000440329313,2599.4999593421817,282.50000440329313,2599.4999593421817"></path><path id="kity_path_311" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M266.50000440329313,2625.4999593421817C274.50000440329313,2625.4999593421817,274.50000440329313,2625.4999593421817,282.50000440329313,2625.4999593421817"></path><path id="kity_path_313" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M266.50000440329313,2625.4999593421817C274.50000440329313,2625.4999593421817,274.50000440329313,2651.4999593421817,282.50000440329313,2651.4999593421817"></path><path id="kity_path_315" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2716.4999593421817,218.50000440329313,2716.4999593421817"></path><path id="kity_path_317" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M253.50000440329313,2716.4999593421817C261.50000440329313,2716.4999593421817,261.50000440329313,2677.4999593421817,269.50000440329313,2677.4999593421817"></path><path id="kity_path_319" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M253.50000440329313,2716.4999593421817C261.50000440329313,2716.4999593421817,261.50000440329313,2703.4999593421817,269.50000440329313,2703.4999593421817"></path><path id="kity_path_321" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M253.50000440329313,2716.4999593421817C261.50000440329313,2716.4999593421817,261.50000440329313,2755.4999593421817,269.50000440329313,2755.4999593421817"></path><path id="kity_path_323" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M328.50000440329313,2755.4999593421817C336.50000440329313,2755.4999593421817,336.50000440329313,2729.4999593421817,344.50000440329313,2729.4999593421817"></path><path id="kity_path_325" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M328.50000440329313,2755.4999593421817C336.50000440329313,2755.4999593421817,336.50000440329313,2755.4999593421817,344.50000440329313,2755.4999593421817"></path><path id="kity_path_327" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M328.50000440329313,2755.4999593421817C336.50000440329313,2755.4999593421817,336.50000440329313,2781.4999593421817,344.50000440329313,2781.4999593421817"></path><path id="kity_path_329" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2807.4999593421817,218.50000440329313,2807.4999593421817"></path><path id="kity_path_331" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M433.50000440329313,2807.4999593421817C441.50000440329313,2807.4999593421817,441.50000440329313,2807.4999593421817,449.50000440329313,2807.4999593421817"></path><path id="kity_path_333" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2833.4999593421817,218.50000440329313,2833.4999593421817"></path><path id="kity_path_335" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2872.4999593421817,218.50000440329313,2872.4999593421817"></path><path id="kity_path_337" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M445.50000440329313,2872.4999593421817C453.50000440329313,2872.4999593421817,453.50000440329313,2859.4999593421817,461.50000440329313,2859.4999593421817"></path><path id="kity_path_339" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M445.50000440329313,2872.4999593421817C453.50000440329313,2872.4999593421817,453.50000440329313,2885.4999593421817,461.50000440329313,2885.4999593421817"></path><path id="kity_path_341" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M202.50000440329313,2644.4999593421817C210.50000440329313,2644.4999593421817,210.50000440329313,2924.4999593421817,218.50000440329313,2924.4999593421817"></path><path id="kity_path_343" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M494.50000440329313,2924.4999593421817C502.50000440329313,2924.4999593421817,502.50000440329313,2911.4999593421817,510.50000440329313,2911.4999593421817"></path><path id="kity_path_345" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M494.50000440329313,2924.4999593421817C502.50000440329313,2924.4999593421817,502.50000440329313,2937.4999593421817,510.50000440329313,2937.4999593421817"></path><path id="kity_path_347" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,441,0,0,1,82.50000440329313,3121.4999593421817"></path><path id="kity_path_349" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,3121.4999593421817C242.50000440329313,3121.4999593421817,242.50000440329313,3019.4999593421817,250.50000440329313,3019.4999593421817"></path><path id="kity_path_351" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3019.4999593421817C294.50000440329313,3019.4999593421817,294.50000440329313,2971.4999593421817,302.50000440329313,2971.4999593421817"></path><path id="kity_path_353" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3019.4999593421817C294.50000440329313,3019.4999593421817,294.50000440329313,2997.4999593421817,302.50000440329313,2997.4999593421817"></path><path id="kity_path_355" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3019.4999593421817C294.50000440329313,3019.4999593421817,294.50000440329313,3023.4999593421817,302.50000440329313,3023.4999593421817"></path><path id="kity_path_357" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3019.4999593421817C294.50000440329313,3019.4999593421817,294.50000440329313,3058.4999593421817,302.50000440329313,3058.4999593421817"></path><path id="kity_path_359" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,3121.4999593421817C242.50000440329313,3121.4999593421817,242.50000440329313,3165.4999593421817,250.50000440329313,3165.4999593421817"></path><path id="kity_path_361" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3165.4999593421817C294.50000440329313,3165.4999593421817,294.50000440329313,3133.4999593421817,302.50000440329313,3133.4999593421817"></path><path id="kity_path_363" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M397.50000440329313,3133.4999593421817C405.50000440329313,3133.4999593421817,405.50000440329313,3094.4999593421817,413.50000440329313,3094.4999593421817"></path><path id="kity_path_365" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M397.50000440329313,3133.4999593421817C405.50000440329313,3133.4999593421817,405.50000440329313,3120.4999593421817,413.50000440329313,3120.4999593421817"></path><path id="kity_path_367" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M397.50000440329313,3133.4999593421817C405.50000440329313,3133.4999593421817,405.50000440329313,3146.4999593421817,413.50000440329313,3146.4999593421817"></path><path id="kity_path_369" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M397.50000440329313,3133.4999593421817C405.50000440329313,3133.4999593421817,405.50000440329313,3172.4999593421817,413.50000440329313,3172.4999593421817"></path><path id="kity_path_371" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,3165.4999593421817C294.50000440329313,3165.4999593421817,294.50000440329313,3198.4999593421817,302.50000440329313,3198.4999593421817"></path><path id="kity_path_373" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,3121.4999593421817C242.50000440329313,3121.4999593421817,242.50000440329313,3223.4999593421817,250.50000440329313,3223.4999593421817"></path><path id="kity_path_375" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,3223.4999593421817C293.50000440329313,3223.4999593421817,293.50000440329313,3223.4999593421817,301.50000440329313,3223.4999593421817"></path><path id="kity_path_377" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,201,0,0,1,82.50000440329313,3361.4999593421817"></path><path id="kity_path_379" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M232.50000440329313,3361.4999593421817C240.50000440329313,3361.4999593421817,240.50000440329313,3257.4999593421817,248.50000440329313,3257.4999593421817"></path><path id="kity_path_381" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M232.50000440329313,3361.4999593421817C240.50000440329313,3361.4999593421817,240.50000440329313,3283.4999593421817,248.50000440329313,3283.4999593421817"></path><path id="kity_path_383" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M232.50000440329313,3361.4999593421817C240.50000440329313,3361.4999593421817,240.50000440329313,3309.4999593421817,248.50000440329313,3309.4999593421817"></path><path id="kity_path_385" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M296.50000440329313,3309.4999593421817C304.50000440329313,3309.4999593421817,304.50000440329313,3309.4999593421817,312.50000440329313,3309.4999593421817"></path><path id="kity_path_387" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M232.50000440329313,3361.4999593421817C240.50000440329313,3361.4999593421817,240.50000440329313,3335.4999593421817,248.50000440329313,3335.4999593421817"></path><path id="kity_path_389" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M232.50000440329313,3361.4999593421817C240.50000440329313,3361.4999593421817,240.50000440329313,3465.4999593421817,248.50000440329313,3465.4999593421817"></path><path id="kity_path_391" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3361.4999593421817,373.50000440329313,3361.4999593421817"></path><path id="kity_path_393" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3387.4999593421817,373.50000440329313,3387.4999593421817"></path><path id="kity_path_395" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3413.4999593421817,373.50000440329313,3413.4999593421817"></path><path id="kity_path_397" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3439.4999593421817,373.50000440329313,3439.4999593421817"></path><path id="kity_path_399" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3465.4999593421817,373.50000440329313,3465.4999593421817"></path><path id="kity_path_401" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3491.4999593421817,373.50000440329313,3491.4999593421817"></path><path id="kity_path_403" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3517.4999593421817,373.50000440329313,3517.4999593421817"></path><path id="kity_path_405" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3543.4999593421817,373.50000440329313,3543.4999593421817"></path><path id="kity_path_407" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M357.50000440329313,3465.4999593421817C365.50000440329313,3465.4999593421817,365.50000440329313,3569.4999593421817,373.50000440329313,3569.4999593421817"></path><path id="kity_path_409" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,112,0,0,0,82.50000440329313,3674.4999593421817"></path><path id="kity_path_411" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M217.50000440329313,3674.4999593421817C225.50000440329313,3674.4999593421817,225.50000440329313,3616.4999593421817,233.50000440329313,3616.4999593421817"></path><path id="kity_path_413" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M280.50000440329313,3616.4999593421817C288.50000440329313,3616.4999593421817,288.50000440329313,3603.4999593421817,296.50000440329313,3603.4999593421817"></path><path id="kity_path_415" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M280.50000440329313,3616.4999593421817C288.50000440329313,3616.4999593421817,288.50000440329313,3629.4999593421817,296.50000440329313,3629.4999593421817"></path><path id="kity_path_417" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M217.50000440329313,3674.4999593421817C225.50000440329313,3674.4999593421817,225.50000440329313,3655.4999593421817,233.50000440329313,3655.4999593421817"></path><path id="kity_path_419" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M217.50000440329313,3674.4999593421817C225.50000440329313,3674.4999593421817,225.50000440329313,3681.4999593421817,233.50000440329313,3681.4999593421817"></path><path id="kity_path_421" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M364.50000440329313,3681.4999593421817C372.50000440329313,3681.4999593421817,372.50000440329313,3681.4999593421817,380.50000440329313,3681.4999593421817"></path><path id="kity_path_423" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M217.50000440329313,3674.4999593421817C225.50000440329313,3674.4999593421817,225.50000440329313,3707.4999593421817,233.50000440329313,3707.4999593421817"></path><path id="kity_path_425" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M217.50000440329313,3674.4999593421817C225.50000440329313,3674.4999593421817,225.50000440329313,3733.4999593421817,233.50000440329313,3733.4999593421817"></path><path id="kity_path_427" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M293.50000440329313,3733.4999593421817C301.50000440329313,3733.4999593421817,301.50000440329313,3733.4999593421817,309.50000440329313,3733.4999593421817"></path><path id="kity_path_429" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,325,0,0,0,82.50000440329313,3887.4999593421817"></path><path id="kity_path_431" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,3887.4999593421817C219.50000440329313,3887.4999593421817,219.50000440329313,3806.4999593421817,227.50000440329313,3806.4999593421817"></path><path id="kity_path_433" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3806.4999593421817C271.50000440329313,3806.4999593421817,271.50000440329313,3767.4999593421817,279.50000440329313,3767.4999593421817"></path><path id="kity_path_435" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3806.4999593421817C271.50000440329313,3806.4999593421817,271.50000440329313,3793.4999593421817,279.50000440329313,3793.4999593421817"></path><path id="kity_path_437" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3806.4999593421817C271.50000440329313,3806.4999593421817,271.50000440329313,3819.4999593421817,279.50000440329313,3819.4999593421817"></path><path id="kity_path_439" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3806.4999593421817C271.50000440329313,3806.4999593421817,271.50000440329313,3845.4999593421817,279.50000440329313,3845.4999593421817"></path><path id="kity_path_441" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,3887.4999593421817C219.50000440329313,3887.4999593421817,219.50000440329313,3884.4999593421817,227.50000440329313,3884.4999593421817"></path><path id="kity_path_443" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3884.4999593421817C271.50000440329313,3884.4999593421817,271.50000440329313,3871.4999593421817,279.50000440329313,3871.4999593421817"></path><path id="kity_path_445" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,3884.4999593421817C271.50000440329313,3884.4999593421817,271.50000440329313,3897.4999593421817,279.50000440329313,3897.4999593421817"></path><path id="kity_path_447" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,3887.4999593421817C219.50000440329313,3887.4999593421817,219.50000440329313,3968.4999593421817,227.50000440329313,3968.4999593421817"></path><path id="kity_path_449" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M287.50000440329313,3968.4999593421817C295.50000440329313,3968.4999593421817,295.50000440329313,3923.4999593421817,303.50000440329313,3923.4999593421817"></path><path id="kity_path_451" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M287.50000440329313,3968.4999593421817C295.50000440329313,3968.4999593421817,295.50000440329313,3949.4999593421817,303.50000440329313,3949.4999593421817"></path><path id="kity_path_453" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M287.50000440329313,3968.4999593421817C295.50000440329313,3968.4999593421817,295.50000440329313,3975.4999593421817,303.50000440329313,3975.4999593421817"></path><path id="kity_path_455" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M287.50000440329313,3968.4999593421817C295.50000440329313,3968.4999593421817,295.50000440329313,4014.4999593421817,303.50000440329313,4014.4999593421817"></path><path id="kity_path_457" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M481.50000440329313,4014.4999593421817C489.50000440329313,4014.4999593421817,489.50000440329313,4001.4999593421817,497.50000440329313,4001.4999593421817"></path><path id="kity_path_459" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M481.50000440329313,4014.4999593421817C489.50000440329313,4014.4999593421817,489.50000440329313,4027.4999593421817,497.50000440329313,4027.4999593421817"></path><path id="kity_path_461" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,645,0,0,0,82.50000440329313,4207.499959342182"></path><path id="kity_path_463" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,4207.499959342182C219.50000440329313,4207.499959342182,219.50000440329313,4087.4999593421817,227.50000440329313,4087.4999593421817"></path><path id="kity_path_465" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4087.4999593421817C271.50000440329313,4087.4999593421817,271.50000440329313,4061.4999593421817,279.50000440329313,4061.4999593421817"></path><path id="kity_path_467" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4087.4999593421817C271.50000440329313,4087.4999593421817,271.50000440329313,4087.4999593421817,279.50000440329313,4087.4999593421817"></path><path id="kity_path_469" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4087.4999593421817C271.50000440329313,4087.4999593421817,271.50000440329313,4113.499959342182,279.50000440329313,4113.499959342182"></path><path id="kity_path_471" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,4207.499959342182C219.50000440329313,4207.499959342182,219.50000440329313,4197.499959342182,227.50000440329313,4197.499959342182"></path><path id="kity_path_473" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4197.499959342182C271.50000440329313,4197.499959342182,271.50000440329313,4152.499959342182,279.50000440329313,4152.499959342182"></path><path id="kity_path_475" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M515.5000044032931,4152.499959342182C523.5000044032931,4152.499959342182,523.5000044032931,4139.499959342182,531.5000044032931,4139.499959342182"></path><path id="kity_path_477" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M515.5000044032931,4152.499959342182C523.5000044032931,4152.499959342182,523.5000044032931,4165.499959342182,531.5000044032931,4165.499959342182"></path><path id="kity_path_479" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4197.499959342182C271.50000440329313,4197.499959342182,271.50000440329313,4204.499959342182,279.50000440329313,4204.499959342182"></path><path id="kity_path_481" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M375.50000440329313,4204.499959342182C383.50000440329313,4204.499959342182,383.50000440329313,4191.499959342182,391.50000440329313,4191.499959342182"></path><path id="kity_path_483" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M375.50000440329313,4204.499959342182C383.50000440329313,4204.499959342182,383.50000440329313,4217.499959342182,391.50000440329313,4217.499959342182"></path><path id="kity_path_485" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M263.50000440329313,4197.499959342182C271.50000440329313,4197.499959342182,271.50000440329313,4243.499959342182,279.50000440329313,4243.499959342182"></path><path id="kity_path_487" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M211.50000440329313,4207.499959342182C219.50000440329313,4207.499959342182,219.50000440329313,4327.499959342182,227.50000440329313,4327.499959342182"></path><path id="kity_path_489" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,4327.499959342182C270.50000440329313,4327.499959342182,270.50000440329313,4269.499959342182,278.50000440329313,4269.499959342182"></path><path id="kity_path_491" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,4327.499959342182C270.50000440329313,4327.499959342182,270.50000440329313,4295.499959342182,278.50000440329313,4295.499959342182"></path><path id="kity_path_493" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,4327.499959342182C270.50000440329313,4327.499959342182,270.50000440329313,4321.499959342182,278.50000440329313,4321.499959342182"></path><path id="kity_path_495" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,4327.499959342182C270.50000440329313,4327.499959342182,270.50000440329313,4347.499959342182,278.50000440329313,4347.499959342182"></path><path id="kity_path_497" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M262.50000440329313,4327.499959342182C270.50000440329313,4327.499959342182,270.50000440329313,4386.499959342182,278.50000440329313,4386.499959342182"></path><path id="kity_path_499" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M631.5000044032931,4386.499959342182C639.5000044032931,4386.499959342182,639.5000044032931,4373.499959342182,647.5000044032931,4373.499959342182"></path><path id="kity_path_501" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M631.5000044032931,4386.499959342182C639.5000044032931,4386.499959342182,639.5000044032931,4399.499959342182,647.5000044032931,4399.499959342182"></path><path id="kity_path_503" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,988,0,0,0,82.50000440329313,4550.499959342182"></path><path id="kity_path_505" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,4550.499959342182C242.50000440329313,4550.499959342182,242.50000440329313,4446.499959342182,250.50000440329313,4446.499959342182"></path><path id="kity_path_507" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,4446.499959342182C294.50000440329313,4446.499959342182,294.50000440329313,4433.499959342182,302.50000440329313,4433.499959342182"></path><path id="kity_path_509" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M286.50000440329313,4446.499959342182C294.50000440329313,4446.499959342182,294.50000440329313,4459.499959342182,302.50000440329313,4459.499959342182"></path><path id="kity_path_511" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,4550.499959342182C242.50000440329313,4550.499959342182,242.50000440329313,4485.499959342182,250.50000440329313,4485.499959342182"></path><path id="kity_path_513" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M234.50000440329313,4550.499959342182C242.50000440329313,4550.499959342182,242.50000440329313,4654.499959342182,250.50000440329313,4654.499959342182"></path><path id="kity_path_515" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4511.499959342182,301.50000440329313,4511.499959342182"></path><path id="kity_path_517" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4537.499959342182,301.50000440329313,4537.499959342182"></path><path id="kity_path_519" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4563.499959342182,301.50000440329313,4563.499959342182"></path><path id="kity_path_521" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4589.499959342182,301.50000440329313,4589.499959342182"></path><path id="kity_path_523" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4615.499959342182,301.50000440329313,4615.499959342182"></path><path id="kity_path_525" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4641.499959342182,301.50000440329313,4641.499959342182"></path><path id="kity_path_527" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M335.50000440329313,4641.499959342182C343.50000440329313,4641.499959342182,343.50000440329313,4641.499959342182,351.50000440329313,4641.499959342182"></path><path id="kity_path_529" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4706.499959342182,301.50000440329313,4706.499959342182"></path><path id="kity_path_531" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M360.50000440329313,4706.499959342182C368.50000440329313,4706.499959342182,368.50000440329313,4667.499959342182,376.50000440329313,4667.499959342182"></path><path id="kity_path_533" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M360.50000440329313,4706.499959342182C368.50000440329313,4706.499959342182,368.50000440329313,4693.499959342182,376.50000440329313,4693.499959342182"></path><path id="kity_path_535" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M360.50000440329313,4706.499959342182C368.50000440329313,4706.499959342182,368.50000440329313,4719.499959342182,376.50000440329313,4719.499959342182"></path><path id="kity_path_537" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M360.50000440329313,4706.499959342182C368.50000440329313,4706.499959342182,368.50000440329313,4745.499959342182,376.50000440329313,4745.499959342182"></path><path id="kity_path_539" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4771.499959342182,301.50000440329313,4771.499959342182"></path><path id="kity_path_541" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M373.50000440329313,4771.499959342182C381.50000440329313,4771.499959342182,381.50000440329313,4771.499959342182,389.50000440329313,4771.499959342182"></path><path id="kity_path_543" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,4654.499959342182C293.50000440329313,4654.499959342182,293.50000440329313,4797.499959342182,301.50000440329313,4797.499959342182"></path><path id="kity_path_545" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M373.50000440329313,4797.499959342182C381.50000440329313,4797.499959342182,381.50000440329313,4797.499959342182,389.50000440329313,4797.499959342182"></path><path id="kity_path_547" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,1392,0,0,0,82.50000440329313,4954.499959342182"></path><path id="kity_path_549" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,4831.499959342182,232.50000440329313,4831.499959342182"></path><path id="kity_path_551" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,4857.499959342182,232.50000440329313,4857.499959342182"></path><path id="kity_path_553" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,4896.499959342182,232.50000440329313,4896.499959342182"></path><path id="kity_path_555" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M292.50000440329313,4896.499959342182C300.50000440329313,4896.499959342182,300.50000440329313,4883.499959342182,308.50000440329313,4883.499959342182"></path><path id="kity_path_557" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M292.50000440329313,4896.499959342182C300.50000440329313,4896.499959342182,300.50000440329313,4909.499959342182,308.50000440329313,4909.499959342182"></path><path id="kity_path_559" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,4961.499959342182,232.50000440329313,4961.499959342182"></path><path id="kity_path_561" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M292.50000440329313,4961.499959342182C300.50000440329313,4961.499959342182,300.50000440329313,4935.499959342182,308.50000440329313,4935.499959342182"></path><path id="kity_path_563" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M292.50000440329313,4961.499959342182C300.50000440329313,4961.499959342182,300.50000440329313,4961.499959342182,308.50000440329313,4961.499959342182"></path><path id="kity_path_565" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M292.50000440329313,4961.499959342182C300.50000440329313,4961.499959342182,300.50000440329313,4987.499959342182,308.50000440329313,4987.499959342182"></path><path id="kity_path_567" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,5013.499959342182,232.50000440329313,5013.499959342182"></path><path id="kity_path_569" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M216.50000440329313,4954.499959342182C224.50000440329313,4954.499959342182,224.50000440329313,5078.499959342182,232.50000440329313,5078.499959342182"></path><path id="kity_path_571" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M352.50000440329313,5078.499959342182C360.50000440329313,5078.499959342182,360.50000440329313,5052.499959342182,368.50000440329313,5052.499959342182"></path><path id="kity_path_573" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M428.50000440329313,5052.499959342182C436.50000440329313,5052.499959342182,436.50000440329313,5039.499959342182,444.50000440329313,5039.499959342182"></path><path id="kity_path_575" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M428.50000440329313,5052.499959342182C436.50000440329313,5052.499959342182,436.50000440329313,5065.499959342182,444.50000440329313,5065.499959342182"></path><path id="kity_path_577" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M352.50000440329313,5078.499959342182C360.50000440329313,5078.499959342182,360.50000440329313,5104.499959342182,368.50000440329313,5104.499959342182"></path><path id="kity_path_579" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M428.50000440329313,5104.499959342182C436.50000440329313,5104.499959342182,436.50000440329313,5091.499959342182,444.50000440329313,5091.499959342182"></path><path id="kity_path_581" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M428.50000440329313,5104.499959342182C436.50000440329313,5104.499959342182,436.50000440329313,5117.499959342182,444.50000440329313,5117.499959342182"></path><path id="kity_path_583" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,1800,0,0,0,82.50000440329313,5362.499959342182"></path><path id="kity_path_585" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M239.50000440329313,5362.499959342182C247.50000440329313,5362.499959342182,247.50000440329313,5237.499959342182,255.50000440329313,5237.499959342182"></path><path id="kity_path_587" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5150.499959342182,307.50000440329313,5150.499959342182"></path><path id="kity_path_589" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5176.499959342182,307.50000440329313,5176.499959342182"></path><path id="kity_path_591" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5202.499959342182,307.50000440329313,5202.499959342182"></path><path id="kity_path_593" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5228.499959342182,307.50000440329313,5228.499959342182"></path><path id="kity_path_595" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5254.499959342182,307.50000440329313,5254.499959342182"></path><path id="kity_path_597" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5289.499959342182,307.50000440329313,5289.499959342182"></path><path id="kity_path_599" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M291.50000440329313,5237.499959342182C299.50000440329313,5237.499959342182,299.50000440329313,5324.499959342182,307.50000440329313,5324.499959342182"></path><path id="kity_path_601" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M239.50000440329313,5362.499959342182C247.50000440329313,5362.499959342182,247.50000440329313,5376.499959342182,255.50000440329313,5376.499959342182"></path><path id="kity_path_603" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M497.50000440329313,5376.499959342182C505.50000440329313,5376.499959342182,505.50000440329313,5350.499959342182,513.5000044032931,5350.499959342182"></path><path id="kity_path_605" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M497.50000440329313,5376.499959342182C505.50000440329313,5376.499959342182,505.50000440329313,5376.499959342182,513.5000044032931,5376.499959342182"></path><path id="kity_path_607" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M497.50000440329313,5376.499959342182C505.50000440329313,5376.499959342182,505.50000440329313,5402.499959342182,513.5000044032931,5402.499959342182"></path><path id="kity_path_609" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M239.50000440329313,5362.499959342182C247.50000440329313,5362.499959342182,247.50000440329313,5487.499959342182,255.50000440329313,5487.499959342182"></path><path id="kity_path_611" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M290.50000440329313,5487.499959342182C298.50000440329313,5487.499959342182,298.50000440329313,5429.499959342182,306.50000440329313,5429.499959342182"></path><path id="kity_path_613" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M290.50000440329313,5487.499959342182C298.50000440329313,5487.499959342182,298.50000440329313,5455.499959342182,306.50000440329313,5455.499959342182"></path><path id="kity_path_615" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M290.50000440329313,5487.499959342182C298.50000440329313,5487.499959342182,298.50000440329313,5494.499959342182,306.50000440329313,5494.499959342182"></path><path id="kity_path_617" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M353.50000440329313,5494.499959342182C361.50000440329313,5494.499959342182,361.50000440329313,5481.499959342182,369.50000440329313,5481.499959342182"></path><path id="kity_path_619" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M353.50000440329313,5494.499959342182C361.50000440329313,5494.499959342182,361.50000440329313,5507.499959342182,369.50000440329313,5507.499959342182"></path><path id="kity_path_621" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M290.50000440329313,5487.499959342182C298.50000440329313,5487.499959342182,298.50000440329313,5546.499959342182,306.50000440329313,5546.499959342182"></path><path id="kity_path_623" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M527.5000044032931,5546.499959342182C535.5000044032931,5546.499959342182,535.5000044032931,5533.499959342182,543.5000044032931,5533.499959342182"></path><path id="kity_path_625" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M527.5000044032931,5546.499959342182C535.5000044032931,5546.499959342182,535.5000044032931,5559.499959342182,543.5000044032931,5559.499959342182"></path><path id="kity_path_627" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,2241,0,0,0,82.50000440329313,5803.499959342182"></path><path id="kity_path_629" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5632.499959342182,249.50000440329313,5632.499959342182"></path><path id="kity_path_631" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,5632.499959342182C293.50000440329313,5632.499959342182,293.50000440329313,5593.499959342182,301.50000440329313,5593.499959342182"></path><path id="kity_path_633" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,5632.499959342182C293.50000440329313,5632.499959342182,293.50000440329313,5619.499959342182,301.50000440329313,5619.499959342182"></path><path id="kity_path_635" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,5632.499959342182C293.50000440329313,5632.499959342182,293.50000440329313,5645.499959342182,301.50000440329313,5645.499959342182"></path><path id="kity_path_637" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M285.50000440329313,5632.499959342182C293.50000440329313,5632.499959342182,293.50000440329313,5671.499959342182,301.50000440329313,5671.499959342182"></path><path id="kity_path_639" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5736.499959342182,249.50000440329313,5736.499959342182"></path><path id="kity_path_641" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M317.50000440329313,5736.499959342182C325.50000440329313,5736.499959342182,325.50000440329313,5697.499959342182,333.50000440329313,5697.499959342182"></path><path id="kity_path_643" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M317.50000440329313,5736.499959342182C325.50000440329313,5736.499959342182,325.50000440329313,5723.499959342182,333.50000440329313,5723.499959342182"></path><path id="kity_path_645" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M317.50000440329313,5736.499959342182C325.50000440329313,5736.499959342182,325.50000440329313,5749.499959342182,333.50000440329313,5749.499959342182"></path><path id="kity_path_647" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M317.50000440329313,5736.499959342182C325.50000440329313,5736.499959342182,325.50000440329313,5775.499959342182,333.50000440329313,5775.499959342182"></path><path id="kity_path_649" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5814.499959342182,249.50000440329313,5814.499959342182"></path><path id="kity_path_651" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M677.5000044032931,5814.499959342182C685.5000044032931,5814.499959342182,685.5000044032931,5801.499959342182,693.5000044032931,5801.499959342182"></path><path id="kity_path_653" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M677.5000044032931,5814.499959342182C685.5000044032931,5814.499959342182,685.5000044032931,5827.499959342182,693.5000044032931,5827.499959342182"></path><path id="kity_path_655" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5853.499959342182,249.50000440329313,5853.499959342182"></path><path id="kity_path_657" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5901.499959342182,249.50000440329313,5901.499959342182"></path><path id="kity_path_659" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M309.50000440329313,5901.499959342182C317.50000440329313,5901.499959342182,317.50000440329313,5879.499959342182,325.50000440329313,5879.499959342182"></path><path id="kity_path_661" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M309.50000440329313,5901.499959342182C317.50000440329313,5901.499959342182,317.50000440329313,5914.499959342182,325.50000440329313,5914.499959342182"></path><path id="kity_path_663" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5949.499959342182,249.50000440329313,5949.499959342182"></path><path id="kity_path_665" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M308.50000440329313,5949.499959342182C316.50000440329313,5949.499959342182,316.50000440329313,5949.499959342182,324.50000440329313,5949.499959342182"></path><path id="kity_path_667" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M233.50000440329313,5803.499959342182C241.50000440329313,5803.499959342182,241.50000440329313,5975.499959342182,249.50000440329313,5975.499959342182"></path><path id="kity_path_669" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M284.50000440329313,5975.499959342182C292.50000440329313,5975.499959342182,292.50000440329313,5975.499959342182,300.50000440329313,5975.499959342182"></path><path id="kity_path_671" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,2551,0,0,0,82.50000440329313,6113.499959342182"></path><path id="kity_path_673" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M322.50000440329313,6113.499959342182C330.50000440329313,6113.499959342182,330.50000440329313,6044.499959342182,338.50000440329313,6044.499959342182"></path><path id="kity_path_675" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M374.50000440329313,6044.499959342182C382.50000440329313,6044.499959342182,382.50000440329313,6009.499959342182,390.50000440329313,6009.499959342182"></path><path id="kity_path_677" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M374.50000440329313,6044.499959342182C382.50000440329313,6044.499959342182,382.50000440329313,6035.499959342182,390.50000440329313,6035.499959342182"></path><path id="kity_path_679" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M374.50000440329313,6044.499959342182C382.50000440329313,6044.499959342182,382.50000440329313,6070.499959342182,390.50000440329313,6070.499959342182"></path><path id="kity_path_681" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M322.50000440329313,6113.499959342182C330.50000440329313,6113.499959342182,330.50000440329313,6105.499959342182,338.50000440329313,6105.499959342182"></path><path id="kity_path_683" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M322.50000440329313,6113.499959342182C330.50000440329313,6113.499959342182,330.50000440329313,6131.499959342182,338.50000440329313,6131.499959342182"></path><path id="kity_path_685" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M322.50000440329313,6113.499959342182C330.50000440329313,6113.499959342182,330.50000440329313,6183.499959342182,338.50000440329313,6183.499959342182"></path><path id="kity_path_687" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M570.5000044032931,6183.499959342182C578.5000044032931,6183.499959342182,578.5000044032931,6157.499959342182,586.5000044032931,6157.499959342182"></path><path id="kity_path_689" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M570.5000044032931,6183.499959342182C578.5000044032931,6183.499959342182,578.5000044032931,6183.499959342182,586.5000044032931,6183.499959342182"></path><path id="kity_path_691" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M570.5000044032931,6183.499959342182C578.5000044032931,6183.499959342182,578.5000044032931,6209.499959342182,586.5000044032931,6209.499959342182"></path><path id="kity_path_693" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,2792,0,0,0,82.50000440329313,6354.499959342182"></path><path id="kity_path_695" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6243.499959342182,286.50000440329313,6243.499959342182"></path><path id="kity_path_697" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6278.499959342182,286.50000440329313,6278.499959342182"></path><path id="kity_path_699" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6313.499959342182,286.50000440329313,6313.499959342182"></path><path id="kity_path_701" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6339.499959342182,286.50000440329313,6339.499959342182"></path><path id="kity_path_703" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6365.499959342182,286.50000440329313,6365.499959342182"></path><path id="kity_path_705" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6391.499959342182,286.50000440329313,6391.499959342182"></path><path id="kity_path_707" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M270.50000440329313,6354.499959342182C278.50000440329313,6354.499959342182,278.50000440329313,6465.499959342182,286.50000440329313,6465.499959342182"></path><path id="kity_path_709" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M505.50000440329313,6465.499959342182C513.5000044032931,6465.499959342182,513.5000044032931,6417.499959342182,521.5000044032931,6417.499959342182"></path><path id="kity_path_711" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M505.50000440329313,6465.499959342182C513.5000044032931,6465.499959342182,513.5000044032931,6452.499959342182,521.5000044032931,6452.499959342182"></path><path id="kity_path_713" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M505.50000440329313,6465.499959342182C513.5000044032931,6465.499959342182,513.5000044032931,6513.499959342182,521.5000044032931,6513.499959342182"></path><path id="kity_path_715" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M557.5000044032931,6513.499959342182C565.5000044032931,6513.499959342182,565.5000044032931,6487.499959342182,573.5000044032931,6487.499959342182"></path><path id="kity_path_717" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M662.5000044032931,6487.499959342182C670.5000044032931,6487.499959342182,670.5000044032931,6487.499959342182,678.5000044032931,6487.499959342182"></path><path id="kity_path_719" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M557.5000044032931,6513.499959342182C565.5000044032931,6513.499959342182,565.5000044032931,6513.499959342182,573.5000044032931,6513.499959342182"></path><path id="kity_path_721" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M674.5000044032931,6513.499959342182C682.5000044032931,6513.499959342182,682.5000044032931,6513.499959342182,690.5000044032931,6513.499959342182"></path><path id="kity_path_723" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M557.5000044032931,6513.499959342182C565.5000044032931,6513.499959342182,565.5000044032931,6539.499959342182,573.5000044032931,6539.499959342182"></path><path id="kity_path_725" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3037,0,0,0,82.50000440329313,6599.499959342182"></path><path id="kity_path_727" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M185.50000440329313,6599.499959342182C193.50000440329313,6599.499959342182,193.50000440329313,6573.499959342182,201.50000440329313,6573.499959342182"></path><path id="kity_path_729" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M237.50000440329313,6573.499959342182C245.50000440329313,6573.499959342182,245.50000440329313,6573.499959342182,253.50000440329313,6573.499959342182"></path><path id="kity_path_731" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M185.50000440329313,6599.499959342182C193.50000440329313,6599.499959342182,193.50000440329313,6599.499959342182,201.50000440329313,6599.499959342182"></path><path id="kity_path_733" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M392.50000440329313,6599.499959342182C400.50000440329313,6599.499959342182,400.50000440329313,6599.499959342182,408.50000440329313,6599.499959342182"></path><path id="kity_path_735" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M185.50000440329313,6599.499959342182C193.50000440329313,6599.499959342182,193.50000440329313,6625.499959342182,201.50000440329313,6625.499959342182"></path><path id="kity_path_737" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M236.50000440329313,6625.499959342182C244.50000440329313,6625.499959342182,244.50000440329313,6625.499959342182,252.50000440329313,6625.499959342182"></path><path id="kity_path_739" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3168,0,0,0,82.50000440329313,6730.499959342182"></path><path id="kity_path_741" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M223.50000440329313,6730.499959342182C231.50000440329313,6730.499959342182,231.50000440329313,6659.499959342182,239.50000440329313,6659.499959342182"></path><path id="kity_path_743" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M275.50000440329313,6659.499959342182C283.50000440329313,6659.499959342182,283.50000440329313,6659.499959342182,291.50000440329313,6659.499959342182"></path><path id="kity_path_745" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M223.50000440329313,6730.499959342182C231.50000440329313,6730.499959342182,231.50000440329313,6685.499959342182,239.50000440329313,6685.499959342182"></path><path id="kity_path_747" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M275.50000440329313,6685.499959342182C283.50000440329313,6685.499959342182,283.50000440329313,6685.499959342182,291.50000440329313,6685.499959342182"></path><path id="kity_path_749" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M223.50000440329313,6730.499959342182C231.50000440329313,6730.499959342182,231.50000440329313,6802.499959342182,239.50000440329313,6802.499959342182"></path><path id="kity_path_751" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6711.499959342182,381.50000440329313,6711.499959342182"></path><path id="kity_path_753" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6737.499959342182,381.50000440329313,6737.499959342182"></path><path id="kity_path_755" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6763.499959342182,381.50000440329313,6763.499959342182"></path><path id="kity_path_757" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6789.499959342182,381.50000440329313,6789.499959342182"></path><path id="kity_path_759" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6828.499959342182,381.50000440329313,6828.499959342182"></path><path id="kity_path_761" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M475.50000440329313,6828.499959342182C483.50000440329313,6828.499959342182,483.50000440329313,6815.499959342182,491.50000440329313,6815.499959342182"></path><path id="kity_path_763" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M574.5000044032931,6815.499959342182C582.5000044032931,6815.499959342182,582.5000044032931,6815.499959342182,590.5000044032931,6815.499959342182"></path><path id="kity_path_765" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M475.50000440329313,6828.499959342182C483.50000440329313,6828.499959342182,483.50000440329313,6841.499959342182,491.50000440329313,6841.499959342182"></path><path id="kity_path_767" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M551.5000044032931,6841.499959342182C559.5000044032931,6841.499959342182,559.5000044032931,6841.499959342182,567.5000044032931,6841.499959342182"></path><path id="kity_path_769" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M365.50000440329313,6802.499959342182C373.50000440329313,6802.499959342182,373.50000440329313,6893.499959342182,381.50000440329313,6893.499959342182"></path><path id="kity_path_771" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M581.5000044032931,6893.499959342182C589.5000044032931,6893.499959342182,589.5000044032931,6867.499959342182,597.5000044032931,6867.499959342182"></path><path id="kity_path_773" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M581.5000044032931,6893.499959342182C589.5000044032931,6893.499959342182,589.5000044032931,6893.499959342182,597.5000044032931,6893.499959342182"></path><path id="kity_path_775" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M581.5000044032931,6893.499959342182C589.5000044032931,6893.499959342182,589.5000044032931,6919.499959342182,597.5000044032931,6919.499959342182"></path><path id="kity_path_777" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M43.50000440329313,3562.4999593421817A39,3482,0,0,0,82.50000440329313,7044.499959342182"></path><path id="kity_path_779" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,6953.499959342182,169.50000440329313,6953.499959342182"></path><path id="kity_path_781" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,6979.499959342182,169.50000440329313,6979.499959342182"></path><path id="kity_path_783" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7005.499959342182,169.50000440329313,7005.499959342182"></path><path id="kity_path_785" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7031.499959342182,169.50000440329313,7031.499959342182"></path><path id="kity_path_787" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7057.499959342182,169.50000440329313,7057.499959342182"></path><path id="kity_path_789" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7083.499959342182,169.50000440329313,7083.499959342182"></path><path id="kity_path_791" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7109.499959342182,169.50000440329313,7109.499959342182"></path><path id="kity_path_793" fill="none" stroke="rgb(115, 191, 118)" stroke-width="1" d="M153.50000440329313,7044.499959342182C161.50000440329313,7044.499959342182,161.50000440329313,7135.499959342182,169.50000440329313,7135.499959342182"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 191, 118)" stroke="rgb(57, 96, 58)" d="M25.500004403293133,3548.4999593421817h36a5,5,0,0,1,5,5v18a5,5,0,0,1,-5,5h-36a5,5,0,0,1,-5,-5v-18a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="3552.099959306419" x="32.50000440329313">Go</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M32.50000440329313,3562.4999593421817h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M32.50000440329313,3562.4999593421817h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_1964" fill="white" stroke="gray" d="M83.50000507384539,81.49990747123957A6,6,0,1,1,71.50000507384539,81.49990747123957A6,6,0,1,1,83.50000507384539,81.49990747123957"></path><path id="kity_path_1965" fill="none" stroke="gray" d="M73.00000507384539,81.49990747123957L82.00000507384539,81.49990747123957"></path></g><path id="node_outline7" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,68.49990747123957h64a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-64a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text7" fill="black"><text id="kity_text_805" text-rendering="inherit" font-size="14" dy=".8em" y="72.39990743994713" x="104.50000547617674">特性</text></g></g><g id="minder_node3"><g id="node_expander1" style="cursor: pointer;" display="none"><path id="kity_path_1949" fill="white" stroke="gray" d="M170.5000063702464,29.499906696379185A6,6,0,1,1,158.5000063702464,29.499906696379185A6,6,0,1,1,170.5000063702464,29.499906696379185"></path><path id="kity_path_1950" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M175.50000653415918,20.499906696379185h73a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-73a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_795" text-rendering="inherit" font-size="12" dy=".8em" y="21.699906669557095" x="175.50000653415918">自动垃圾回收</text></g></g><g id="minder_node4"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_1952" fill="white" stroke="gray" d="M170.5000063702464,55.499907083809376A6,6,0,1,1,158.5000063702464,55.499907083809376A6,6,0,1,1,170.5000063702464,55.499907083809376"></path><path id="kity_path_1953" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M175.50000653415918,46.499907083809376h73a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-73a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_797" text-rendering="inherit" font-size="12" dy=".8em" y="47.699907056987286" x="175.50000653415918">函数多返回值</text></g></g><g id="minder_node5"><g id="node_expander3" style="cursor: pointer;" display="none"><path id="kity_path_1955" fill="white" stroke="gray" d="M170.5000063702464,81.49990747123957A6,6,0,1,1,158.5000063702464,81.49990747123957A6,6,0,1,1,170.5000063702464,81.49990747123957"></path><path id="kity_path_1956" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M175.50000653415918,72.49990747123957h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_799" text-rendering="inherit" font-size="12" dy=".8em" y="73.69990744441748" x="175.50000653415918">并发编程</text></g></g><g id="minder_node6"><g id="node_expander4" style="cursor: pointer;" display="none"><path id="kity_path_1958" fill="white" stroke="gray" d="M170.5000063702464,107.49990785866976A6,6,0,1,1,158.5000063702464,107.49990785866976A6,6,0,1,1,170.5000063702464,107.49990785866976"></path><path id="kity_path_1959" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M175.50000653415918,98.49990785866976h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_801" text-rendering="inherit" font-size="12" dy=".8em" y="99.69990783184767" x="175.50000653415918">反射</text></g></g><g id="minder_node7"><g id="node_expander5" style="cursor: pointer;" display="none"><path id="kity_path_1961" fill="white" stroke="gray" d="M170.5000063702464,133.49990824609995A6,6,0,1,1,158.5000063702464,133.49990824609995A6,6,0,1,1,170.5000063702464,133.49990824609995"></path><path id="kity_path_1962" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M175.50000653415918,124.49990824609995h61a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_803" text-rendering="inherit" font-size="12" dy=".8em" y="125.69990821927786" x="175.50000653415918">类型和接口</text></g></g><g id="minder_node8"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_1988" fill="white" stroke="gray" d="M83.50000507384539,212.49990942329168A6,6,0,1,1,71.50000507384539,212.49990942329168A6,6,0,1,1,83.50000507384539,212.49990942329168"></path><path id="kity_path_1989" fill="none" stroke="gray" d="M73.00000507384539,212.49990942329168L82.00000507384539,212.49990942329168"></path></g><path id="node_outline15" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,199.49990942329168h90a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-90a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text15" fill="black"><text id="kity_text_821" text-rendering="inherit" font-size="14" dy=".8em" y="203.39990939199924" x="104.50000547617674">语言结构</text></g></g><g id="minder_node9"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_1967" fill="white" stroke="gray" d="M196.5000067576766,167.49990875273943A6,6,0,1,1,184.5000067576766,167.49990875273943A6,6,0,1,1,196.5000067576766,167.49990875273943"></path><path id="kity_path_1968" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M201.50000692158937,158.49990875273943h37a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-37a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_807" text-rendering="inherit" font-size="12" dy=".8em" y="159.69990872591734" x="201.50000692158937">包声明</text></g></g><g id="minder_node10"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_1970" fill="white" stroke="gray" d="M196.5000067576766,193.49990914016962A6,6,0,1,1,184.5000067576766,193.49990914016962A6,6,0,1,1,196.5000067576766,193.49990914016962"></path><path id="kity_path_1971" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M201.50000692158937,184.49990914016962h37a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-37a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_809" text-rendering="inherit" font-size="12" dy=".8em" y="185.69990911334753" x="201.50000692158937">引入包</text></g></g><g id="minder_node11"><g id="node_expander13" style="cursor: pointer;"><path id="kity_path_1985" fill="white" stroke="gray" d="M196.5000067576766,258.4999101087451A6,6,0,1,1,184.5000067576766,258.4999101087451A6,6,0,1,1,196.5000067576766,258.4999101087451"></path><path id="kity_path_1986" fill="none" stroke="gray" d="M186.0000067576766,258.4999101087451L195.0000067576766,258.4999101087451"></path></g><path id="node_outline14" fill="none" stroke="none" d="M201.50000692158937,249.4999101087451h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_819" text-rendering="inherit" font-size="12" dy=".8em" y="250.699910081923" x="201.50000692158937">程序语句</text></g></g><g id="minder_node12"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_1973" fill="white" stroke="gray" d="M271.5000078752637,219.4999095275998A6,6,0,1,1,259.5000078752637,219.4999095275998A6,6,0,1,1,271.5000078752637,219.4999095275998"></path><path id="kity_path_1974" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M276.50000803917646,210.4999095275998h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_811" text-rendering="inherit" font-size="12" dy=".8em" y="211.69990950077772" x="276.50000803917646">函数</text></g></g><g id="minder_node13"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_1976" fill="white" stroke="gray" d="M271.5000078752637,245.49990991503A6,6,0,1,1,259.5000078752637,245.49990991503A6,6,0,1,1,271.5000078752637,245.49990991503"></path><path id="kity_path_1977" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M276.50000803917646,236.49990991503h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_813" text-rendering="inherit" font-size="12" dy=".8em" y="237.6999098882079" x="276.50000803917646">变量</text></g></g><g id="minder_node14"><g id="node_expander11" style="cursor: pointer;" display="none"><path id="kity_path_1979" fill="white" stroke="gray" d="M271.5000078752637,271.4999103024602A6,6,0,1,1,259.5000078752637,271.4999103024602A6,6,0,1,1,271.5000078752637,271.4999103024602"></path><path id="kity_path_1980" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M276.50000803917646,262.4999103024602h72a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-72a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_815" text-rendering="inherit" font-size="12" dy=".8em" y="263.6999102756381" x="276.50000803917646">语句&amp;表达式</text></g></g><g id="minder_node15"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_1982" fill="white" stroke="gray" d="M271.5000078752637,297.4999106898904A6,6,0,1,1,259.5000078752637,297.4999106898904A6,6,0,1,1,271.5000078752637,297.4999106898904"></path><path id="kity_path_1983" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M276.50000803917646,288.4999106898904h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_817" text-rendering="inherit" font-size="12" dy=".8em" y="289.6999106630683" x="276.50000803917646">注释</text></g></g><g id="minder_node16"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_2036" fill="white" stroke="gray" d="M83.50000507384539,448.4999129399657A6,6,0,1,1,71.50000507384539,448.4999129399657A6,6,0,1,1,83.50000507384539,448.4999129399657"></path><path id="kity_path_2037" fill="none" stroke="gray" d="M73.00000507384539,448.4999129399657L82.00000507384539,448.4999129399657"></path></g><path id="node_outline31" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,435.4999129399657h91a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-91a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text31" fill="black"><text id="kity_text_853" text-rendering="inherit" font-size="14" dy=".8em" y="439.3999129086733" x="104.50000547617674">基础语法</text></g></g><g id="minder_node17"><g id="node_expander15" style="cursor: pointer;" display="none"><path id="kity_path_1991" fill="white" stroke="gray" d="M197.50000677257776,331.49991119652987A6,6,0,1,1,185.50000677257776,331.49991119652987A6,6,0,1,1,197.50000677257776,331.49991119652987"></path><path id="kity_path_1992" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M202.50000693649054,322.49991119652987h583a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-583a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_823" text-rendering="inherit" font-size="12" dy=".8em" y="323.6999111697078" x="202.50000693649054">行分隔符：一行一句，无需分号;结尾，除非打算将多个语句写在同一行的时候使用;认为区分（不鼓励该写法）</text></g></g><g id="minder_node18"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_2000" fill="white" stroke="gray" d="M197.50000677257776,370.49991177767515A6,6,0,1,1,185.50000677257776,370.49991177767515A6,6,0,1,1,197.50000677257776,370.49991177767515"></path><path id="kity_path_2001" fill="none" stroke="gray" d="M187.00000677257776,370.49991177767515L196.00000677257776,370.49991177767515"></path></g><path id="node_outline19" fill="none" stroke="none" d="M202.50000693649054,361.49991177767515h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_829" text-rendering="inherit" font-size="12" dy=".8em" y="362.69991175085306" x="202.50000693649054">注释</text></g></g><g id="minder_node19"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_1994" fill="white" stroke="gray" d="M249.50000754743814,357.49991158396006A6,6,0,1,1,237.50000754743814,357.49991158396006A6,6,0,1,1,249.50000754743814,357.49991158396006"></path><path id="kity_path_1995" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M254.50000771135092,348.49991158396006h71a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-71a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_825" text-rendering="inherit" font-size="12" dy=".8em" y="349.69991155713797" x="254.50000771135092">单行注释：//</text></g></g><g id="minder_node20"><g id="node_expander17" style="cursor: pointer;" display="none"><path id="kity_path_1997" fill="white" stroke="gray" d="M249.50000754743814,383.49991197139025A6,6,0,1,1,237.50000754743814,383.49991197139025A6,6,0,1,1,249.50000754743814,383.49991197139025"></path><path id="kity_path_1998" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M254.50000771135092,374.49991197139025h97a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-97a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_827" text-rendering="inherit" font-size="12" dy=".8em" y="375.69991194456816" x="254.50000771135092">多行注释：/* ... */</text></g></g><g id="minder_node21"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_2012" fill="white" stroke="gray" d="M197.50000677257776,435.49991274625063A6,6,0,1,1,185.50000677257776,435.49991274625063A6,6,0,1,1,197.50000677257776,435.49991274625063"></path><path id="kity_path_2013" fill="none" stroke="gray" d="M187.00000677257776,435.49991274625063L196.00000677257776,435.49991274625063"></path></g><path id="node_outline23" fill="none" stroke="none" d="M202.50000693649054,426.49991274625063h265a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-265a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_837" text-rendering="inherit" font-size="12" dy=".8em" y="427.69991271942854" x="202.50000693649054">标识符（常量、变量、类型、函数名、结构字段）</text></g></g><g id="minder_node22"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_2003" fill="white" stroke="gray" d="M488.50001110881567,409.49991235882044A6,6,0,1,1,476.50001110881567,409.49991235882044A6,6,0,1,1,488.50001110881567,409.49991235882044"></path><path id="kity_path_2004" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M493.50001127272844,400.49991235882044h264a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-264a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_831" text-rendering="inherit" font-size="12" dy=".8em" y="401.69991233199835" x="493.50001127272844">字母数字下划线：不能数字开头，不能使用关键字</text></g></g><g id="minder_node23"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_2006" fill="white" stroke="gray" d="M488.50001110881567,435.49991274625063A6,6,0,1,1,476.50001110881567,435.49991274625063A6,6,0,1,1,488.50001110881567,435.49991274625063"></path><path id="kity_path_2007" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M493.50001127272844,426.49991274625063h276a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-276a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_833" text-rendering="inherit" font-size="12" dy=".8em" y="427.69991271942854" x="493.50001127272844">大写字母开头（public）：可以被外部包导入并使用</text></g></g><g id="minder_node24"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_2009" fill="white" stroke="gray" d="M488.50001110881567,461.4999131336808A6,6,0,1,1,476.50001110881567,461.4999131336808A6,6,0,1,1,488.50001110881567,461.4999131336808"></path><path id="kity_path_2010" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M493.50001127272844,452.4999131336808h237a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-237a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_835" text-rendering="inherit" font-size="12" dy=".8em" y="453.69991310685873" x="493.50001127272844">小写字母开头（protected）：对包外不可见</text></g></g><g id="minder_node25"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_2021" fill="white" stroke="gray" d="M197.50000677257776,500.4999137148261A6,6,0,1,1,185.50000677257776,500.4999137148261A6,6,0,1,1,197.50000677257776,500.4999137148261"></path><path id="kity_path_2022" fill="none" stroke="gray" d="M187.00000677257776,500.4999137148261L196.00000677257776,500.4999137148261"></path></g><path id="node_outline26" fill="none" stroke="none" d="M202.50000693649054,491.4999137148261h36a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-36a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="black"><text id="kity_text_843" text-rendering="inherit" font-size="12" dy=".8em" y="492.699913688004" x="202.50000693649054">关键字</text></g></g><g id="minder_node26"><g id="node_expander23" style="cursor: pointer;" display="none"><path id="kity_path_2015" fill="white" stroke="gray" d="M259.50000769644976,487.499913521111A6,6,0,1,1,247.50000769644976,487.499913521111A6,6,0,1,1,259.50000769644976,487.499913521111"></path><path id="kity_path_2016" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="none" stroke="none" d="M264.50000786036253,478.499913521111h98a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_839" text-rendering="inherit" font-size="12" dy=".8em" y="479.6999134942889" x="264.50000786036253">25个关键或保留字</text></g></g><g id="minder_node27"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_2018" fill="white" stroke="gray" d="M259.50000769644976,513.4999139085412A6,6,0,1,1,247.50000769644976,513.4999139085412A6,6,0,1,1,259.50000769644976,513.4999139085412"></path><path id="kity_path_2019" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M264.50000786036253,504.4999139085412h98a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_841" text-rendering="inherit" font-size="12" dy=".8em" y="505.6999138817191" x="264.50000786036253">36个预定义标识符</text></g></g><g id="minder_node28"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_2027" fill="white" stroke="gray" d="M197.50000677257776,539.4999142959714A6,6,0,1,1,185.50000677257776,539.4999142959714A6,6,0,1,1,197.50000677257776,539.4999142959714"></path><path id="kity_path_2028" fill="none" stroke="gray" d="M187.00000677257776,539.4999142959714L196.00000677257776,539.4999142959714"></path></g><path id="node_outline28" fill="none" stroke="none" d="M202.50000693649054,530.4999142959714h37a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-37a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="black"><text id="kity_text_847" text-rendering="inherit" font-size="12" dy=".8em" y="531.6999142691493" x="202.50000693649054">分隔符</text></g></g><g id="minder_node29"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_2024" fill="white" stroke="gray" d="M260.5000077113509,539.4999142959714A6,6,0,1,1,248.50000771135092,539.4999142959714A6,6,0,1,1,260.5000077113509,539.4999142959714"></path><path id="kity_path_2025" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M265.5000078752637,530.4999142959714h159a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-159a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_845" text-rendering="inherit" font-size="12" dy=".8em" y="531.6999142691493" x="265.5000078752637">括号 ()，中括号 [] 和大括号 {}</text></g></g><g id="minder_node30"><g id="node_expander29" style="cursor: pointer;"><path id="kity_path_2033" fill="white" stroke="gray" d="M197.50000677257776,565.4999146834016A6,6,0,1,1,185.50000677257776,565.4999146834016A6,6,0,1,1,197.50000677257776,565.4999146834016"></path><path id="kity_path_2034" fill="none" stroke="gray" d="M187.00000677257776,565.4999146834016L196.00000677257776,565.4999146834016"></path></g><path id="node_outline30" fill="none" stroke="none" d="M202.50000693649054,556.4999146834016h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="black"><text id="kity_text_851" text-rendering="inherit" font-size="12" dy=".8em" y="557.6999146565795" x="202.50000693649054">空格</text></g></g><g id="minder_node31"><g id="node_expander28" style="cursor: pointer;" display="none"><path id="kity_path_2030" fill="white" stroke="gray" d="M249.50000754743814,565.4999146834016A6,6,0,1,1,237.50000754743814,565.4999146834016A6,6,0,1,1,249.50000754743814,565.4999146834016"></path><path id="kity_path_2031" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="none" stroke="none" d="M254.50000771135092,556.4999146834016h145a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-145a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="black"><text id="kity_text_849" text-rendering="inherit" font-size="12" dy=".8em" y="557.6999146565795" x="254.50000771135092">变量声明必须使用空格隔开</text></g></g><g id="minder_node32"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_2090" fill="white" stroke="gray" d="M83.50000507384539,794.4999180957675A6,6,0,1,1,71.50000507384539,794.4999180957675A6,6,0,1,1,83.50000507384539,794.4999180957675"></path><path id="kity_path_2091" fill="none" stroke="gray" d="M73.00000507384539,794.4999180957675L82.00000507384539,794.4999180957675"></path></g><path id="node_outline49" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,781.4999180957675h91a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-91a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text49" fill="black"><text id="kity_text_889" text-rendering="inherit" font-size="14" dy=".8em" y="785.3999180644751" x="104.50000547617674">数据类型</text></g></g><g id="minder_node33"><g id="node_expander36" style="cursor: pointer;"><path id="kity_path_2054" fill="white" stroke="gray" d="M197.50000677257776,651.4999159649014A6,6,0,1,1,185.50000677257776,651.4999159649014A6,6,0,1,1,197.50000677257776,651.4999159649014"></path><path id="kity_path_2055" fill="none" stroke="gray" d="M187.00000677257776,651.4999159649014L196.00000677257776,651.4999159649014"></path></g><path id="node_outline37" fill="none" stroke="none" d="M202.50000693649054,642.4999159649014h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_865" text-rendering="inherit" font-size="12" dy=".8em" y="643.6999159380794" x="202.50000693649054">基本类型</text></g></g><g id="minder_node34"><g id="node_expander31" style="cursor: pointer;" display="none"><path id="kity_path_2039" fill="white" stroke="gray" d="M273.500007905066,599.4999151900411A6,6,0,1,1,261.500007905066,599.4999151900411A6,6,0,1,1,273.500007905066,599.4999151900411"></path><path id="kity_path_2040" fill="none" stroke="gray"></path></g><path id="node_outline32" fill="none" stroke="none" d="M278.5000080689788,590.4999151900411h111a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-111a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_855" text-rendering="inherit" font-size="12" dy=".8em" y="591.699915163219" x="278.5000080689788">布尔型：true、false</text></g></g><g id="minder_node35"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_2042" fill="white" stroke="gray" d="M273.500007905066,625.4999155774713A6,6,0,1,1,261.500007905066,625.4999155774713A6,6,0,1,1,273.500007905066,625.4999155774713"></path><path id="kity_path_2043" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M278.5000080689788,616.4999155774713h87a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-87a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_857" text-rendering="inherit" font-size="12" dy=".8em" y="617.6999155506492" x="278.5000080689788">整型：int、uint</text></g></g><g id="minder_node36"><g id="node_expander33" style="cursor: pointer;" display="none"><path id="kity_path_2045" fill="white" stroke="gray" d="M273.500007905066,651.4999159649014A6,6,0,1,1,261.500007905066,651.4999159649014A6,6,0,1,1,273.500007905066,651.4999159649014"></path><path id="kity_path_2046" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M278.5000080689788,642.4999159649014h141a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-141a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_859" text-rendering="inherit" font-size="12" dy=".8em" y="643.6999159380794" x="278.5000080689788">浮点型：float32、float64</text></g></g><g id="minder_node37"><g id="node_expander34" style="cursor: pointer;" display="none"><path id="kity_path_2048" fill="white" stroke="gray" d="M273.500007905066,677.4999163523316A6,6,0,1,1,261.500007905066,677.4999163523316A6,6,0,1,1,273.500007905066,677.4999163523316"></path><path id="kity_path_2049" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="none" stroke="none" d="M278.5000080689788,668.4999163523316h105a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-105a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text35" fill="black"><text id="kity_text_861" text-rendering="inherit" font-size="12" dy=".8em" y="669.6999163255095" x="278.5000080689788">字符串类型：string</text></g></g><g id="minder_node38"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_2051" fill="white" stroke="gray" d="M273.500007905066,703.4999167397618A6,6,0,1,1,261.500007905066,703.4999167397618A6,6,0,1,1,273.500007905066,703.4999167397618"></path><path id="kity_path_2052" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M278.5000080689788,694.4999167397618h498a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-498a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_863" text-rendering="inherit" font-size="12" dy=".8em" y="695.6999167129397" x="278.5000080689788">其他：byte（类似uint8）、rune（类似int32）、uintptr（无符号整型，用于存放一个指针）</text></g></g><g id="minder_node39"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_2081" fill="white" stroke="gray" d="M197.50000677257776,820.4999184831977A6,6,0,1,1,185.50000677257776,820.4999184831977A6,6,0,1,1,197.50000677257776,820.4999184831977"></path><path id="kity_path_2082" fill="none" stroke="gray" d="M187.00000677257776,820.4999184831977L196.00000677257776,820.4999184831977"></path></g><path id="node_outline46" fill="none" stroke="none" d="M202.50000693649054,811.4999184831977h79a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text46" fill="black"><text id="kity_text_883" text-rendering="inherit" font-size="12" dy=".8em" y="812.6999184563756" x="202.50000693649054">派生/高级类型</text></g></g><g id="minder_node40"><g id="node_expander37" style="cursor: pointer;" display="none"><path id="kity_path_2057" fill="white" stroke="gray" d="M302.5000083371997,729.499917127192A6,6,0,1,1,290.5000083371997,729.499917127192A6,6,0,1,1,302.5000083371997,729.499917127192"></path><path id="kity_path_2058" fill="none" stroke="gray"></path></g><path id="node_outline38" fill="none" stroke="none" d="M307.50000850111246,720.499917127192h78a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-78a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_867" text-rendering="inherit" font-size="12" dy=".8em" y="721.6999171003699" x="307.50000850111246">指针：Pointer</text></g></g><g id="minder_node41"><g id="node_expander38" style="cursor: pointer;" display="none"><path id="kity_path_2060" fill="white" stroke="gray" d="M302.5000083371997,755.4999175146222A6,6,0,1,1,290.5000083371997,755.4999175146222A6,6,0,1,1,302.5000083371997,755.4999175146222"></path><path id="kity_path_2061" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M307.50000850111246,746.4999175146222h68a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-68a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_869" text-rendering="inherit" font-size="12" dy=".8em" y="747.6999174878001" x="307.50000850111246">数组：Array</text></g></g><g id="minder_node42"><g id="node_expander39" style="cursor: pointer;" display="none"><path id="kity_path_2063" fill="white" stroke="gray" d="M302.5000083371997,781.4999179020524A6,6,0,1,1,290.5000083371997,781.4999179020524A6,6,0,1,1,302.5000083371997,781.4999179020524"></path><path id="kity_path_2064" fill="none" stroke="gray"></path></g><path id="node_outline40" fill="none" stroke="none" d="M307.50000850111246,772.4999179020524h63a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_871" text-rendering="inherit" font-size="12" dy=".8em" y="773.6999178752303" x="307.50000850111246">切片：Slice</text></g></g><g id="minder_node43"><g id="node_expander40" style="cursor: pointer;" display="none"><path id="kity_path_2066" fill="white" stroke="gray" d="M302.5000083371997,807.4999182894826A6,6,0,1,1,290.5000083371997,807.4999182894826A6,6,0,1,1,302.5000083371997,807.4999182894826"></path><path id="kity_path_2067" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M307.50000850111246,798.4999182894826h70a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_873" text-rendering="inherit" font-size="12" dy=".8em" y="799.6999182626605" x="307.50000850111246">结构：struct</text></g></g><g id="minder_node44"><g id="node_expander41" style="cursor: pointer;" display="none"><path id="kity_path_2069" fill="white" stroke="gray" d="M302.5000083371997,833.4999186769128A6,6,0,1,1,290.5000083371997,833.4999186769128A6,6,0,1,1,302.5000083371997,833.4999186769128"></path><path id="kity_path_2070" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="none" d="M307.50000850111246,824.4999186769128h84a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-84a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text42" fill="black"><text id="kity_text_875" text-rendering="inherit" font-size="12" dy=".8em" y="825.6999186500907" x="307.50000850111246">通道：Channel</text></g></g><g id="minder_node45"><g id="node_expander42" style="cursor: pointer;" display="none"><path id="kity_path_2072" fill="white" stroke="gray" d="M302.5000083371997,859.499919064343A6,6,0,1,1,290.5000083371997,859.499919064343A6,6,0,1,1,302.5000083371997,859.499919064343"></path><path id="kity_path_2073" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M307.50000850111246,850.499919064343h61a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text43" fill="black"><text id="kity_text_877" text-rendering="inherit" font-size="12" dy=".8em" y="851.6999190375209" x="307.50000850111246">函数：func</text></g></g><g id="minder_node46"><g id="node_expander43" style="cursor: pointer;" display="none"><path id="kity_path_2075" fill="white" stroke="gray" d="M302.5000083371997,885.4999194517732A6,6,0,1,1,290.5000083371997,885.4999194517732A6,6,0,1,1,302.5000083371997,885.4999194517732"></path><path id="kity_path_2076" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M307.50000850111246,876.4999194517732h87a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-87a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_879" text-rendering="inherit" font-size="12" dy=".8em" y="877.6999194249511" x="307.50000850111246">接口：interface</text></g></g><g id="minder_node47"><g id="node_expander44" style="cursor: pointer;" display="none"><path id="kity_path_2078" fill="white" stroke="gray" d="M302.5000083371997,911.4999198392034A6,6,0,1,1,290.5000083371997,911.4999198392034A6,6,0,1,1,302.5000083371997,911.4999198392034"></path><path id="kity_path_2079" fill="none" stroke="gray"></path></g><path id="node_outline45" fill="none" stroke="none" d="M307.50000850111246,902.4999198392034h63a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text45" fill="black"><text id="kity_text_881" text-rendering="inherit" font-size="12" dy=".8em" y="903.6999198123813" x="307.50000850111246">集合：Map</text></g></g><g id="minder_node48"><g id="node_expander47" style="cursor: pointer;"><path id="kity_path_2087" fill="white" stroke="gray" d="M197.50000677257776,937.4999202266335A6,6,0,1,1,185.50000677257776,937.4999202266335A6,6,0,1,1,197.50000677257776,937.4999202266335"></path><path id="kity_path_2088" fill="none" stroke="gray" d="M187.00000677257776,937.4999202266335L196.00000677257776,937.4999202266335"></path></g><path id="node_outline48" fill="none" stroke="none" d="M202.50000693649054,928.4999202266335h74a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text48" fill="black"><text id="kity_text_887" text-rendering="inherit" font-size="12" dy=".8em" y="929.6999201998115" x="202.50000693649054">数据类型转化</text></g></g><g id="minder_node49"><g id="node_expander46" style="cursor: pointer;" display="none"><path id="kity_path_2084" fill="white" stroke="gray" d="M297.5000082626939,937.4999202266335A6,6,0,1,1,285.5000082626939,937.4999202266335A6,6,0,1,1,297.5000082626939,937.4999202266335"></path><path id="kity_path_2085" fill="none" stroke="gray"></path></g><path id="node_outline47" fill="none" stroke="none" d="M302.50000842660666,928.4999202266335h144a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-144a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text47" fill="black"><text id="kity_text_885" text-rendering="inherit" font-size="12" dy=".8em" y="929.6999201998115" x="302.50000842660666">格式：type_name(表达式)</text></g></g><g id="minder_node50"><g id="node_expander78" style="cursor: pointer;"><path id="kity_path_2180" fill="white" stroke="gray" d="M83.50000507384539,1243.4999247863889A6,6,0,1,1,71.50000507384539,1243.4999247863889A6,6,0,1,1,83.50000507384539,1243.4999247863889"></path><path id="kity_path_2181" fill="none" stroke="gray" d="M73.00000507384539,1243.4999247863889L82.00000507384539,1243.4999247863889"></path></g><path id="node_outline79" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,1230.4999247863889h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text79" fill="black"><text id="kity_text_951" text-rendering="inherit" font-size="14" dy=".8em" y="1234.3999247550964" x="104.50000547617674">变量</text></g></g><g id="minder_node51"><g id="node_expander67" style="cursor: pointer;"><path id="kity_path_2147" fill="white" stroke="gray" d="M169.50000635534525,1083.499922402203A6,6,0,1,1,157.50000635534525,1083.499922402203A6,6,0,1,1,169.50000635534525,1083.499922402203"></path><path id="kity_path_2148" fill="none" stroke="gray" d="M159.00000635534525,1083.499922402203L168.00000635534525,1083.499922402203"></path></g><path id="node_outline68" fill="none" stroke="none" d="M174.50000651925802,1074.499922402203h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text68" fill="black"><text id="kity_text_929" text-rendering="inherit" font-size="12" dy=".8em" y="1075.699922375381" x="174.50000651925802">变量声明</text></g></g><g id="minder_node52"><g id="node_expander50" style="cursor: pointer;"><path id="kity_path_2096" fill="white" stroke="gray" d="M244.50000747293234,970.4999207183719A6,6,0,1,1,232.50000747293234,970.4999207183719A6,6,0,1,1,244.50000747293234,970.4999207183719"></path><path id="kity_path_2097" fill="none" stroke="gray" d="M234.00000747293234,970.4999207183719L243.00000747293234,970.4999207183719"></path></g><path id="node_outline51" fill="none" stroke="none" d="M249.5000076368451,961.4999207183719h143a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-143a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text51" fill="black"><text id="kity_text_893" text-rendering="inherit" font-size="12" dy=".8em" y="962.6999206915498" x="249.5000076368451">一般形式：var&#xa0;name&#xa0;type</text></g></g><g id="minder_node53"><g id="node_expander49" style="cursor: pointer;" display="none"><path id="kity_path_2093" fill="white" stroke="gray" d="M413.5000099912286,970.4999207183719A6,6,0,1,1,401.5000099912286,970.4999207183719A6,6,0,1,1,413.5000099912286,970.4999207183719"></path><path id="kity_path_2094" fill="none" stroke="gray"></path></g><path id="node_outline50" fill="none" stroke="none" d="M418.50001015514135,961.4999207183719h120a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-120a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text50" fill="black"><text id="kity_text_891" text-rendering="inherit" font-size="12" dy=".8em" y="962.6999206915498" x="418.50001015514135">示例：var&#xa0;a&#xa0;int = 100</text></g></g><g id="minder_node54"><g id="node_expander51" style="cursor: pointer;" display="none"><path id="kity_path_2099" fill="white" stroke="gray" d="M244.50000747293234,996.4999211058021A6,6,0,1,1,232.50000747293234,996.4999211058021A6,6,0,1,1,244.50000747293234,996.4999211058021"></path><path id="kity_path_2100" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M249.5000076368451,987.4999211058021h66a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-66a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text52" fill="black"><text id="kity_text_895" text-rendering="inherit" font-size="12" dy=".8em" y="988.69992107898" x="249.5000076368451">关键字：var</text></g></g><g id="minder_node55"><g id="node_expander59" style="cursor: pointer;"><path id="kity_path_2123" fill="white" stroke="gray" d="M244.50000747293234,1061.4999220743775A6,6,0,1,1,232.50000747293234,1061.4999220743775A6,6,0,1,1,244.50000747293234,1061.4999220743775"></path><path id="kity_path_2124" fill="none" stroke="gray" d="M234.00000747293234,1061.4999220743775L243.00000747293234,1061.4999220743775"></path></g><path id="node_outline60" fill="none" stroke="none" d="M249.5000076368451,1052.4999220743775h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text60" fill="black"><text id="kity_text_911" text-rendering="inherit" font-size="12" dy=".8em" y="1053.6999220475554" x="249.5000076368451">声明格式</text></g></g><g id="minder_node56"><g id="node_expander53" style="cursor: pointer;"><path id="kity_path_2105" fill="white" stroke="gray" d="M320.5000086054206,1022.4999214932323A6,6,0,1,1,308.5000086054206,1022.4999214932323A6,6,0,1,1,320.5000086054206,1022.4999214932323"></path><path id="kity_path_2106" fill="none" stroke="gray" d="M310.0000086054206,1022.4999214932323L319.0000086054206,1022.4999214932323"></path></g><path id="node_outline54" fill="none" stroke="none" d="M325.50000876933336,1013.4999214932323h216a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-216a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text54" fill="black"><text id="kity_text_899" text-rendering="inherit" font-size="12" dy=".8em" y="1014.6999214664102" x="325.50000876933336">可以指定变量类型不赋值（使用默认值）</text></g></g><g id="minder_node57"><g id="node_expander52" style="cursor: pointer;" display="none"><path id="kity_path_2102" fill="white" stroke="gray" d="M562.5000122115016,1022.4999214932323A6,6,0,1,1,550.5000122115016,1022.4999214932323A6,6,0,1,1,562.5000122115016,1022.4999214932323"></path><path id="kity_path_2103" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M567.5000123754144,1013.4999214932323h94a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text53" fill="black"><text id="kity_text_897" text-rendering="inherit" font-size="12" dy=".8em" y="1014.6999214664102" x="567.5000123754144">示例：var a bool</text></g></g><g id="minder_node58"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_2111" fill="white" stroke="gray" d="M320.5000086054206,1048.4999218806624A6,6,0,1,1,308.5000086054206,1048.4999218806624A6,6,0,1,1,320.5000086054206,1048.4999218806624"></path><path id="kity_path_2112" fill="none" stroke="gray" d="M310.0000086054206,1048.4999218806624L319.0000086054206,1048.4999218806624"></path></g><path id="node_outline56" fill="none" stroke="none" d="M325.50000876933336,1039.4999218806624h170a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-170a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text56" fill="black"><text id="kity_text_903" text-rendering="inherit" font-size="12" dy=".8em" y="1040.6999218538404" x="325.50000876933336">不指定变量类型，自动判断类型</text></g></g><g id="minder_node59"><g id="node_expander54" style="cursor: pointer;" display="none"><path id="kity_path_2108" fill="white" stroke="gray" d="M516.5000115260482,1048.4999218806624A6,6,0,1,1,504.5000115260482,1048.4999218806624A6,6,0,1,1,516.5000115260482,1048.4999218806624"></path><path id="kity_path_2109" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M521.500011689961,1039.4999218806624h131a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-131a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text55" fill="black"><text id="kity_text_901" text-rendering="inherit" font-size="12" dy=".8em" y="1040.6999218538404" x="521.500011689961">示例：var a = "golang"</text></g></g><g id="minder_node60"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_2117" fill="white" stroke="gray" d="M320.5000086054206,1074.4999222680926A6,6,0,1,1,308.5000086054206,1074.4999222680926A6,6,0,1,1,320.5000086054206,1074.4999222680926"></path><path id="kity_path_2118" fill="none" stroke="gray" d="M310.0000086054206,1074.4999222680926L319.0000086054206,1074.4999222680926"></path></g><path id="node_outline58" fill="none" stroke="none" d="M325.50000876933336,1065.4999222680926h485a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-485a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text58" fill="black"><text id="kity_text_907" text-rendering="inherit" font-size="12" dy=".8em" y="1066.6999222412705" x="325.50000876933336">可以省略var关键字，使用简短声明:=（首选形式），只能用于函数体内部（即为局部变量）</text></g></g><g id="minder_node61"><g id="node_expander56" style="cursor: pointer;" display="none"><path id="kity_path_2114" fill="white" stroke="gray" d="M831.500016219914,1074.4999222680926A6,6,0,1,1,819.500016219914,1074.4999222680926A6,6,0,1,1,831.500016219914,1074.4999222680926"></path><path id="kity_path_2115" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M836.5000163838267,1065.4999222680926h84a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-84a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text57" fill="black"><text id="kity_text_905" text-rendering="inherit" font-size="12" dy=".8em" y="1066.6999222412705" x="836.5000163838267">示例：a := 100</text></g></g><g id="minder_node62"><g id="node_expander58" style="cursor: pointer;" display="none"><path id="kity_path_2120" fill="white" stroke="gray" d="M320.5000086054206,1100.4999226555228A6,6,0,1,1,308.5000086054206,1100.4999226555228A6,6,0,1,1,320.5000086054206,1100.4999226555228"></path><path id="kity_path_2121" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M325.50000876933336,1091.4999226555228h615a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-615a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text59" fill="black"><text id="kity_text_909" text-rendering="inherit" font-size="12" dy=".8em" y="1092.6999226287007" x="325.50000876933336">多变量声明（不要求类型统一）：var name1, name2, name3 type&#xa0; 或者&#xa0;var name1, name2, name3 = v1, v2, v3</text></g></g><g id="minder_node63"><g id="node_expander66" style="cursor: pointer;"><path id="kity_path_2144" fill="white" stroke="gray" d="M244.50000747293234,1196.4999240860343A6,6,0,1,1,232.50000747293234,1196.4999240860343A6,6,0,1,1,244.50000747293234,1196.4999240860343"></path><path id="kity_path_2145" fill="none" stroke="gray" d="M234.00000747293234,1196.4999240860343L243.00000747293234,1196.4999240860343"></path></g><path id="node_outline67" fill="none" stroke="none" d="M249.5000076368451,1187.4999240860343h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text67" fill="black"><text id="kity_text_927" text-rendering="inherit" font-size="12" dy=".8em" y="1188.6999240592122" x="249.5000076368451">注意事项</text></g></g><g id="minder_node64"><g id="node_expander60" style="cursor: pointer;" display="none"><path id="kity_path_2126" fill="white" stroke="gray" d="M319.5000085905194,1126.499923042953A6,6,0,1,1,307.5000085905194,1126.499923042953A6,6,0,1,1,319.5000085905194,1126.499923042953"></path><path id="kity_path_2127" fill="none" stroke="gray"></path></g><path id="node_outline61" fill="none" stroke="none" d="M324.5000087544322,1117.499923042953h613a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-613a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text61" fill="black"><text id="kity_text_913" text-rendering="inherit" font-size="12" dy=".8em" y="1118.699923016131" x="324.5000087544322">同一代码块中不能对变量进行二次声明，会报错（或者声明初始化退化为赋值操作）；在变量未定义前使用也会报错</text></g></g><g id="minder_node65"><g id="node_expander61" style="cursor: pointer;" display="none"><path id="kity_path_2129" fill="white" stroke="gray" d="M319.5000085905194,1152.4999234303832A6,6,0,1,1,307.5000085905194,1152.4999234303832A6,6,0,1,1,319.5000085905194,1152.4999234303832"></path><path id="kity_path_2130" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M324.5000087544322,1143.4999234303832h361a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-361a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text62" fill="black"><text id="kity_text_915" text-rendering="inherit" font-size="12" dy=".8em" y="1144.6999234035611" x="324.5000087544322">局部变量声明、赋值后不使用也会报错；全局变量允许声明后不使用</text></g></g><g id="minder_node66"><g id="node_expander64" style="cursor: pointer;"><path id="kity_path_2138" fill="white" stroke="gray" d="M319.5000085905194,1191.4999240115285A6,6,0,1,1,307.5000085905194,1191.4999240115285A6,6,0,1,1,319.5000085905194,1191.4999240115285"></path><path id="kity_path_2139" fill="none" stroke="gray" d="M309.0000085905194,1191.4999240115285L318.0000085905194,1191.4999240115285"></path></g><path id="node_outline65" fill="none" stroke="none" d="M324.5000087544322,1182.4999240115285h121a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-121a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text65" fill="black"><text id="kity_text_921" text-rendering="inherit" font-size="12" dy=".8em" y="1183.6999239847064" x="324.5000087544322">多变量声明、并行赋值</text></g></g><g id="minder_node67"><g id="node_expander62" style="cursor: pointer;" display="none"><path id="kity_path_2132" fill="white" stroke="gray" d="M466.5000107809901,1178.4999238178134A6,6,0,1,1,454.5000107809901,1178.4999238178134A6,6,0,1,1,466.5000107809901,1178.4999238178134"></path><path id="kity_path_2133" fill="none" stroke="gray"></path></g><path id="node_outline63" fill="none" stroke="none" d="M471.5000109449029,1169.4999238178134h253a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text63" fill="black"><text id="kity_text_917" text-rendering="inherit" font-size="12" dy=".8em" y="1170.6999237909913" x="471.5000109449029">多变量声明（必须同一类型）示例：var a, b int</text></g></g><g id="minder_node68"><g id="node_expander63" style="cursor: pointer;" display="none"><path id="kity_path_2135" fill="white" stroke="gray" d="M466.5000107809901,1204.4999242052436A6,6,0,1,1,454.5000107809901,1204.4999242052436A6,6,0,1,1,466.5000107809901,1204.4999242052436"></path><path id="kity_path_2136" fill="none" stroke="gray"></path></g><path id="node_outline64" fill="none" stroke="none" d="M471.5000109449029,1195.4999242052436h195a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-195a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text64" fill="black"><text id="kity_text_919" text-rendering="inherit" font-size="12" dy=".8em" y="1196.6999241784215" x="471.5000109449029">并行赋值示例：a, b, c := 5, 7, "abc"</text></g></g><g id="minder_node69"><g id="node_expander65" style="cursor: pointer;" display="none"><path id="kity_path_2141" fill="white" stroke="gray" d="M319.5000085905194,1248.4999248608947A6,6,0,1,1,307.5000085905194,1248.4999248608947A6,6,0,1,1,319.5000085905194,1248.4999248608947"></path><path id="kity_path_2142" fill="none" stroke="gray"></path></g><path id="node_outline66" fill="none" stroke="none" d="M324.5000087544322,1221.4999248608947h535a5,5,0,0,1,5,5v44a5,5,0,0,1,-5,5h-535a5,5,0,0,1,-5,-5v-44a5,5,0,0,1,5,-5z"></path><g id="node_text66" fill="black"><text id="kity_text_923" text-rendering="inherit" font-size="12" dy=".8em" y="1222.6999248340726" x="324.5000087544322">1、定义在{}里面的变量时局部变量，只能在函数内使用；</text><text id="kity_text_924" text-rendering="inherit" font-size="12" dy=".8em" y="1240.6999248340726" x="324.5000087544322">2、定义在函数外部的变量称为全局变量，能在全局变量可以在整个包甚至外部包（被导出后）使用；</text><text id="kity_text_925" text-rendering="inherit" font-size="12" dy=".8em" y="1258.6999248340726" x="324.5000087544322">3、全局变量不能使用:=语法糖赋值</text></g></g><g id="minder_node70"><g id="node_expander71" style="cursor: pointer;"><path id="kity_path_2159" fill="white" stroke="gray" d="M169.50000635534525,1318.499925903976A6,6,0,1,1,157.50000635534525,1318.499925903976A6,6,0,1,1,169.50000635534525,1318.499925903976"></path><path id="kity_path_2160" fill="none" stroke="gray" d="M159.00000635534525,1318.499925903976L168.00000635534525,1318.499925903976"></path></g><path id="node_outline72" fill="none" stroke="none" d="M174.50000651925802,1309.499925903976h62a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-62a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text72" fill="black"><text id="kity_text_937" text-rendering="inherit" font-size="12" dy=".8em" y="1310.6999258771539" x="174.50000651925802">变量作用域</text></g></g><g id="minder_node71"><g id="node_expander68" style="cursor: pointer;" display="none"><path id="kity_path_2150" fill="white" stroke="gray" d="M257.50000766664743,1292.4999255165458A6,6,0,1,1,245.50000766664743,1292.4999255165458A6,6,0,1,1,257.50000766664743,1292.4999255165458"></path><path id="kity_path_2151" fill="none" stroke="gray"></path></g><path id="node_outline69" fill="none" stroke="none" d="M262.5000078305602,1283.4999255165458h482a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-482a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text69" fill="black"><text id="kity_text_931" text-rendering="inherit" font-size="12" dy=".8em" y="1284.6999254897237" x="262.5000078305602">局部变量（函数内定义的变量）：只能在函数体内部使用，参数和返回值变量也是局部变量</text></g></g><g id="minder_node72"><g id="node_expander69" style="cursor: pointer;" display="none"><path id="kity_path_2153" fill="white" stroke="gray" d="M257.50000766664743,1318.499925903976A6,6,0,1,1,245.50000766664743,1318.499925903976A6,6,0,1,1,257.50000766664743,1318.499925903976"></path><path id="kity_path_2154" fill="none" stroke="gray"></path></g><path id="node_outline70" fill="none" stroke="none" d="M262.5000078305602,1309.499925903976h421a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-421a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text70" fill="black"><text id="kity_text_933" text-rendering="inherit" font-size="12" dy=".8em" y="1310.6999258771539" x="262.5000078305602">全局变量（函数体外定义的变量）：可以在整个包甚至外部包（被导出后）使用</text></g></g><g id="minder_node73"><g id="node_expander70" style="cursor: pointer;" display="none"><path id="kity_path_2156" fill="white" stroke="gray" d="M257.50000766664743,1344.4999262914062A6,6,0,1,1,245.50000766664743,1344.4999262914062A6,6,0,1,1,257.50000766664743,1344.4999262914062"></path><path id="kity_path_2157" fill="none" stroke="gray"></path></g><path id="node_outline71" fill="none" stroke="none" d="M262.5000078305602,1335.4999262914062h289a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-289a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text71" fill="black"><text id="kity_text_935" text-rendering="inherit" font-size="12" dy=".8em" y="1336.699926264584" x="262.5000078305602">形参（函数定义中的变量）：作为函数的局部变量使用</text></g></g><g id="minder_node74"><g id="node_expander77" style="cursor: pointer;"><path id="kity_path_2177" fill="white" stroke="gray" d="M169.50000635534525,1403.4999271705747A6,6,0,1,1,157.50000635534525,1403.4999271705747A6,6,0,1,1,169.50000635534525,1403.4999271705747"></path><path id="kity_path_2178" fill="none" stroke="gray" d="M159.00000635534525,1403.4999271705747L168.00000635534525,1403.4999271705747"></path></g><path id="node_outline78" fill="none" stroke="none" d="M174.50000651925802,1394.4999271705747h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text78" fill="black"><text id="kity_text_949" text-rendering="inherit" font-size="12" dy=".8em" y="1395.6999271437526" x="174.50000651925802">特性</text></g></g><g id="minder_node75"><g id="node_expander72" style="cursor: pointer;" display="none"><path id="kity_path_2162" fill="white" stroke="gray" d="M221.50000713020563,1371.4999266937375A6,6,0,1,1,209.50000713020563,1371.4999266937375A6,6,0,1,1,221.50000713020563,1371.4999266937375"></path><path id="kity_path_2163" fill="none" stroke="gray"></path></g><path id="node_outline73" fill="none" stroke="none" d="M226.5000072941184,1362.4999266937375h617a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-617a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text73" fill="black"><text id="kity_text_939" text-rendering="inherit" font-size="12" dy=".8em" y="1363.6999266669154" x="226.5000072941184">可以使用内建函数make为引用类型的变量（slice、map、channel）创建及分配内存，make返回Type本身（非空）</text></g></g><g id="minder_node76"><g id="node_expander73" style="cursor: pointer;" display="none"><path id="kity_path_2165" fill="white" stroke="gray" d="M221.50000713020563,1397.4999270811677A6,6,0,1,1,209.50000713020563,1397.4999270811677A6,6,0,1,1,221.50000713020563,1397.4999270811677"></path><path id="kity_path_2166" fill="none" stroke="gray"></path></g><path id="node_outline74" fill="none" stroke="none" d="M226.5000072941184,1388.4999270811677h519a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-519a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text74" fill="black"><text id="kity_text_941" text-rendering="inherit" font-size="12" dy=".8em" y="1389.6999270543456" x="226.5000072941184">可以使用内建函数new为值类型的变量（int、struct）创建及分配内存，new返回指向Type的指针</text></g></g><g id="minder_node77"><g id="node_expander76" style="cursor: pointer;"><path id="kity_path_2174" fill="white" stroke="gray" d="M221.50000713020563,1436.499927662313A6,6,0,1,1,209.50000713020563,1436.499927662313A6,6,0,1,1,221.50000713020563,1436.499927662313"></path><path id="kity_path_2175" fill="none" stroke="gray" d="M211.00000713020563,1436.499927662313L220.00000713020563,1436.499927662313"></path></g><path id="node_outline77" fill="none" stroke="none" d="M226.5000072941184,1427.499927662313h180a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-180a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text77" fill="black"><text id="kity_text_947" text-rendering="inherit" font-size="12" dy=".8em" y="1428.699927635491" x="226.5000072941184">是否支持使用==&#xa0;或者!=进行比较</text></g></g><g id="minder_node78"><g id="node_expander74" style="cursor: pointer;" display="none"><path id="kity_path_2168" fill="white" stroke="gray" d="M427.50001019984484,1423.499927468598A6,6,0,1,1,415.50001019984484,1423.499927468598A6,6,0,1,1,427.50001019984484,1423.499927468598"></path><path id="kity_path_2169" fill="none" stroke="gray"></path></g><path id="node_outline75" fill="none" stroke="none" d="M432.5000103637576,1414.499927468598h590a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-590a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text75" fill="black"><text id="kity_text_943" text-rendering="inherit" font-size="12" dy=".8em" y="1415.6999274417758" x="432.5000103637576">【支持】：bool、整数、浮点数、字符串、通道、接口、部分结构体（每个字段具有可比性的情况下可比较）；</text></g></g><g id="minder_node79"><g id="node_expander75" style="cursor: pointer;" display="none"><path id="kity_path_2171" fill="white" stroke="gray" d="M427.50001019984484,1449.499927856028A6,6,0,1,1,415.50001019984484,1449.499927856028A6,6,0,1,1,427.50001019984484,1449.499927856028"></path><path id="kity_path_2172" fill="none" stroke="gray"></path></g><path id="node_outline76" fill="none" stroke="none" d="M432.5000103637576,1440.499927856028h424a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-424a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text76" fill="black"><text id="kity_text_945" text-rendering="inherit" font-size="12" dy=".8em" y="1441.699927829206" x="432.5000103637576">【不支持】（例外情况：可以用来判断是否为空值nil）：slice、map、function</text></g></g><g id="minder_node80"><g id="node_expander93" style="cursor: pointer;"><path id="kity_path_2225" fill="white" stroke="gray" d="M83.50000507384539,1613.4999302998185A6,6,0,1,1,71.50000507384539,1613.4999302998185A6,6,0,1,1,83.50000507384539,1613.4999302998185"></path><path id="kity_path_2226" fill="none" stroke="gray" d="M73.00000507384539,1613.4999302998185L82.00000507384539,1613.4999302998185"></path></g><path id="node_outline94" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,1600.4999302998185h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text94" fill="black"><text id="kity_text_981" text-rendering="inherit" font-size="14" dy=".8em" y="1604.399930268526" x="104.50000547617674">常量</text></g></g><g id="minder_node81"><g id="node_expander79" style="cursor: pointer;" display="none"><path id="kity_path_2183" fill="white" stroke="gray" d="M169.50000635534525,1483.4999283626676A6,6,0,1,1,157.50000635534525,1483.4999283626676A6,6,0,1,1,169.50000635534525,1483.4999283626676"></path><path id="kity_path_2184" fill="none" stroke="gray"></path></g><path id="node_outline80" fill="none" stroke="none" d="M174.50000651925802,1474.4999283626676h314a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-314a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text80" fill="black"><text id="kity_text_953" text-rendering="inherit" font-size="12" dy=".8em" y="1475.6999283358455" x="174.50000651925802">数据类型只能是（基本类型）：布尔型、数字型、字符串型</text></g></g><g id="minder_node82"><g id="node_expander80" style="cursor: pointer;" display="none"><path id="kity_path_2186" fill="white" stroke="gray" d="M169.50000635534525,1509.4999287500978A6,6,0,1,1,157.50000635534525,1509.4999287500978A6,6,0,1,1,169.50000635534525,1509.4999287500978"></path><path id="kity_path_2187" fill="none" stroke="gray"></path></g><path id="node_outline81" fill="none" stroke="none" d="M174.50000651925802,1500.4999287500978h187a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-187a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text81" fill="black"><text id="kity_text_955" text-rendering="inherit" font-size="12" dy=".8em" y="1501.6999287232757" x="174.50000651925802">关键字：const（声明常量时必填）</text></g></g><g id="minder_node83"><g id="node_expander83" style="cursor: pointer;"><path id="kity_path_2195" fill="white" stroke="gray" d="M169.50000635534525,1548.499929331243A6,6,0,1,1,157.50000635534525,1548.499929331243A6,6,0,1,1,169.50000635534525,1548.499929331243"></path><path id="kity_path_2196" fill="none" stroke="gray" d="M159.00000635534525,1548.499929331243L168.00000635534525,1548.499929331243"></path></g><path id="node_outline84" fill="none" stroke="none" d="M174.50000651925802,1539.499929331243h211a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-211a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text84" fill="black"><text id="kity_text_961" text-rendering="inherit" font-size="12" dy=".8em" y="1540.699929304421" x="174.50000651925802">定义格式：const name [type] = value</text></g></g><g id="minder_node84"><g id="node_expander81" style="cursor: pointer;" display="none"><path id="kity_path_2189" fill="white" stroke="gray" d="M406.50000988692045,1535.499929137528A6,6,0,1,1,394.50000988692045,1535.499929137528A6,6,0,1,1,406.50000988692045,1535.499929137528"></path><path id="kity_path_2190" fill="none" stroke="gray"></path></g><path id="node_outline82" fill="none" stroke="none" d="M411.5000100508332,1526.499929137528h208a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-208a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text82" fill="black"><text id="kity_text_957" text-rendering="inherit" font-size="12" dy=".8em" y="1527.6999291107059" x="411.5000100508332">显式定义示例：const a string = "abc"</text></g></g><g id="minder_node85"><g id="node_expander82" style="cursor: pointer;" display="none"><path id="kity_path_2192" fill="white" stroke="gray" d="M406.50000988692045,1561.4999295249581A6,6,0,1,1,394.50000988692045,1561.4999295249581A6,6,0,1,1,406.50000988692045,1561.4999295249581"></path><path id="kity_path_2193" fill="none" stroke="gray"></path></g><path id="node_outline83" fill="none" stroke="none" d="M411.5000100508332,1552.4999295249581h196a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text83" fill="black"><text id="kity_text_959" text-rendering="inherit" font-size="12" dy=".8em" y="1553.699929498136" x="411.5000100508332">隐式定义示例：const LENGTH = 10</text></g></g><g id="minder_node86"><g id="node_expander84" style="cursor: pointer;" display="none"><path id="kity_path_2198" fill="white" stroke="gray" d="M169.50000635534525,1587.4999299123883A6,6,0,1,1,157.50000635534525,1587.4999299123883A6,6,0,1,1,169.50000635534525,1587.4999299123883"></path><path id="kity_path_2199" fill="none" stroke="gray"></path></g><path id="node_outline85" fill="none" stroke="none" d="M174.50000651925802,1578.4999299123883h667a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-667a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text85" fill="black"><text id="kity_text_963" text-rendering="inherit" font-size="12" dy=".8em" y="1579.6999298855662" x="174.50000651925802">可用作枚举（常量组）：const ( a = "abc" b = len(a) ) - 组中某常量如不指定类型和初始化值，则与上一行非空常量右值相同</text></g></g><g id="minder_node87"><g id="node_expander88" style="cursor: pointer;"><path id="kity_path_2210" fill="white" stroke="gray" d="M169.50000635534525,1639.4999306872487A6,6,0,1,1,157.50000635534525,1639.4999306872487A6,6,0,1,1,169.50000635534525,1639.4999306872487"></path><path id="kity_path_2211" fill="none" stroke="gray" d="M159.00000635534525,1639.4999306872487L168.00000635534525,1639.4999306872487"></path></g><path id="node_outline89" fill="none" stroke="none" d="M174.50000651925802,1630.4999306872487h253a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text89" fill="black"><text id="kity_text_971" text-rendering="inherit" font-size="12" dy=".8em" y="1631.6999306604266" x="174.50000651925802">可使用函数（必须为内置函数）计算表达式的值</text></g></g><g id="minder_node88"><g id="node_expander85" style="cursor: pointer;" display="none"><path id="kity_path_2201" fill="white" stroke="gray" d="M448.5000105127692,1613.4999302998185A6,6,0,1,1,436.5000105127692,1613.4999302998185A6,6,0,1,1,448.5000105127692,1613.4999302998185"></path><path id="kity_path_2202" fill="none" stroke="gray"></path></g><path id="node_outline86" fill="none" stroke="none" d="M453.500010676682,1604.4999302998185h85a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text86" fill="black"><text id="kity_text_965" text-rendering="inherit" font-size="12" dy=".8em" y="1605.6999302729964" x="453.500010676682">len()：计算长度</text></g></g><g id="minder_node89"><g id="node_expander86" style="cursor: pointer;" display="none"><path id="kity_path_2204" fill="white" stroke="gray" d="M448.5000105127692,1639.4999306872487A6,6,0,1,1,436.5000105127692,1639.4999306872487A6,6,0,1,1,448.5000105127692,1639.4999306872487"></path><path id="kity_path_2205" fill="none" stroke="gray"></path></g><path id="node_outline87" fill="none" stroke="none" d="M453.500010676682,1630.4999306872487h113a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text87" fill="black"><text id="kity_text_967" text-rendering="inherit" font-size="12" dy=".8em" y="1631.6999306604266" x="453.500010676682">cap()：计算切片容量</text></g></g><g id="minder_node90"><g id="node_expander87" style="cursor: pointer;" display="none"><path id="kity_path_2207" fill="white" stroke="gray" d="M448.5000105127692,1665.499931074679A6,6,0,1,1,436.5000105127692,1665.499931074679A6,6,0,1,1,448.5000105127692,1665.499931074679"></path><path id="kity_path_2208" fill="none" stroke="gray"></path></g><path id="node_outline88" fill="none" stroke="none" d="M453.500010676682,1656.499931074679h255a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-255a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text88" fill="black"><text id="kity_text_969" text-rendering="inherit" font-size="12" dy=".8em" y="1657.6999310478568" x="453.500010676682">unsafe.Sizeof():返回操作数在内存中的字节大小</text></g></g><g id="minder_node91"><g id="node_expander90" style="cursor: pointer;"><path id="kity_path_2216" fill="white" stroke="gray" d="M169.50000635534525,1691.499931462109A6,6,0,1,1,157.50000635534525,1691.499931462109A6,6,0,1,1,169.50000635534525,1691.499931462109"></path><path id="kity_path_2217" fill="none" stroke="gray" d="M159.00000635534525,1691.499931462109L168.00000635534525,1691.499931462109"></path></g><path id="node_outline91" fill="none" stroke="none" d="M174.50000651925802,1682.499931462109h83a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-83a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text91" fill="black"><text id="kity_text_975" text-rendering="inherit" font-size="12" dy=".8em" y="1683.699931435287" x="174.50000651925802">特殊常量：iota</text></g></g><g id="minder_node92"><g id="node_expander89" style="cursor: pointer;" display="none"><path id="kity_path_2213" fill="white" stroke="gray" d="M278.5000079795718,1691.499931462109A6,6,0,1,1,266.5000079795718,1691.499931462109A6,6,0,1,1,278.5000079795718,1691.499931462109"></path><path id="kity_path_2214" fill="none" stroke="gray"></path></g><path id="node_outline90" fill="none" stroke="none" d="M283.5000081434846,1682.499931462109h257a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-257a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text90" fill="black"><text id="kity_text_973" text-rendering="inherit" font-size="12" dy=".8em" y="1683.699931435287" x="283.5000081434846">初始值为0，新行自动加1，出现const时重置为0</text></g></g><g id="minder_node93"><g id="node_expander91" style="cursor: pointer;" display="none"><path id="kity_path_2219" fill="white" stroke="gray" d="M169.50000635534525,1717.4999318495393A6,6,0,1,1,157.50000635534525,1717.4999318495393A6,6,0,1,1,169.50000635534525,1717.4999318495393"></path><path id="kity_path_2220" fill="none" stroke="gray"></path></g><path id="node_outline92" fill="none" stroke="none" d="M174.50000651925802,1708.4999318495393h194a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-194a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text92" fill="black"><text id="kity_text_977" text-rendering="inherit" font-size="12" dy=".8em" y="1709.6999318227172" x="174.50000651925802">声明的常量不使用不会导致编译报错</text></g></g><g id="minder_node94"><g id="node_expander92" style="cursor: pointer;" display="none"><path id="kity_path_2222" fill="white" stroke="gray" d="M169.50000635534525,1743.4999322369695A6,6,0,1,1,157.50000635534525,1743.4999322369695A6,6,0,1,1,169.50000635534525,1743.4999322369695"></path><path id="kity_path_2223" fill="none" stroke="gray"></path></g><path id="node_outline93" fill="none" stroke="none" d="M174.50000651925802,1734.4999322369695h470a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-470a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text93" fill="black"><text id="kity_text_979" text-rendering="inherit" font-size="12" dy=".8em" y="1735.6999322101474" x="174.50000651925802">数字常量不会分配存储空间，无须像变量那样通过内存寻址来取值，因此也无法获取地址</text></g></g><g id="minder_node95"><g id="node_expander103" style="cursor: pointer;"><path id="kity_path_2255" fill="white" stroke="gray" d="M83.50000507384539,1868.4999340996146A6,6,0,1,1,71.50000507384539,1868.4999340996146A6,6,0,1,1,83.50000507384539,1868.4999340996146"></path><path id="kity_path_2256" fill="none" stroke="gray" d="M73.00000507384539,1868.4999340996146L82.00000507384539,1868.4999340996146"></path></g><path id="node_outline104" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,1855.4999340996146h76a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-76a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text104" fill="black"><text id="kity_text_1001" text-rendering="inherit" font-size="14" dy=".8em" y="1859.3999340683222" x="104.50000547617674">运算符</text></g></g><g id="minder_node96"><g id="node_expander94" style="cursor: pointer;" display="none"><path id="kity_path_2228" fill="white" stroke="gray" d="M182.50000654906034,1777.499932743609A6,6,0,1,1,170.50000654906034,1777.499932743609A6,6,0,1,1,182.50000654906034,1777.499932743609"></path><path id="kity_path_2229" fill="none" stroke="gray"></path></g><path id="node_outline95" fill="none" stroke="none" d="M187.50000671297312,1768.499932743609h310a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-310a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text95" fill="black"><text id="kity_text_983" text-rendering="inherit" font-size="12" dy=".8em" y="1769.6999327167869" x="187.50000671297312">算术运算符：加、减、乘、除等（+ - * / %(求余) ++ --）</text></g></g><g id="minder_node97"><g id="node_expander95" style="cursor: pointer;" display="none"><path id="kity_path_2231" fill="white" stroke="gray" d="M182.50000654906034,1803.4999331310391A6,6,0,1,1,170.50000654906034,1803.4999331310391A6,6,0,1,1,182.50000654906034,1803.4999331310391"></path><path id="kity_path_2232" fill="none" stroke="gray"></path></g><path id="node_outline96" fill="none" stroke="none" d="M187.50000671297312,1794.4999331310391h323a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-323a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text96" fill="black"><text id="kity_text_985" text-rendering="inherit" font-size="12" dy=".8em" y="1795.699933104217" x="187.50000671297312">关系运算符：大于、小于、不/等于等（== != &gt; &lt; &gt;= &lt;=）</text></g></g><g id="minder_node98"><g id="node_expander96" style="cursor: pointer;" display="none"><path id="kity_path_2234" fill="white" stroke="gray" d="M182.50000654906034,1829.4999335184693A6,6,0,1,1,170.50000654906034,1829.4999335184693A6,6,0,1,1,182.50000654906034,1829.4999335184693"></path><path id="kity_path_2235" fill="none" stroke="gray"></path></g><path id="node_outline97" fill="none" stroke="none" d="M187.50000671297312,1820.4999335184693h192a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-192a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text97" fill="black"><text id="kity_text_987" text-rendering="inherit" font-size="12" dy=".8em" y="1821.6999334916472" x="187.50000671297312">逻辑运算符：与、或、非（&amp;&amp; | !）</text></g></g><g id="minder_node99"><g id="node_expander97" style="cursor: pointer;" display="none"><path id="kity_path_2237" fill="white" stroke="gray" d="M182.50000654906034,1855.4999339058995A6,6,0,1,1,170.50000654906034,1855.4999339058995A6,6,0,1,1,182.50000654906034,1855.4999339058995"></path><path id="kity_path_2238" fill="none" stroke="gray"></path></g><path id="node_outline98" fill="none" stroke="none" d="M187.50000671297312,1846.4999339058995h210a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text98" fill="black"><text id="kity_text_989" text-rendering="inherit" font-size="12" dy=".8em" y="1847.6999338790774" x="187.50000671297312">位运算符：按位与、或、异或（&amp; | ^）</text></g></g><g id="minder_node100"><g id="node_expander98" style="cursor: pointer;" display="none"><path id="kity_path_2240" fill="white" stroke="gray" d="M182.50000654906034,1881.4999342933297A6,6,0,1,1,170.50000654906034,1881.4999342933297A6,6,0,1,1,182.50000654906034,1881.4999342933297"></path><path id="kity_path_2241" fill="none" stroke="gray"></path></g><path id="node_outline99" fill="none" stroke="none" d="M187.50000671297312,1872.4999342933297h505a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-505a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text99" fill="black"><text id="kity_text_991" text-rendering="inherit" font-size="12" dy=".8em" y="1873.6999342665076" x="187.50000671297312">赋值运算符：等、加减乘除等、移位等、位操作等等（= += -= *= /= &lt;&lt;= &gt;&gt;= &amp;= ^= |=）</text></g></g><g id="minder_node101"><g id="node_expander101" style="cursor: pointer;"><path id="kity_path_2249" fill="white" stroke="gray" d="M182.50000654906034,1920.499934874475A6,6,0,1,1,170.50000654906034,1920.499934874475A6,6,0,1,1,182.50000654906034,1920.499934874475"></path><path id="kity_path_2250" fill="none" stroke="gray" d="M172.00000654906034,1920.499934874475L181.00000654906034,1920.499934874475"></path></g><path id="node_outline102" fill="none" stroke="none" d="M187.50000671297312,1911.499934874475h61a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text102" fill="black"><text id="kity_text_997" text-rendering="inherit" font-size="12" dy=".8em" y="1912.699934847653" x="187.50000671297312">其他运算符</text></g></g><g id="minder_node102"><g id="node_expander99" style="cursor: pointer;" display="none"><path id="kity_path_2243" fill="white" stroke="gray" d="M269.50000784546137,1907.49993468076A6,6,0,1,1,257.50000784546137,1907.49993468076A6,6,0,1,1,269.50000784546137,1907.49993468076"></path><path id="kity_path_2244" fill="none" stroke="gray"></path></g><path id="node_outline100" fill="none" stroke="none" d="M274.50000800937414,1898.49993468076h119a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-119a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text100" fill="black"><text id="kity_text_993" text-rendering="inherit" font-size="12" dy=".8em" y="1899.6999346539378" x="274.50000800937414">&amp;：返回变量存储地址</text></g></g><g id="minder_node103"><g id="node_expander100" style="cursor: pointer;" display="none"><path id="kity_path_2246" fill="white" stroke="gray" d="M269.50000784546137,1933.49993506819A6,6,0,1,1,257.50000784546137,1933.49993506819A6,6,0,1,1,269.50000784546137,1933.49993506819"></path><path id="kity_path_2247" fill="none" stroke="gray"></path></g><path id="node_outline101" fill="none" stroke="none" d="M274.50000800937414,1924.49993506819h90a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-90a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text101" fill="black"><text id="kity_text_995" text-rendering="inherit" font-size="12" dy=".8em" y="1925.699935041368" x="274.50000800937414">*：标识指针变量</text></g></g><g id="minder_node104"><g id="node_expander102" style="cursor: pointer;" display="none"><path id="kity_path_2252" fill="white" stroke="gray" d="M182.50000654906034,1959.4999354556203A6,6,0,1,1,170.50000654906034,1959.4999354556203A6,6,0,1,1,182.50000654906034,1959.4999354556203"></path><path id="kity_path_2253" fill="none" stroke="gray"></path></g><path id="node_outline103" fill="none" stroke="none" d="M187.50000671297312,1950.4999354556203h386a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-386a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text103" fill="black"><text id="kity_text_999" text-rendering="inherit" font-size="12" dy=".8em" y="1951.6999354287982" x="187.50000671297312">优先级：二次元运算从左至右、可使用括号临时提升表达式的运算优先级</text></g></g><g id="minder_node105"><g id="node_expander124" style="cursor: pointer;"><path id="kity_path_2318" fill="white" stroke="gray" d="M83.50000507384539,2165.4999385252595A6,6,0,1,1,71.50000507384539,2165.4999385252595A6,6,0,1,1,83.50000507384539,2165.4999385252595"></path><path id="kity_path_2319" fill="none" stroke="gray" d="M73.00000507384539,2165.4999385252595L82.00000507384539,2165.4999385252595"></path></g><path id="node_outline125" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,2152.4999385252595h91a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-91a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text125" fill="black"><text id="kity_text_1043" text-rendering="inherit" font-size="14" dy=".8em" y="2156.399938493967" x="104.50000547617674">流程控制</text></g></g><g id="minder_node106"><g id="node_expander114" style="cursor: pointer;"><path id="kity_path_2288" fill="white" stroke="gray" d="M197.50000677257776,2077.4999372139573A6,6,0,1,1,185.50000677257776,2077.4999372139573A6,6,0,1,1,197.50000677257776,2077.4999372139573"></path><path id="kity_path_2289" fill="none" stroke="gray" d="M187.00000677257776,2077.4999372139573L196.00000677257776,2077.4999372139573"></path></g><path id="node_outline115" fill="none" stroke="none" d="M202.50000693649054,2068.4999372139573h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text115" fill="black"><text id="kity_text_1023" text-rendering="inherit" font-size="12" dy=".8em" y="2069.699937187135" x="202.50000693649054">条件语句</text></g></g><g id="minder_node107"><g id="node_expander104" style="cursor: pointer;" display="none"><path id="kity_path_2258" fill="white" stroke="gray" d="M272.50000789016485,1993.4999359622598A6,6,0,1,1,260.50000789016485,1993.4999359622598A6,6,0,1,1,272.50000789016485,1993.4999359622598"></path><path id="kity_path_2259" fill="none" stroke="gray"></path></g><path id="node_outline105" fill="none" stroke="none" d="M277.5000080540776,1984.4999359622598h405a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-405a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text105" fill="black"><text id="kity_text_1003" text-rendering="inherit" font-size="12" dy=".8em" y="1985.6999359354377" x="277.5000080540776">if&#xa0;布尔表达式 {...}、if 布尔表达式 {...}&#xa0;else if 布尔表达式 {...}&#xa0;else {...}、if嵌套</text></g></g><g id="minder_node108"><g id="node_expander109" style="cursor: pointer;"><path id="kity_path_2273" fill="white" stroke="gray" d="M272.50000789016485,2058.4999369308352A6,6,0,1,1,260.50000789016485,2058.4999369308352A6,6,0,1,1,272.50000789016485,2058.4999369308352"></path><path id="kity_path_2274" fill="none" stroke="gray" d="M262.00000789016485,2058.4999369308352L271.00000789016485,2058.4999369308352"></path></g><path id="node_outline110" fill="none" stroke="none" d="M277.5000080540776,2049.4999369308352h48a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-48a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text110" fill="black"><text id="kity_text_1013" text-rendering="inherit" font-size="12" dy=".8em" y="2050.699936904013" x="277.5000080540776">switch：</text></g></g><g id="minder_node109"><g id="node_expander105" style="cursor: pointer;" display="none"><path id="kity_path_2261" fill="white" stroke="gray" d="M346.5000089928508,2019.49993634969A6,6,0,1,1,334.5000089928508,2019.49993634969A6,6,0,1,1,346.5000089928508,2019.49993634969"></path><path id="kity_path_2262" fill="none" stroke="gray"></path></g><path id="node_outline106" fill="none" stroke="none" d="M351.50000915676355,2010.49993634969h347a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-347a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text106" fill="black"><text id="kity_text_1005" text-rendering="inherit" font-size="12" dy=".8em" y="2011.6999363228679" x="351.50000915676355">语法：switch&#xa0;计算表达式 {case var1: ... case var2: ... default: ...}</text></g></g><g id="minder_node110"><g id="node_expander106" style="cursor: pointer;" display="none"><path id="kity_path_2264" fill="white" stroke="gray" d="M346.5000089928508,2045.4999367371202A6,6,0,1,1,334.5000089928508,2045.4999367371202A6,6,0,1,1,346.5000089928508,2045.4999367371202"></path><path id="kity_path_2265" fill="none" stroke="gray"></path></g><path id="node_outline107" fill="none" stroke="none" d="M351.50000915676355,2036.4999367371202h309a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-309a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text107" fill="black"><text id="kity_text_1007" text-rendering="inherit" font-size="12" dy=".8em" y="2037.699936710298" x="351.50000915676355">基于不同条件执行不同动作，每一个 case 分支都是唯一的</text></g></g><g id="minder_node111"><g id="node_expander107" style="cursor: pointer;" display="none"><path id="kity_path_2267" fill="white" stroke="gray" d="M346.5000089928508,2071.4999371245503A6,6,0,1,1,334.5000089928508,2071.4999371245503A6,6,0,1,1,346.5000089928508,2071.4999371245503"></path><path id="kity_path_2268" fill="none" stroke="gray"></path></g><path id="node_outline108" fill="none" stroke="none" d="M351.50000915676355,2062.4999371245503h674a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-674a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text108" fill="black"><text id="kity_text_1009" text-rendering="inherit" font-size="12" dy=".8em" y="2063.6999370977283" x="351.50000915676355">从上至下逐一测试，直到匹配成功为止（匹配项后面无需加break，自动跳出，使用fallthrough可以强制执行后面的case代码）</text></g></g><g id="minder_node112"><g id="node_expander108" style="cursor: pointer;" display="none"><path id="kity_path_2270" fill="white" stroke="gray" d="M346.5000089928508,2097.4999375119805A6,6,0,1,1,334.5000089928508,2097.4999375119805A6,6,0,1,1,346.5000089928508,2097.4999375119805"></path><path id="kity_path_2271" fill="none" stroke="gray"></path></g><path id="node_outline109" fill="none" stroke="none" d="M351.50000915676355,2088.4999375119805h301a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-301a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text109" fill="black"><text id="kity_text_1011" text-rendering="inherit" font-size="12" dy=".8em" y="2089.6999374851584" x="351.50000915676355">case支持同时测试多个可能符合条件的值，逗号分割即可</text></g></g><g id="minder_node113"><g id="node_expander110" style="cursor: pointer;" display="none"><path id="kity_path_2276" fill="white" stroke="gray" d="M272.50000789016485,2123.4999378994107A6,6,0,1,1,260.50000789016485,2123.4999378994107A6,6,0,1,1,272.50000789016485,2123.4999378994107"></path><path id="kity_path_2277" fill="none" stroke="gray"></path></g><path id="node_outline111" fill="none" stroke="none" d="M277.5000080540776,2114.4999378994107h360a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-360a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text111" fill="black"><text id="kity_text_1015" text-rendering="inherit" font-size="12" dy=".8em" y="2115.6999378725886" x="277.5000080540776">select：类似于switch，不过是随机选择case执行，无case时会阻塞</text></g></g><g id="minder_node114"><g id="node_expander113" style="cursor: pointer;"><path id="kity_path_2285" fill="white" stroke="gray" d="M272.50000789016485,2162.499938480556A6,6,0,1,1,260.50000789016485,2162.499938480556A6,6,0,1,1,272.50000789016485,2162.499938480556"></path><path id="kity_path_2286" fill="none" stroke="gray" d="M262.00000789016485,2162.499938480556L271.00000789016485,2162.499938480556"></path></g><path id="node_outline114" fill="none" stroke="none" d="M277.5000080540776,2153.499938480556h136a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-136a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text114" fill="black"><text id="kity_text_1021" text-rendering="inherit" font-size="12" dy=".8em" y="2154.699938453734" x="277.5000080540776">格式：关键字&#xa0;判断语句 {}</text></g></g><g id="minder_node115"><g id="node_expander111" style="cursor: pointer;" display="none"><path id="kity_path_2279" fill="white" stroke="gray" d="M434.50001030415297,2149.499938286841A6,6,0,1,1,422.50001030415297,2149.499938286841A6,6,0,1,1,434.50001030415297,2149.499938286841"></path><path id="kity_path_2280" fill="none" stroke="gray"></path></g><path id="node_outline112" fill="none" stroke="none" d="M439.50001046806574,2140.499938286841h112a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-112a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text112" fill="black"><text id="kity_text_1017" text-rendering="inherit" font-size="12" dy=".8em" y="2141.699938260019" x="439.50001046806574">示例：if a &lt; 10 { ... }</text></g></g><g id="minder_node116"><g id="node_expander112" style="cursor: pointer;" display="none"><path id="kity_path_2282" fill="white" stroke="gray" d="M434.50001030415297,2175.499938674271A6,6,0,1,1,422.50001030415297,2175.499938674271A6,6,0,1,1,434.50001030415297,2175.499938674271"></path><path id="kity_path_2283" fill="none" stroke="gray"></path></g><path id="node_outline113" fill="none" stroke="none" d="M439.50001046806574,2166.499938674271h279a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-279a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text113" fill="black"><text id="kity_text_1019" text-rendering="inherit" font-size="12" dy=".8em" y="2167.699938647449" x="439.50001046806574">switch示例：switch marks { case 90: grade = "A"}</text></g></g><g id="minder_node117"><g id="node_expander123" style="cursor: pointer;"><path id="kity_path_2315" fill="white" stroke="gray" d="M197.50000677257776,2253.4999398365617A6,6,0,1,1,185.50000677257776,2253.4999398365617A6,6,0,1,1,197.50000677257776,2253.4999398365617"></path><path id="kity_path_2316" fill="none" stroke="gray" d="M187.00000677257776,2253.4999398365617L196.00000677257776,2253.4999398365617"></path></g><path id="node_outline124" fill="none" stroke="none" d="M202.50000693649054,2244.4999398365617h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text124" fill="black"><text id="kity_text_1041" text-rendering="inherit" font-size="12" dy=".8em" y="2245.6999398097396" x="202.50000693649054">循环语句</text></g></g><g id="minder_node118"><g id="node_expander117" style="cursor: pointer;"><path id="kity_path_2297" fill="white" stroke="gray" d="M272.50000789016485,2214.4999392554164A6,6,0,1,1,260.50000789016485,2214.4999392554164A6,6,0,1,1,272.50000789016485,2214.4999392554164"></path><path id="kity_path_2298" fill="none" stroke="gray" d="M262.00000789016485,2214.4999392554164L271.00000789016485,2214.4999392554164"></path></g><path id="node_outline118" fill="none" stroke="none" d="M277.5000080540776,2205.4999392554164h114a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-114a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text118" fill="black"><text id="kity_text_1029" text-rendering="inherit" font-size="12" dy=".8em" y="2206.6999392285943" x="277.5000080540776">只有for循环，可嵌套</text></g></g><g id="minder_node119"><g id="node_expander115" style="cursor: pointer;" display="none"><path id="kity_path_2291" fill="white" stroke="gray" d="M412.5000099763274,2201.4999390617013A6,6,0,1,1,400.5000099763274,2201.4999390617013A6,6,0,1,1,412.5000099763274,2201.4999390617013"></path><path id="kity_path_2292" fill="none" stroke="gray"></path></g><path id="node_outline116" fill="none" stroke="none" d="M417.5000101402402,2192.4999390617013h62a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-62a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text116" fill="black"><text id="kity_text_1025" text-rendering="inherit" font-size="12" dy=".8em" y="2193.699939034879" x="417.5000101402402">按条件判断</text></g></g><g id="minder_node120"><g id="node_expander116" style="cursor: pointer;" display="none"><path id="kity_path_2294" fill="white" stroke="gray" d="M412.5000099763274,2227.4999394491315A6,6,0,1,1,400.5000099763274,2227.4999394491315A6,6,0,1,1,412.5000099763274,2227.4999394491315"></path><path id="kity_path_2295" fill="none" stroke="gray"></path></g><path id="node_outline117" fill="none" stroke="none" d="M417.5000101402402,2218.4999394491315h133a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-133a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text117" fill="black"><text id="kity_text_1027" text-rendering="inherit" font-size="12" dy=".8em" y="2219.6999394223094" x="417.5000101402402">迭代遍历：range&#xa0;关键字</text></g></g><g id="minder_node121"><g id="node_expander122" style="cursor: pointer;"><path id="kity_path_2312" fill="white" stroke="gray" d="M272.50000789016485,2292.499940417707A6,6,0,1,1,260.50000789016485,2292.499940417707A6,6,0,1,1,272.50000789016485,2292.499940417707"></path><path id="kity_path_2313" fill="none" stroke="gray" d="M262.00000789016485,2292.499940417707L271.00000789016485,2292.499940417707"></path></g><path id="node_outline123" fill="none" stroke="none" d="M277.5000080540776,2283.499940417707h85a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text123" fill="black"><text id="kity_text_1039" text-rendering="inherit" font-size="12" dy=".8em" y="2284.699940390885" x="277.5000080540776">循环体控制语句</text></g></g><g id="minder_node122"><g id="node_expander118" style="cursor: pointer;" display="none"><path id="kity_path_2300" fill="white" stroke="gray" d="M383.50000954419374,2253.4999398365617A6,6,0,1,1,371.50000954419374,2253.4999398365617A6,6,0,1,1,383.50000954419374,2253.4999398365617"></path><path id="kity_path_2301" fill="none" stroke="gray"></path></g><path id="node_outline119" fill="none" stroke="none" d="M388.5000097081065,2244.4999398365617h195a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-195a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text119" fill="black"><text id="kity_text_1031" text-rendering="inherit" font-size="12" dy=".8em" y="2245.6999398097396" x="388.5000097081065">continue：跳出本轮循环执行下一轮</text></g></g><g id="minder_node123"><g id="node_expander119" style="cursor: pointer;" display="none"><path id="kity_path_2303" fill="white" stroke="gray" d="M383.50000954419374,2279.499940223992A6,6,0,1,1,371.50000954419374,2279.499940223992A6,6,0,1,1,383.50000954419374,2279.499940223992"></path><path id="kity_path_2304" fill="none" stroke="gray"></path></g><path id="node_outline120" fill="none" stroke="none" d="M388.5000097081065,2270.499940223992h117a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-117a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text120" fill="black"><text id="kity_text_1033" text-rendering="inherit" font-size="12" dy=".8em" y="2271.69994019717" x="388.5000097081065">break：中断当前循环</text></g></g><g id="minder_node124"><g id="node_expander120" style="cursor: pointer;" display="none"><path id="kity_path_2306" fill="white" stroke="gray" d="M383.50000954419374,2305.499940611422A6,6,0,1,1,371.50000954419374,2305.499940611422A6,6,0,1,1,383.50000954419374,2305.499940611422"></path><path id="kity_path_2307" fill="none" stroke="gray"></path></g><path id="node_outline121" fill="none" stroke="none" d="M388.5000097081065,2296.499940611422h240a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-240a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text121" fill="black"><text id="kity_text_1035" text-rendering="inherit" font-size="12" dy=".8em" y="2297.6999405846" x="388.5000097081065">goto（不建议使用）：转移到LOOP标记语句</text></g></g><g id="minder_node125"><g id="node_expander121" style="cursor: pointer;" display="none"><path id="kity_path_2309" fill="white" stroke="gray" d="M383.50000954419374,2331.4999409988523A6,6,0,1,1,371.50000954419374,2331.4999409988523A6,6,0,1,1,383.50000954419374,2331.4999409988523"></path><path id="kity_path_2310" fill="none" stroke="gray"></path></g><path id="node_outline122" fill="none" stroke="none" d="M388.5000097081065,2322.4999409988523h431a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-431a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text122" fill="black"><text id="kity_text_1037" text-rendering="inherit" font-size="12" dy=".8em" y="2323.69994097203" x="388.5000097081065">break和continue默认操作里层的循环，可以给循环打标签来实现跳出指定的循环</text></g></g><g id="minder_node126"><g id="node_expander158" style="cursor: pointer;"><path id="kity_path_2420" fill="white" stroke="gray" d="M83.50000507384539,2644.4999456629157A6,6,0,1,1,71.50000507384539,2644.4999456629157A6,6,0,1,1,83.50000507384539,2644.4999456629157"></path><path id="kity_path_2421" fill="none" stroke="gray" d="M73.00000507384539,2644.4999456629157L82.00000507384539,2644.4999456629157"></path></g><path id="node_outline159" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,2631.4999456629157h112a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-112a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text159" fill="black"><text id="kity_text_1111" text-rendering="inherit" font-size="14" dy=".8em" y="2635.3999456316233" x="104.50000547617674">函数（fun）</text></g></g><g id="minder_node127"><g id="node_expander125" style="cursor: pointer;" display="none"><path id="kity_path_2321" fill="white" stroke="gray" d="M218.50000708550215,2365.4999415054917A6,6,0,1,1,206.50000708550215,2365.4999415054917A6,6,0,1,1,218.50000708550215,2365.4999415054917"></path><path id="kity_path_2322" fill="none" stroke="gray"></path></g><path id="node_outline126" fill="none" stroke="none" d="M223.50000724941492,2356.4999415054917h193a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-193a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text126" fill="black"><text id="kity_text_1045" text-rendering="inherit" font-size="12" dy=".8em" y="2357.6999414786696" x="223.50000724941492">概念：函数是执行特定任务的代码块</text></g></g><g id="minder_node128"><g id="node_expander126" style="cursor: pointer;" display="none"><path id="kity_path_2324" fill="white" stroke="gray" d="M218.50000708550215,2391.499941892922A6,6,0,1,1,206.50000708550215,2391.499941892922A6,6,0,1,1,218.50000708550215,2391.499941892922"></path><path id="kity_path_2325" fill="none" stroke="gray"></path></g><path id="node_outline127" fill="none" stroke="none" d="M223.50000724941492,2382.499941892922h510a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-510a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text127" fill="black"><text id="kity_text_1047" text-rendering="inherit" font-size="12" dy=".8em" y="2383.6999418661" x="223.50000724941492">定义格式：func function_name( [parameter list] )&#xa0;(output1 type1, output2 type2)&#xa0;{   函数体}</text></g></g><g id="minder_node129"><g id="node_expander137" style="cursor: pointer;"><path id="kity_path_2357" fill="white" stroke="gray" d="M218.50000708550215,2472.499943099916A6,6,0,1,1,206.50000708550215,2472.499943099916A6,6,0,1,1,218.50000708550215,2472.499943099916"></path><path id="kity_path_2358" fill="none" stroke="gray" d="M208.00000708550215,2472.499943099916L217.00000708550215,2472.499943099916"></path></g><path id="node_outline138" fill="none" stroke="none" d="M223.50000724941492,2463.499943099916h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text138" fill="black"><text id="kity_text_1069" text-rendering="inherit" font-size="12" dy=".8em" y="2464.699943073094" x="223.50000724941492">函数参数</text></g></g><g id="minder_node130"><g id="node_expander127" style="cursor: pointer;" display="none"><path id="kity_path_2327" fill="white" stroke="gray" d="M293.50000820308924,2417.499942280352A6,6,0,1,1,281.50000820308924,2417.499942280352A6,6,0,1,1,293.50000820308924,2417.499942280352"></path><path id="kity_path_2328" fill="none" stroke="gray"></path></g><path id="node_outline128" fill="none" stroke="none" d="M298.500008367002,2408.499942280352h240a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-240a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text128" fill="black"><text id="kity_text_1049" text-rendering="inherit" font-size="12" dy=".8em" y="2409.69994225353" x="298.500008367002">实参与形参的顺序，个数，类型必须一一对应</text></g></g><g id="minder_node131"><g id="node_expander130" style="cursor: pointer;"><path id="kity_path_2336" fill="white" stroke="gray" d="M293.50000820308924,2456.4999428614974A6,6,0,1,1,281.50000820308924,2456.4999428614974A6,6,0,1,1,293.50000820308924,2456.4999428614974"></path><path id="kity_path_2337" fill="none" stroke="gray" d="M283.00000820308924,2456.4999428614974L292.00000820308924,2456.4999428614974"></path></g><path id="node_outline131" fill="none" stroke="none" d="M298.500008367002,2447.4999428614974h362a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-362a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text131" fill="black"><text id="kity_text_1055" text-rendering="inherit" font-size="12" dy=".8em" y="2448.6999428346753" x="298.500008367002">Go函数支持变参（类型确定，个数不确定的参数）：(name ... type)</text></g></g><g id="minder_node132"><g id="node_expander128" style="cursor: pointer;" display="none"><path id="kity_path_2330" fill="white" stroke="gray" d="M681.5000139847398,2443.4999426677823A6,6,0,1,1,669.5000139847398,2443.4999426677823A6,6,0,1,1,681.5000139847398,2443.4999426677823"></path><path id="kity_path_2331" fill="none" stroke="gray"></path></g><path id="node_outline129" fill="none" stroke="none" d="M686.5000141486526,2434.4999426677823h182a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-182a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text129" fill="black"><text id="kity_text_1051" text-rendering="inherit" font-size="12" dy=".8em" y="2435.69994264096" x="686.5000141486526">一个函数最多只能有一个可变参数</text></g></g><g id="minder_node133"><g id="node_expander129" style="cursor: pointer;" display="none"><path id="kity_path_2333" fill="white" stroke="gray" d="M681.5000139847398,2469.4999430552125A6,6,0,1,1,669.5000139847398,2469.4999430552125A6,6,0,1,1,681.5000139847398,2469.4999430552125"></path><path id="kity_path_2334" fill="none" stroke="gray"></path></g><path id="node_outline130" fill="none" stroke="none" d="M686.5000141486526,2460.4999430552125h397a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-397a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text130" fill="black"><text id="kity_text_1053" text-rendering="inherit" font-size="12" dy=".8em" y="2461.6999430283904" x="686.5000141486526">如果形参列表中，除了可变参数，还有其他的参数，那么可变参数写在最后</text></g></g><g id="minder_node134"><g id="node_expander136" style="cursor: pointer;"><path id="kity_path_2354" fill="white" stroke="gray" d="M293.50000820308924,2527.49994391948A6,6,0,1,1,281.50000820308924,2527.49994391948A6,6,0,1,1,293.50000820308924,2527.49994391948"></path><path id="kity_path_2355" fill="none" stroke="gray" d="M283.00000820308924,2527.49994391948L292.00000820308924,2527.49994391948"></path></g><path id="node_outline137" fill="none" stroke="none" d="M298.500008367002,2518.49994391948h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text137" fill="black"><text id="kity_text_1067" text-rendering="inherit" font-size="12" dy=".8em" y="2519.6999438926578" x="298.500008367002">参数传递</text></g></g><g id="minder_node135"><g id="node_expander131" style="cursor: pointer;" display="none"><path id="kity_path_2339" fill="white" stroke="gray" d="M368.5000093206763,2495.4999434426427A6,6,0,1,1,356.5000093206763,2495.4999434426427A6,6,0,1,1,368.5000093206763,2495.4999434426427"></path><path id="kity_path_2340" fill="none" stroke="gray"></path></g><path id="node_outline132" fill="none" stroke="none" d="M373.5000094845891,2486.4999434426427h348a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-348a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text132" fill="black"><text id="kity_text_1057" text-rendering="inherit" font-size="12" dy=".8em" y="2487.6999434158206" x="373.5000094845891">【值传递】默认传递方式，按值的拷贝传递：传递后就互不相关了</text></g></g><g id="minder_node136"><g id="node_expander132" style="cursor: pointer;" display="none"><path id="kity_path_2342" fill="white" stroke="gray" d="M368.5000093206763,2521.499943830073A6,6,0,1,1,356.5000093206763,2521.499943830073A6,6,0,1,1,368.5000093206763,2521.499943830073"></path><path id="kity_path_2343" fill="none" stroke="gray"></path></g><path id="node_outline133" fill="none" stroke="none" d="M373.5000094845891,2512.499943830073h757a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-757a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text133" fill="black"><text id="kity_text_1059" text-rendering="inherit" font-size="12" dy=".8em" y="2513.699943803251" x="373.5000094845891">【引用传递】传指针（数据的地址）：使得多个函数能操作同一个对象，如：大的结构体作为函数参数，为避免额外的开销，最好采用指针传递</text></g></g><g id="minder_node137"><g id="node_expander135" style="cursor: pointer;"><path id="kity_path_2351" fill="white" stroke="gray" d="M368.5000093206763,2560.499944411218A6,6,0,1,1,356.5000093206763,2560.499944411218A6,6,0,1,1,368.5000093206763,2560.499944411218"></path><path id="kity_path_2352" fill="none" stroke="gray" d="M358.0000093206763,2560.499944411218L367.0000093206763,2560.499944411218"></path></g><path id="node_outline136" fill="none" stroke="none" d="M373.5000094845891,2551.499944411218h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text136" fill="black"><text id="kity_text_1065" text-rendering="inherit" font-size="12" dy=".8em" y="2552.699944384396" x="373.5000094845891">拓展</text></g></g><g id="minder_node138"><g id="node_expander133" style="cursor: pointer;" display="none"><path id="kity_path_2345" fill="white" stroke="gray" d="M420.5000100955367,2547.499944217503A6,6,0,1,1,408.5000100955367,2547.499944217503A6,6,0,1,1,420.5000100955367,2547.499944217503"></path><path id="kity_path_2346" fill="none" stroke="gray"></path></g><path id="node_outline134" fill="none" stroke="none" d="M425.5000102594495,2538.499944217503h631a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-631a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text134" fill="black"><text id="kity_text_1061" text-rendering="inherit" font-size="12" dy=".8em" y="2539.699944190681" x="425.5000102594495">&#xa0;channel，slice，map 这三种类型的实现机制类似指针（传标头值的拷贝），可以直接传递，而不用取地址后传递指针</text></g></g><g id="minder_node139"><g id="node_expander134" style="cursor: pointer;" display="none"><path id="kity_path_2348" fill="white" stroke="gray" d="M420.5000100955367,2573.4999446049333A6,6,0,1,1,408.5000100955367,2573.4999446049333A6,6,0,1,1,420.5000100955367,2573.4999446049333"></path><path id="kity_path_2349" fill="none" stroke="gray"></path></g><path id="node_outline135" fill="none" stroke="none" d="M425.5000102594495,2564.4999446049333h462a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-462a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text135" fill="black"><text id="kity_text_1063" text-rendering="inherit" font-size="12" dy=".8em" y="2565.699944578111" x="425.5000102594495">数组（array）可以通过数组指针进行引用传递，但并不常用，这种情况下使用切片更好</text></g></g><g id="minder_node140"><g id="node_expander141" style="cursor: pointer;"><path id="kity_path_2369" fill="white" stroke="gray" d="M218.50000708550215,2625.4999453797936A6,6,0,1,1,206.50000708550215,2625.4999453797936A6,6,0,1,1,218.50000708550215,2625.4999453797936"></path><path id="kity_path_2370" fill="none" stroke="gray" d="M208.00000708550215,2625.4999453797936L217.00000708550215,2625.4999453797936"></path></g><path id="node_outline142" fill="none" stroke="none" d="M223.50000724941492,2616.4999453797936h38a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-38a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text142" fill="black"><text id="kity_text_1077" text-rendering="inherit" font-size="12" dy=".8em" y="2617.6999453529716" x="223.50000724941492">返回值</text></g></g><g id="minder_node141"><g id="node_expander138" style="cursor: pointer;" display="none"><path id="kity_path_2360" fill="white" stroke="gray" d="M282.50000803917646,2599.4999449923635A6,6,0,1,1,270.50000803917646,2599.4999449923635A6,6,0,1,1,282.50000803917646,2599.4999449923635"></path><path id="kity_path_2361" fill="none" stroke="gray"></path></g><path id="node_outline139" fill="none" stroke="none" d="M287.50000820308924,2590.4999449923635h229a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-229a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text139" fill="black"><text id="kity_text_1071" text-rendering="inherit" font-size="12" dy=".8em" y="2591.6999449655414" x="287.50000820308924">返回值的声明变量可以省略，只要类型即可</text></g></g><g id="minder_node142"><g id="node_expander139" style="cursor: pointer;" display="none"><path id="kity_path_2363" fill="white" stroke="gray" d="M282.50000803917646,2625.4999453797936A6,6,0,1,1,270.50000803917646,2625.4999453797936A6,6,0,1,1,282.50000803917646,2625.4999453797936"></path><path id="kity_path_2364" fill="none" stroke="gray"></path></g><path id="node_outline140" fill="none" stroke="none" d="M287.50000820308924,2616.4999453797936h218a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-218a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text140" fill="black"><text id="kity_text_1073" text-rendering="inherit" font-size="12" dy=".8em" y="2617.6999453529716" x="287.50000820308924">只有一个返回值的话可以不声明返回类型</text></g></g><g id="minder_node143"><g id="node_expander140" style="cursor: pointer;" display="none"><path id="kity_path_2366" fill="white" stroke="gray" d="M282.50000803917646,2651.499945767224A6,6,0,1,1,270.50000803917646,2651.499945767224A6,6,0,1,1,282.50000803917646,2651.499945767224"></path><path id="kity_path_2367" fill="none" stroke="gray"></path></g><path id="node_outline141" fill="none" stroke="none" d="M287.50000820308924,2642.499945767224h362a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-362a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text141" fill="black"><text id="kity_text_1075" text-rendering="inherit" font-size="12" dy=".8em" y="2643.6999457404017" x="287.50000820308924">支持多返回值，可结合空标识符使用，直接写return的话返回的是nil</text></g></g><g id="minder_node144"><g id="node_expander148" style="cursor: pointer;"><path id="kity_path_2390" fill="white" stroke="gray" d="M218.50000708550215,2716.4999467357993A6,6,0,1,1,206.50000708550215,2716.4999467357993A6,6,0,1,1,218.50000708550215,2716.4999467357993"></path><path id="kity_path_2391" fill="none" stroke="gray" d="M208.00000708550215,2716.4999467357993L217.00000708550215,2716.4999467357993"></path></g><path id="node_outline149" fill="none" stroke="none" d="M223.50000724941492,2707.4999467357993h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text149" fill="black"><text id="kity_text_1091" text-rendering="inherit" font-size="12" dy=".8em" y="2708.699946708977" x="223.50000724941492">用法</text></g></g><g id="minder_node145"><g id="node_expander142" style="cursor: pointer;" display="none"><path id="kity_path_2372" fill="white" stroke="gray" d="M269.50000784546137,2677.499946154654A6,6,0,1,1,257.50000784546137,2677.499946154654A6,6,0,1,1,269.50000784546137,2677.499946154654"></path><path id="kity_path_2373" fill="none" stroke="gray"></path></g><path id="node_outline143" fill="none" stroke="none" d="M274.50000800937414,2668.499946154654h385a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-385a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text143" fill="black"><text id="kity_text_1079" text-rendering="inherit" font-size="12" dy=".8em" y="2669.699946127832" x="274.50000800937414">作为值：定义后作为值使用，如声明函数为变量随后直接通过变量名使用</text></g></g><g id="minder_node146"><g id="node_expander143" style="cursor: pointer;" display="none"><path id="kity_path_2375" fill="white" stroke="gray" d="M269.50000784546137,2703.499946542084A6,6,0,1,1,257.50000784546137,2703.499946542084A6,6,0,1,1,269.50000784546137,2703.499946542084"></path><path id="kity_path_2376" fill="none" stroke="gray"></path></g><path id="node_outline144" fill="none" stroke="none" d="M274.50000800937414,2694.499946542084h444a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-444a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text144" fill="black"><text id="kity_text_1081" text-rendering="inherit" font-size="12" dy=".8em" y="2695.699946515262" x="274.50000800937414">闭包（匿名函数）：用于动态编程，优势在于可以直接使用函数内的变量而不必声明</text></g></g><g id="minder_node147"><g id="node_expander147" style="cursor: pointer;"><path id="kity_path_2387" fill="white" stroke="gray" d="M269.50000784546137,2755.4999473169446A6,6,0,1,1,257.50000784546137,2755.4999473169446A6,6,0,1,1,269.50000784546137,2755.4999473169446"></path><path id="kity_path_2388" fill="none" stroke="gray" d="M259.00000784546137,2755.4999473169446L268.00000784546137,2755.4999473169446"></path></g><path id="node_outline148" fill="none" stroke="none" d="M274.50000800937414,2746.4999473169446h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text148" fill="black"><text id="kity_text_1089" text-rendering="inherit" font-size="12" dy=".8em" y="2747.6999472901225" x="274.50000800937414">函数方法</text></g></g><g id="minder_node148"><g id="node_expander144" style="cursor: pointer;" display="none"><path id="kity_path_2378" fill="white" stroke="gray" d="M344.50000896304846,2729.4999469295144A6,6,0,1,1,332.50000896304846,2729.4999469295144A6,6,0,1,1,344.50000896304846,2729.4999469295144"></path><path id="kity_path_2379" fill="none" stroke="gray"></path></g><path id="node_outline145" fill="none" stroke="none" d="M349.50000912696123,2720.4999469295144h398a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-398a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text145" fill="black"><text id="kity_text_1083" text-rendering="inherit" font-size="12" dy=".8em" y="2721.6999469026923" x="349.50000912696123">方法就是一个包含了接受者的函数，接受者可以是命名类型或者结构体类型</text></g></g><g id="minder_node149"><g id="node_expander145" style="cursor: pointer;" display="none"><path id="kity_path_2381" fill="white" stroke="gray" d="M344.50000896304846,2755.4999473169446A6,6,0,1,1,332.50000896304846,2755.4999473169446A6,6,0,1,1,344.50000896304846,2755.4999473169446"></path><path id="kity_path_2382" fill="none" stroke="gray"></path></g><path id="node_outline146" fill="none" stroke="none" d="M349.50000912696123,2746.4999473169446h428a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-428a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text146" fill="black"><text id="kity_text_1085" text-rendering="inherit" font-size="12" dy=".8em" y="2747.6999472901225" x="349.50000912696123">语法格式：func (v_name v_type) function_name() [return_type]{   /* 函数体*/}</text></g></g><g id="minder_node150"><g id="node_expander146" style="cursor: pointer;" display="none"><path id="kity_path_2384" fill="white" stroke="gray" d="M344.50000896304846,2781.499947704375A6,6,0,1,1,332.50000896304846,2781.499947704375A6,6,0,1,1,344.50000896304846,2781.499947704375"></path><path id="kity_path_2385" fill="none" stroke="gray"></path></g><path id="node_outline147" fill="none" stroke="none" d="M349.50000912696123,2772.499947704375h132a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-132a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text147" fill="black"><text id="kity_text_1087" text-rendering="inherit" font-size="12" dy=".8em" y="2773.6999476775527" x="349.50000912696123">调用：接受者变量.方法()</text></g></g><g id="minder_node151"><g id="node_expander150" style="cursor: pointer;"><path id="kity_path_2396" fill="white" stroke="gray" d="M218.50000708550215,2807.499948091805A6,6,0,1,1,206.50000708550215,2807.499948091805A6,6,0,1,1,218.50000708550215,2807.499948091805"></path><path id="kity_path_2397" fill="none" stroke="gray" d="M208.00000708550215,2807.499948091805L217.00000708550215,2807.499948091805"></path></g><path id="node_outline151" fill="none" stroke="none" d="M223.50000724941492,2798.499948091805h205a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text151" fill="black"><text id="kity_text_1095" text-rendering="inherit" font-size="12" dy=".8em" y="2799.699948064983" x="223.50000724941492">递归函数（在运行的过程中调用自身）</text></g></g><g id="minder_node152"><g id="node_expander149" style="cursor: pointer;" display="none"><path id="kity_path_2393" fill="white" stroke="gray" d="M449.5000105276704,2807.499948091805A6,6,0,1,1,437.5000105276704,2807.499948091805A6,6,0,1,1,449.5000105276704,2807.499948091805"></path><path id="kity_path_2394" fill="none" stroke="gray"></path></g><path id="node_outline150" fill="none" stroke="none" d="M454.50001069158316,2798.499948091805h589a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-589a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text150" fill="black"><text id="kity_text_1093" text-rendering="inherit" font-size="12" dy=".8em" y="2799.699948064983" x="454.50001069158316">在使用递归函数时，必须设置退出条件（满足某一条件时return不含函数本身调用的语句），否则将陷入死循环</text></g></g><g id="minder_node153"><g id="node_expander151" style="cursor: pointer;" display="none"><path id="kity_path_2399" fill="white" stroke="gray" d="M218.50000708550215,2833.499948479235A6,6,0,1,1,206.50000708550215,2833.499948479235A6,6,0,1,1,218.50000708550215,2833.499948479235"></path><path id="kity_path_2400" fill="none" stroke="gray"></path></g><path id="node_outline152" fill="none" stroke="none" d="M223.50000724941492,2824.499948479235h433a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-433a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text152" fill="black"><text id="kity_text_1097" text-rendering="inherit" font-size="12" dy=".8em" y="2825.699948452413" x="223.50000724941492">公有函数的名字以大写字母开头（可以被导出）；私有函数的名字以小写字母开头</text></g></g><g id="minder_node154"><g id="node_expander154" style="cursor: pointer;"><path id="kity_path_2408" fill="white" stroke="gray" d="M218.50000708550215,2872.4999490603805A6,6,0,1,1,206.50000708550215,2872.4999490603805A6,6,0,1,1,218.50000708550215,2872.4999490603805"></path><path id="kity_path_2409" fill="none" stroke="gray" d="M208.00000708550215,2872.4999490603805L217.00000708550215,2872.4999490603805"></path></g><path id="node_outline155" fill="none" stroke="none" d="M223.50000724941492,2863.4999490603805h217a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-217a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text155" fill="black"><text id="kity_text_1103" text-rendering="inherit" font-size="12" dy=".8em" y="2864.6999490335584" x="223.50000724941492">延时函数：函数调用前添加 defer 关键字</text></g></g><g id="minder_node155"><g id="node_expander152" style="cursor: pointer;" display="none"><path id="kity_path_2402" fill="white" stroke="gray" d="M461.5000107064843,2859.4999488666654A6,6,0,1,1,449.5000107064843,2859.4999488666654A6,6,0,1,1,461.5000107064843,2859.4999488666654"></path><path id="kity_path_2403" fill="none" stroke="gray"></path></g><path id="node_outline153" fill="none" stroke="none" d="M466.5000108703971,2850.4999488666654h597a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-597a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text153" fill="black"><text id="kity_text_1099" text-rendering="inherit" font-size="12" dy=".8em" y="2851.6999488398433" x="466.5000108703971">当一个函数有多个延迟调用时，它们被添加到一个堆栈中，并在Last In First Out（LIFO）后进先出的顺序中执行</text></g></g><g id="minder_node156"><g id="node_expander153" style="cursor: pointer;" display="none"><path id="kity_path_2405" fill="white" stroke="gray" d="M461.5000107064843,2885.4999492540956A6,6,0,1,1,449.5000107064843,2885.4999492540956A6,6,0,1,1,461.5000107064843,2885.4999492540956"></path><path id="kity_path_2406" fill="none" stroke="gray"></path></g><path id="node_outline154" fill="none" stroke="none" d="M466.5000108703971,2876.4999492540956h574a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-574a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text154" fill="black"><text id="kity_text_1101" text-rendering="inherit" font-size="12" dy=".8em" y="2877.6999492272735" x="466.5000108703971">当一个函数调用前有关键字 defer 时, 这个函数的执行会推迟到包含这个 defer 语句的函数即将返回前才执行</text></g></g><g id="minder_node157"><g id="node_expander157" style="cursor: pointer;"><path id="kity_path_2417" fill="white" stroke="gray" d="M218.50000708550215,2924.499949835241A6,6,0,1,1,206.50000708550215,2924.499949835241A6,6,0,1,1,218.50000708550215,2924.499949835241"></path><path id="kity_path_2418" fill="none" stroke="gray" d="M208.00000708550215,2924.499949835241L217.00000708550215,2924.499949835241"></path></g><path id="node_outline158" fill="none" stroke="none" d="M223.50000724941492,2915.499949835241h266a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-266a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text158" fill="black"><text id="kity_text_1109" text-rendering="inherit" font-size="12" dy=".8em" y="2916.6999498084188" x="223.50000724941492">作为一种复合的数据类型，看作是一种特殊的变量</text></g></g><g id="minder_node158"><g id="node_expander155" style="cursor: pointer;" display="none"><path id="kity_path_2411" fill="white" stroke="gray" d="M510.5000114366412,2911.4999496415257A6,6,0,1,1,498.5000114366412,2911.4999496415257A6,6,0,1,1,510.5000114366412,2911.4999496415257"></path><path id="kity_path_2412" fill="none" stroke="gray"></path></g><path id="node_outline156" fill="none" stroke="none" d="M515.500011600554,2902.4999496415257h507a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-507a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text156" fill="black"><text id="kity_text_1105" text-rendering="inherit" font-size="12" dy=".8em" y="2903.6999496147037" x="515.500011600554">函数名()：将函数进行调用，函数中的代码全部都会执行，然后将执行结果(return后的数据)返回</text></g></g><g id="minder_node159"><g id="node_expander156" style="cursor: pointer;" display="none"><path id="kity_path_2414" fill="white" stroke="gray" d="M510.5000114366412,2937.499950028956A6,6,0,1,1,498.5000114366412,2937.499950028956A6,6,0,1,1,510.5000114366412,2937.499950028956"></path><path id="kity_path_2415" fill="none" stroke="gray"></path></g><path id="node_outline157" fill="none" stroke="none" d="M515.500011600554,2928.499950028956h205a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text157" fill="black"><text id="kity_text_1107" text-rendering="inherit" font-size="12" dy=".8em" y="2929.699950002134" x="515.500011600554">函数名：理解为指向函数体的内存地址</text></g></g><g id="minder_node160"><g id="node_expander173" style="cursor: pointer;"><path id="kity_path_2465" fill="white" stroke="gray" d="M83.50000507384539,3121.4999527707696A6,6,0,1,1,71.50000507384539,3121.4999527707696A6,6,0,1,1,83.50000507384539,3121.4999527707696"></path><path id="kity_path_2466" fill="none" stroke="gray" d="M73.00000507384539,3121.4999527707696L82.00000507384539,3121.4999527707696"></path></g><path id="node_outline174" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,3108.4999527707696h144a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-144a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text174" fill="black"><text id="kity_text_1142" text-rendering="inherit" font-size="14" dy=".8em" y="3112.399952739477" x="104.50000547617674">方法（Method）</text></g></g><g id="minder_node161"><g id="node_expander163" style="cursor: pointer;"><path id="kity_path_2435" fill="white" stroke="gray" d="M250.5000075623393,3019.499951250851A6,6,0,1,1,238.5000075623393,3019.499951250851A6,6,0,1,1,250.5000075623393,3019.499951250851"></path><path id="kity_path_2436" fill="none" stroke="gray" d="M240.0000075623393,3019.499951250851L249.0000075623393,3019.499951250851"></path></g><path id="node_outline164" fill="none" stroke="none" d="M255.50000772625208,3010.499951250851h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text164" fill="black"><text id="kity_text_1122" text-rendering="inherit" font-size="12" dy=".8em" y="3011.699951224029" x="255.50000772625208">定义</text></g></g><g id="minder_node162"><g id="node_expander159" style="cursor: pointer;" display="none"><path id="kity_path_2423" fill="white" stroke="gray" d="M302.5000083371997,2971.4999505355954A6,6,0,1,1,290.5000083371997,2971.4999505355954A6,6,0,1,1,302.5000083371997,2971.4999505355954"></path><path id="kity_path_2424" fill="none" stroke="gray"></path></g><path id="node_outline160" fill="none" stroke="none" d="M307.50000850111246,2962.4999505355954h730a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-730a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text160" fill="black"><text id="kity_text_1113" text-rendering="inherit" font-size="12" dy=".8em" y="2963.6999505087733" x="307.50000850111246">本质是函数，即作用在某中数据类型上的函数，多定义在struct上，与函数定义的区别是：多了一个接收者（在func关键字和方法名之间）</text></g></g><g id="minder_node163"><g id="node_expander160" style="cursor: pointer;" display="none"><path id="kity_path_2426" fill="white" stroke="gray" d="M302.5000083371997,2997.4999509230256A6,6,0,1,1,290.5000083371997,2997.4999509230256A6,6,0,1,1,302.5000083371997,2997.4999509230256"></path><path id="kity_path_2427" fill="none" stroke="gray"></path></g><path id="node_outline161" fill="none" stroke="none" d="M307.50000850111246,2988.4999509230256h486a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-486a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text161" fill="black"><text id="kity_text_1115" text-rendering="inherit" font-size="12" dy=".8em" y="2989.6999508962035" x="307.50000850111246">接收者可以是struct类型或非struct类型（较少使用），接收方可以在方法内部访问该接收者</text></g></g><g id="minder_node164"><g id="node_expander161" style="cursor: pointer;" display="none"><path id="kity_path_2429" fill="white" stroke="gray" d="M302.5000083371997,3023.499951310456A6,6,0,1,1,290.5000083371997,3023.499951310456A6,6,0,1,1,302.5000083371997,3023.499951310456"></path><path id="kity_path_2430" fill="none" stroke="gray"></path></g><path id="node_outline162" fill="none" stroke="none" d="M307.50000850111246,3014.499951310456h358a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-358a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text162" fill="black"><text id="kity_text_1117" text-rendering="inherit" font-size="12" dy=".8em" y="3015.6999512836337" x="307.50000850111246">语法：func (t Type) methodName(parameter list)(return list) { }</text></g></g><g id="minder_node165"><g id="node_expander162" style="cursor: pointer;" display="none"><path id="kity_path_2432" fill="white" stroke="gray" d="M302.5000083371997,3058.4999518319964A6,6,0,1,1,290.5000083371997,3058.4999518319964A6,6,0,1,1,302.5000083371997,3058.4999518319964"></path><path id="kity_path_2433" fill="none" stroke="gray"></path></g><path id="node_outline163" fill="none" stroke="none" d="M307.50000850111246,3040.4999518319964h597a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-597a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text163" fill="black"><text id="kity_text_1119" text-rendering="inherit" font-size="12" dy=".8em" y="3041.6999518051744" x="307.50000850111246">若需要修改接收者中的数据，就需要使用指针作为接收者（如结构体指针），</text><text id="kity_text_1120" text-rendering="inherit" font-size="12" dy=".8em" y="3059.6999518051744" x="307.50000850111246">【解析】以struct为例，若不以指针作为接收者，实际只是获取了struct的一个copy，故而修改操作不能原地修改</text></g></g><g id="minder_node166"><g id="node_expander170" style="cursor: pointer;"><path id="kity_path_2456" fill="white" stroke="gray" d="M250.5000075623393,3165.4999534264207A6,6,0,1,1,238.5000075623393,3165.4999534264207A6,6,0,1,1,250.5000075623393,3165.4999534264207"></path><path id="kity_path_2457" fill="none" stroke="gray" d="M240.0000075623393,3165.4999534264207L249.0000075623393,3165.4999534264207"></path></g><path id="node_outline171" fill="none" stroke="none" d="M255.50000772625208,3156.4999534264207h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text171" fill="black"><text id="kity_text_1136" text-rendering="inherit" font-size="12" dy=".8em" y="3157.6999533995986" x="255.50000772625208">特性</text></g></g><g id="minder_node167"><g id="node_expander168" style="cursor: pointer;"><path id="kity_path_2450" fill="white" stroke="gray" d="M302.5000083371997,3133.4999529495835A6,6,0,1,1,290.5000083371997,3133.4999529495835A6,6,0,1,1,302.5000083371997,3133.4999529495835"></path><path id="kity_path_2451" fill="none" stroke="gray" d="M292.0000083371997,3133.4999529495835L301.0000083371997,3133.4999529495835"></path></g><path id="node_outline169" fill="none" stroke="none" d="M307.50000850111246,3124.4999529495835h85a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text169" fill="black"><text id="kity_text_1132" text-rendering="inherit" font-size="12" dy=".8em" y="3125.6999529227614" x="307.50000850111246">支持继承和重写</text></g></g><g id="minder_node168"><g id="node_expander164" style="cursor: pointer;" display="none"><path id="kity_path_2438" fill="white" stroke="gray" d="M413.5000099912286,3094.4999523684382A6,6,0,1,1,401.5000099912286,3094.4999523684382A6,6,0,1,1,413.5000099912286,3094.4999523684382"></path><path id="kity_path_2439" fill="none" stroke="gray"></path></g><path id="node_outline165" fill="none" stroke="none" d="M418.50001015514135,3085.4999523684382h460a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-460a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text165" fill="black"><text id="kity_text_1124" text-rendering="inherit" font-size="12" dy=".8em" y="3086.699952341616" x="418.50001015514135">如果匿名字段实现了一个method，那么包含这个匿名字段的struct也能调用该method</text></g></g><g id="minder_node169"><g id="node_expander165" style="cursor: pointer;" display="none"><path id="kity_path_2441" fill="white" stroke="gray" d="M413.5000099912286,3120.4999527558684A6,6,0,1,1,401.5000099912286,3120.4999527558684A6,6,0,1,1,413.5000099912286,3120.4999527558684"></path><path id="kity_path_2442" fill="none" stroke="gray"></path></g><path id="node_outline166" fill="none" stroke="none" d="M418.50001015514135,3111.4999527558684h383a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-383a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text166" fill="black"><text id="kity_text_1126" text-rendering="inherit" font-size="12" dy=".8em" y="3112.6999527290463" x="418.50001015514135">匿名字段实现的method可以被包含这个匿名字段的struct复写/重写覆盖</text></g></g><g id="minder_node170"><g id="node_expander166" style="cursor: pointer;" display="none"><path id="kity_path_2444" fill="white" stroke="gray" d="M413.5000099912286,3146.4999531432986A6,6,0,1,1,401.5000099912286,3146.4999531432986A6,6,0,1,1,413.5000099912286,3146.4999531432986"></path><path id="kity_path_2445" fill="none" stroke="gray"></path></g><path id="node_outline167" fill="none" stroke="none" d="M418.50001015514135,3137.4999531432986h229a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-229a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text167" fill="black"><text id="kity_text_1128" text-rendering="inherit" font-size="12" dy=".8em" y="3138.6999531164765" x="418.50001015514135">存在继承关系时，按照就近原则，进行调用</text></g></g><g id="minder_node171"><g id="node_expander167" style="cursor: pointer;" display="none"><path id="kity_path_2447" fill="white" stroke="gray" d="M413.5000099912286,3172.499953530729A6,6,0,1,1,401.5000099912286,3172.499953530729A6,6,0,1,1,413.5000099912286,3172.499953530729"></path><path id="kity_path_2448" fill="none" stroke="gray"></path></g><path id="node_outline168" fill="none" stroke="none" d="M418.50001015514135,3163.499953530729h184a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-184a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text168" fill="black"><text id="kity_text_1130" text-rendering="inherit" font-size="12" dy=".8em" y="3164.6999535039067" x="418.50001015514135">重写方法可以用于功能扩展等需求&#xa0;</text></g></g><g id="minder_node172"><g id="node_expander169" style="cursor: pointer;" display="none"><path id="kity_path_2453" fill="white" stroke="gray" d="M302.5000083371997,3198.499953918159A6,6,0,1,1,290.5000083371997,3198.499953918159A6,6,0,1,1,302.5000083371997,3198.499953918159"></path><path id="kity_path_2454" fill="none" stroke="gray"></path></g><path id="node_outline170" fill="none" stroke="none" d="M307.50000850111246,3189.499953918159h194a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-194a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text170" fill="black"><text id="kity_text_1134" text-rendering="inherit" font-size="12" dy=".8em" y="3190.699953891337" x="307.50000850111246">不同类型上支持定义相同名称的方法</text></g></g><g id="minder_node173"><g id="node_expander172" style="cursor: pointer;"><path id="kity_path_2462" fill="white" stroke="gray" d="M250.5000075623393,3223.499954290688A6,6,0,1,1,238.5000075623393,3223.499954290688A6,6,0,1,1,250.5000075623393,3223.499954290688"></path><path id="kity_path_2463" fill="none" stroke="gray" d="M240.0000075623393,3223.499954290688L249.0000075623393,3223.499954290688"></path></g><path id="node_outline173" fill="none" stroke="none" d="M255.50000772625208,3214.499954290688h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text173" fill="black"><text id="kity_text_1140" text-rendering="inherit" font-size="12" dy=".8em" y="3215.699954263866" x="255.50000772625208">用途</text></g></g><g id="minder_node174"><g id="node_expander171" style="cursor: pointer;" display="none"><path id="kity_path_2459" fill="white" stroke="gray" d="M301.5000083222985,3223.499954290688A6,6,0,1,1,289.5000083222985,3223.499954290688A6,6,0,1,1,301.5000083222985,3223.499954290688"></path><path id="kity_path_2460" fill="none" stroke="gray"></path></g><path id="node_outline172" fill="none" stroke="none" d="M306.5000084862113,3214.499954290688h593a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-593a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text172" fill="black"><text id="kity_text_1138" text-rendering="inherit" font-size="12" dy=".8em" y="3215.699954263866" x="306.5000084862113">Go不是一种纯粹面向对象的编程语言，它不支持类。因此，通常用类型的方法来实现类似于其他语言中类的行为</text></g></g><g id="minder_node175"><g id="node_expander189" style="cursor: pointer;"><path id="kity_path_2513" fill="white" stroke="gray" d="M83.50000507384539,3361.4999563470483A6,6,0,1,1,71.50000507384539,3361.4999563470483A6,6,0,1,1,83.50000507384539,3361.4999563470483"></path><path id="kity_path_2514" fill="none" stroke="gray" d="M73.00000507384539,3361.4999563470483L82.00000507384539,3361.4999563470483"></path></g><path id="node_outline190" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,3348.4999563470483h142a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-142a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text190" fill="black"><text id="kity_text_1174" text-rendering="inherit" font-size="14" dy=".8em" y="3352.399956315756" x="104.50000547617674">字符串（string）</text></g></g><g id="minder_node176"><g id="node_expander174" style="cursor: pointer;" display="none"><path id="kity_path_2468" fill="white" stroke="gray" d="M248.50000753253698,3257.4999547973275A6,6,0,1,1,236.50000753253698,3257.4999547973275A6,6,0,1,1,248.50000753253698,3257.4999547973275"></path><path id="kity_path_2469" fill="none" stroke="gray"></path></g><path id="node_outline175" fill="none" stroke="none" d="M253.50000769644976,3248.4999547973275h601a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-601a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text175" fill="black"><text id="kity_text_1144" text-rendering="inherit" font-size="12" dy=".8em" y="3249.6999547705054" x="253.50000769644976">一系列8位字节的集合/切片，可以为空，但不能为nil；而且字符串的值是不能改变的；UTF-8编码，兼容Unicode</text></g></g><g id="minder_node177"><g id="node_expander175" style="cursor: pointer;" display="none"><path id="kity_path_2471" fill="white" stroke="gray" d="M248.50000753253698,3283.4999551847577A6,6,0,1,1,236.50000753253698,3283.4999551847577A6,6,0,1,1,248.50000753253698,3283.4999551847577"></path><path id="kity_path_2472" fill="none" stroke="gray"></path></g><path id="node_outline176" fill="none" stroke="none" d="M253.50000769644976,3274.4999551847577h272a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-272a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text176" fill="black"><text id="kity_text_1146" text-rendering="inherit" font-size="12" dy=".8em" y="3275.6999551579356" x="253.50000769644976">声明格式：var&#xa0;name&#xa0;string（值为空，但不是nil）</text></g></g><g id="minder_node178"><g id="node_expander177" style="cursor: pointer;"><path id="kity_path_2477" fill="white" stroke="gray" d="M248.50000753253698,3309.499955572188A6,6,0,1,1,236.50000753253698,3309.499955572188A6,6,0,1,1,248.50000753253698,3309.499955572188"></path><path id="kity_path_2478" fill="none" stroke="gray" d="M238.00000753253698,3309.499955572188L247.00000753253698,3309.499955572188"></path></g><path id="node_outline178" fill="none" stroke="none" d="M253.50000769644976,3300.499955572188h38a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-38a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text178" fill="black"><text id="kity_text_1150" text-rendering="inherit" font-size="12" dy=".8em" y="3301.699955545366" x="253.50000769644976">初始化</text></g></g><g id="minder_node179"><g id="node_expander176" style="cursor: pointer;" display="none"><path id="kity_path_2474" fill="white" stroke="gray" d="M312.5000084862113,3309.499955572188A6,6,0,1,1,300.5000084862113,3309.499955572188A6,6,0,1,1,312.5000084862113,3309.499955572188"></path><path id="kity_path_2475" fill="none" stroke="gray"></path></g><path id="node_outline177" fill="none" stroke="none" d="M317.5000086501241,3300.499955572188h179a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-179a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text177" fill="black"><text id="kity_text_1148" text-rendering="inherit" font-size="12" dy=".8em" y="3301.699955545366" x="317.5000086501241">短声明：name := "Hello Worlg"</text></g></g><g id="minder_node180"><g id="node_expander178" style="cursor: pointer;" display="none"><path id="kity_path_2480" fill="white" stroke="gray" d="M248.50000753253698,3335.499955959618A6,6,0,1,1,236.50000753253698,3335.499955959618A6,6,0,1,1,248.50000753253698,3335.499955959618"></path><path id="kity_path_2481" fill="none" stroke="gray"></path></g><path id="node_outline179" fill="none" stroke="none" d="M253.50000769644976,3326.499955959618h315a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-315a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text179" fill="black"><text id="kity_text_1152" text-rendering="inherit" font-size="12" dy=".8em" y="3327.699955932796" x="253.50000769644976">string和[]uint8/[]byte可以通过[] byte()和string()进行互转</text></g></g><g id="minder_node181"><g id="node_expander188" style="cursor: pointer;"><path id="kity_path_2510" fill="white" stroke="gray" d="M248.50000753253698,3465.499957896769A6,6,0,1,1,236.50000753253698,3465.499957896769A6,6,0,1,1,248.50000753253698,3465.499957896769"></path><path id="kity_path_2511" fill="none" stroke="gray" d="M238.00000753253698,3465.499957896769L247.00000753253698,3465.499957896769"></path></g><path id="node_outline189" fill="none" stroke="none" d="M253.50000769644976,3456.499957896769h99a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-99a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text189" fill="black"><text id="kity_text_1172" text-rendering="inherit" font-size="12" dy=".8em" y="3457.699957869947" x="253.50000769644976">strings包常用方法</text></g></g><g id="minder_node182"><g id="node_expander179" style="cursor: pointer;" display="none"><path id="kity_path_2483" fill="white" stroke="gray" d="M373.50000939518213,3361.4999563470483A6,6,0,1,1,361.50000939518213,3361.4999563470483A6,6,0,1,1,373.50000939518213,3361.4999563470483"></path><path id="kity_path_2484" fill="none" stroke="gray"></path></g><path id="node_outline180" fill="none" stroke="none" d="M378.5000095590949,3352.4999563470483h207a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-207a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text180" fill="black"><text id="kity_text_1154" text-rendering="inherit" font-size="12" dy=".8em" y="3353.699956320226" x="378.5000095590949">前缀和后缀：HasPrefix()、HasSuffix()</text></g></g><g id="minder_node183"><g id="node_expander180" style="cursor: pointer;" display="none"><path id="kity_path_2486" fill="white" stroke="gray" d="M373.50000939518213,3387.4999567344785A6,6,0,1,1,361.50000939518213,3387.4999567344785A6,6,0,1,1,373.50000939518213,3387.4999567344785"></path><path id="kity_path_2487" fill="none" stroke="gray"></path></g><path id="node_outline181" fill="none" stroke="none" d="M378.5000095590949,3378.4999567344785h238a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text181" fill="black"><text id="kity_text_1156" text-rendering="inherit" font-size="12" dy=".8em" y="3379.6999567076564" x="378.5000095590949">搜索：Index(s,substr)、LastIndex(s,substr)</text></g></g><g id="minder_node184"><g id="node_expander181" style="cursor: pointer;" display="none"><path id="kity_path_2489" fill="white" stroke="gray" d="M373.50000939518213,3413.4999571219087A6,6,0,1,1,361.50000939518213,3413.4999571219087A6,6,0,1,1,373.50000939518213,3413.4999571219087"></path><path id="kity_path_2490" fill="none" stroke="gray"></path></g><path id="node_outline182" fill="none" stroke="none" d="M378.5000095590949,3404.4999571219087h365a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-365a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text182" fill="black"><text id="kity_text_1158" text-rendering="inherit" font-size="12" dy=".8em" y="3405.6999570950866" x="378.5000095590949">替换：Replace(s,old,new,n)，n表示替换的次数，如果全部替换，-1</text></g></g><g id="minder_node185"><g id="node_expander182" style="cursor: pointer;" display="none"><path id="kity_path_2492" fill="white" stroke="gray" d="M373.50000939518213,3439.499957509339A6,6,0,1,1,361.50000939518213,3439.499957509339A6,6,0,1,1,373.50000939518213,3439.499957509339"></path><path id="kity_path_2493" fill="none" stroke="gray"></path></g><path id="node_outline183" fill="none" stroke="none" d="M378.5000095590949,3430.499957509339h123a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-123a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text183" fill="black"><text id="kity_text_1160" text-rendering="inherit" font-size="12" dy=".8em" y="3431.6999574825168" x="378.5000095590949">统计：Count(s,substr)</text></g></g><g id="minder_node186"><g id="node_expander183" style="cursor: pointer;" display="none"><path id="kity_path_2495" fill="white" stroke="gray" d="M373.50000939518213,3465.499957896769A6,6,0,1,1,361.50000939518213,3465.499957896769A6,6,0,1,1,373.50000939518213,3465.499957896769"></path><path id="kity_path_2496" fill="none" stroke="gray"></path></g><path id="node_outline184" fill="none" stroke="none" d="M378.5000095590949,3456.499957896769h200a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-200a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text184" fill="black"><text id="kity_text_1162" text-rendering="inherit" font-size="12" dy=".8em" y="3457.699957869947" x="378.5000095590949">大小写转换：ToLower()、ToUpper()</text></g></g><g id="minder_node187"><g id="node_expander184" style="cursor: pointer;" display="none"><path id="kity_path_2498" fill="white" stroke="gray" d="M373.50000939518213,3491.4999582841992A6,6,0,1,1,361.50000939518213,3491.4999582841992A6,6,0,1,1,373.50000939518213,3491.4999582841992"></path><path id="kity_path_2499" fill="none" stroke="gray"></path></g><path id="node_outline185" fill="none" stroke="none" d="M378.5000095590949,3482.4999582841992h125a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-125a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text185" fill="black"><text id="kity_text_1164" text-rendering="inherit" font-size="12" dy=".8em" y="3483.699958257377" x="378.5000095590949">切割：Split()、SplitN()</text></g></g><g id="minder_node188"><g id="node_expander185" style="cursor: pointer;" display="none"><path id="kity_path_2501" fill="white" stroke="gray" d="M373.50000939518213,3517.4999586716294A6,6,0,1,1,361.50000939518213,3517.4999586716294A6,6,0,1,1,373.50000939518213,3517.4999586716294"></path><path id="kity_path_2502" fill="none" stroke="gray"></path></g><path id="node_outline186" fill="none" stroke="none" d="M378.5000095590949,3508.4999586716294h101a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-101a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text186" fill="black"><text id="kity_text_1166" text-rendering="inherit" font-size="12" dy=".8em" y="3509.6999586448073" x="378.5000095590949">重复：Repeat(s,n)</text></g></g><g id="minder_node189"><g id="node_expander186" style="cursor: pointer;" display="none"><path id="kity_path_2504" fill="white" stroke="gray" d="M373.50000939518213,3543.4999590590596A6,6,0,1,1,361.50000939518213,3543.4999590590596A6,6,0,1,1,373.50000939518213,3543.4999590590596"></path><path id="kity_path_2505" fill="none" stroke="gray"></path></g><path id="node_outline187" fill="none" stroke="none" d="M378.5000095590949,3534.4999590590596h239a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text187" fill="black"><text id="kity_text_1168" text-rendering="inherit" font-size="12" dy=".8em" y="3535.6999590322375" x="378.5000095590949">截取：s[start:end]--&gt;截取子串，[start,end)</text></g></g><g id="minder_node190"><g id="node_expander187" style="cursor: pointer;" display="none"><path id="kity_path_2507" fill="white" stroke="gray" d="M373.50000939518213,3569.49995944649A6,6,0,1,1,361.50000939518213,3569.49995944649A6,6,0,1,1,373.50000939518213,3569.49995944649"></path><path id="kity_path_2508" fill="none" stroke="gray"></path></g><path id="node_outline188" fill="none" stroke="none" d="M378.5000095590949,3560.49995944649h275a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-275a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text188" fill="black"><text id="kity_text_1170" text-rendering="inherit" font-size="12" dy=".8em" y="3561.6999594196677" x="378.5000095590949">包含：Contains(s,substr)、ContainsAny(s,substr)</text></g></g><g id="minder_node191"><g id="node_expander199" style="cursor: pointer;"><path id="kity_path_2543" fill="white" stroke="gray" d="M83.50000507384539,3674.4999610111117A6,6,0,1,1,71.50000507384539,3674.4999610111117A6,6,0,1,1,83.50000507384539,3674.4999610111117"></path><path id="kity_path_2544" fill="none" stroke="gray" d="M73.00000507384539,3674.4999610111117L82.00000507384539,3674.4999610111117"></path></g><path id="node_outline200" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,3661.4999610111117h127a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-127a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text200" fill="black"><text id="kity_text_1194" text-rendering="inherit" font-size="14" dy=".8em" y="3665.3999609798193" x="104.50000547617674">数组（Array）</text></g></g><g id="minder_node192"><g id="node_expander192" style="cursor: pointer;"><path id="kity_path_2522" fill="white" stroke="gray" d="M233.50000730901957,3616.4999601468444A6,6,0,1,1,221.50000730901957,3616.4999601468444A6,6,0,1,1,233.50000730901957,3616.4999601468444"></path><path id="kity_path_2523" fill="none" stroke="gray" d="M223.00000730901957,3616.4999601468444L232.00000730901957,3616.4999601468444"></path></g><path id="node_outline193" fill="none" stroke="none" d="M238.50000747293234,3607.4999601468444h37a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-37a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text193" fill="black"><text id="kity_text_1180" text-rendering="inherit" font-size="12" dy=".8em" y="3608.6999601200223" x="238.50000747293234">特性：</text></g></g><g id="minder_node193"><g id="node_expander190" style="cursor: pointer;" display="none"><path id="kity_path_2516" fill="white" stroke="gray" d="M296.5000082477927,3603.4999599531293A6,6,0,1,1,284.5000082477927,3603.4999599531293A6,6,0,1,1,296.5000082477927,3603.4999599531293"></path><path id="kity_path_2517" fill="none" stroke="gray"></path></g><path id="node_outline191" fill="none" stroke="none" d="M301.5000084117055,3594.4999599531293h193a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-193a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text191" fill="black"><text id="kity_text_1176" text-rendering="inherit" font-size="12" dy=".8em" y="3595.699959926307" x="301.5000084117055">用于（也只能）存储同一类型的数据</text></g></g><g id="minder_node194"><g id="node_expander191" style="cursor: pointer;" display="none"><path id="kity_path_2519" fill="white" stroke="gray" d="M296.5000082477927,3629.4999603405595A6,6,0,1,1,284.5000082477927,3629.4999603405595A6,6,0,1,1,296.5000082477927,3629.4999603405595"></path><path id="kity_path_2520" fill="none" stroke="gray"></path></g><path id="node_outline192" fill="none" stroke="none" d="M301.5000084117055,3620.4999603405595h61a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text192" fill="black"><text id="kity_text_1178" text-rendering="inherit" font-size="12" dy=".8em" y="3621.6999603137374" x="301.5000084117055">长度不可变</text></g></g><g id="minder_node195"><g id="node_expander193" style="cursor: pointer;" display="none"><path id="kity_path_2525" fill="white" stroke="gray" d="M233.50000730901957,3655.4999607279897A6,6,0,1,1,221.50000730901957,3655.4999607279897A6,6,0,1,1,233.50000730901957,3655.4999607279897"></path><path id="kity_path_2526" fill="none" stroke="gray"></path></g><path id="node_outline194" fill="none" stroke="none" d="M238.50000747293234,3646.4999607279897h549a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-549a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text194" fill="black"><text id="kity_text_1182" text-rendering="inherit" font-size="12" dy=".8em" y="3647.6999607011676" x="238.50000747293234">声明格式：var name [SIZE] type，其中SIZE为空表示空数组，SIZE也可以是三个点（...）表示长度不定</text></g></g><g id="minder_node196"><g id="node_expander195" style="cursor: pointer;"><path id="kity_path_2531" fill="white" stroke="gray" d="M233.50000730901957,3681.49996111542A6,6,0,1,1,221.50000730901957,3681.49996111542A6,6,0,1,1,233.50000730901957,3681.49996111542"></path><path id="kity_path_2532" fill="none" stroke="gray" d="M223.00000730901957,3681.49996111542L232.00000730901957,3681.49996111542"></path></g><path id="node_outline196" fill="none" stroke="none" d="M238.50000747293234,3672.49996111542h121a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-121a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text196" fill="black"><text id="kity_text_1186" text-rendering="inherit" font-size="12" dy=".8em" y="3673.699961088598" x="238.50000747293234">初始化：可以包含声明</text></g></g><g id="minder_node197"><g id="node_expander194" style="cursor: pointer;" display="none"><path id="kity_path_2528" fill="white" stroke="gray" d="M380.50000949949026,3681.49996111542A6,6,0,1,1,368.50000949949026,3681.49996111542A6,6,0,1,1,380.50000949949026,3681.49996111542"></path><path id="kity_path_2529" fill="none" stroke="gray"></path></g><path id="node_outline195" fill="none" stroke="none" d="M385.50000966340303,3672.49996111542h184a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-184a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text195" fill="black"><text id="kity_text_1184" text-rendering="inherit" font-size="12" dy=".8em" y="3673.699961088598" x="385.50000966340303">短格式声明一个空数组：arr := []{}</text></g></g><g id="minder_node198"><g id="node_expander196" style="cursor: pointer;" display="none"><path id="kity_path_2534" fill="white" stroke="gray" d="M233.50000730901957,3707.49996150285A6,6,0,1,1,221.50000730901957,3707.49996150285A6,6,0,1,1,233.50000730901957,3707.49996150285"></path><path id="kity_path_2535" fill="none" stroke="gray"></path></g><path id="node_outline197" fill="none" stroke="none" d="M238.50000747293234,3698.49996150285h299a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-299a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text197" fill="black"><text id="kity_text_1188" text-rendering="inherit" font-size="12" dy=".8em" y="3699.699961476028" x="238.50000747293234">访问：通过索引（位置）来读取。格式为：name[index]</text></g></g><g id="minder_node199"><g id="node_expander198" style="cursor: pointer;"><path id="kity_path_2540" fill="white" stroke="gray" d="M233.50000730901957,3733.4999618902802A6,6,0,1,1,221.50000730901957,3733.4999618902802A6,6,0,1,1,233.50000730901957,3733.4999618902802"></path><path id="kity_path_2541" fill="none" stroke="gray" d="M223.00000730901957,3733.4999618902802L232.00000730901957,3733.4999618902802"></path></g><path id="node_outline199" fill="none" stroke="none" d="M238.50000747293234,3724.4999618902802h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text199" fill="black"><text id="kity_text_1192" text-rendering="inherit" font-size="12" dy=".8em" y="3725.699961863458" x="238.50000747293234">数组方法</text></g></g><g id="minder_node200"><g id="node_expander197" style="cursor: pointer;" display="none"><path id="kity_path_2537" fill="white" stroke="gray" d="M309.5000084415078,3733.4999618902802A6,6,0,1,1,297.5000084415078,3733.4999618902802A6,6,0,1,1,309.5000084415078,3733.4999618902802"></path><path id="kity_path_2538" fill="none" stroke="gray"></path></g><path id="node_outline198" fill="none" stroke="none" d="M314.5000086054206,3724.4999618902802h89a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-89a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text198" fill="black"><text id="kity_text_1190" text-rendering="inherit" font-size="12" dy=".8em" y="3725.699961863458" x="314.5000086054206">追加：append()</text></g></g><g id="minder_node201"><g id="node_expander215" style="cursor: pointer;"><path id="kity_path_2591" fill="white" stroke="gray" d="M83.50000507384539,3887.499964185059A6,6,0,1,1,71.50000507384539,3887.499964185059A6,6,0,1,1,83.50000507384539,3887.499964185059"></path><path id="kity_path_2592" fill="none" stroke="gray" d="M73.00000507384539,3887.499964185059L82.00000507384539,3887.499964185059"></path></g><path id="node_outline216" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,3874.499964185059h121a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-121a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text216" fill="black"><text id="kity_text_1226" text-rendering="inherit" font-size="14" dy=".8em" y="3878.3999641537666" x="104.50000547617674">切片（Slice）</text></g></g><g id="minder_node202"><g id="node_expander204" style="cursor: pointer;"><path id="kity_path_2558" fill="white" stroke="gray" d="M227.5000072196126,3806.499962978065A6,6,0,1,1,215.5000072196126,3806.499962978065A6,6,0,1,1,227.5000072196126,3806.499962978065"></path><path id="kity_path_2559" fill="none" stroke="gray" d="M217.0000072196126,3806.499962978065L226.0000072196126,3806.499962978065"></path></g><path id="node_outline205" fill="none" stroke="none" d="M232.50000738352537,3797.499962978065h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text205" fill="black"><text id="kity_text_1204" text-rendering="inherit" font-size="12" dy=".8em" y="3798.699962951243" x="232.50000738352537">特性</text></g></g><g id="minder_node203"><g id="node_expander200" style="cursor: pointer;" display="none"><path id="kity_path_2546" fill="white" stroke="gray" d="M279.500007994473,3767.4999623969197A6,6,0,1,1,267.500007994473,3767.4999623969197A6,6,0,1,1,279.500007994473,3767.4999623969197"></path><path id="kity_path_2547" fill="none" stroke="gray"></path></g><path id="node_outline201" fill="none" stroke="none" d="M284.50000815838575,3758.4999623969197h461a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-461a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text201" fill="black"><text id="kity_text_1196" text-rendering="inherit" font-size="12" dy=".8em" y="3759.6999623700976" x="284.50000815838575">是对数组的抽象，可以看作是长度可变的“动态数组” ：存储相同数据类型、长度可变</text></g></g><g id="minder_node204"><g id="node_expander201" style="cursor: pointer;" display="none"><path id="kity_path_2549" fill="white" stroke="gray" d="M279.500007994473,3793.49996278435A6,6,0,1,1,267.500007994473,3793.49996278435A6,6,0,1,1,279.500007994473,3793.49996278435"></path><path id="kity_path_2550" fill="none" stroke="gray"></path></g><path id="node_outline202" fill="none" stroke="none" d="M284.50000815838575,3784.49996278435h302a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-302a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text202" fill="black"><text id="kity_text_1198" text-rendering="inherit" font-size="12" dy=".8em" y="3785.699962757528" x="284.50000815838575">数组是需要指定个数的（空数组除外），而切片则不需要</text></g></g><g id="minder_node205"><g id="node_expander202" style="cursor: pointer;" display="none"><path id="kity_path_2552" fill="white" stroke="gray" d="M279.500007994473,3819.49996317178A6,6,0,1,1,267.500007994473,3819.49996317178A6,6,0,1,1,279.500007994473,3819.49996317178"></path><path id="kity_path_2553" fill="none" stroke="gray"></path></g><path id="node_outline203" fill="none" stroke="none" d="M284.50000815838575,3810.49996317178h681a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-681a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text203" fill="black"><text id="kity_text_1200" text-rendering="inherit" font-size="12" dy=".8em" y="3811.699963144958" x="284.50000815838575">与数组在声明时的区别：声明数组时，方括号内写明了数组的长度或使用...自动计算长度；声明slice时，方括号内没有任何字符。</text></g></g><g id="minder_node206"><g id="node_expander203" style="cursor: pointer;" display="none"><path id="kity_path_2555" fill="white" stroke="gray" d="M279.500007994473,3845.4999635592103A6,6,0,1,1,267.500007994473,3845.4999635592103A6,6,0,1,1,279.500007994473,3845.4999635592103"></path><path id="kity_path_2556" fill="none" stroke="gray"></path></g><path id="node_outline204" fill="none" stroke="none" d="M284.50000815838575,3836.4999635592103h538a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text204" fill="black"><text id="kity_text_1202" text-rendering="inherit" font-size="12" dy=".8em" y="3837.699963532388" x="284.50000815838575">slice是间接引用，除了和nil，不支持与其他任何内容，包括自身的比较符号==（map也有这个特性）</text></g></g><g id="minder_node207"><g id="node_expander207" style="cursor: pointer;"><path id="kity_path_2567" fill="white" stroke="gray" d="M227.5000072196126,3884.4999641403556A6,6,0,1,1,215.5000072196126,3884.4999641403556A6,6,0,1,1,227.5000072196126,3884.4999641403556"></path><path id="kity_path_2568" fill="none" stroke="gray" d="M217.0000072196126,3884.4999641403556L226.0000072196126,3884.4999641403556"></path></g><path id="node_outline208" fill="none" stroke="none" d="M232.50000738352537,3875.4999641403556h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text208" fill="black"><text id="kity_text_1210" text-rendering="inherit" font-size="12" dy=".8em" y="3876.6999641135335" x="232.50000738352537">定义</text></g></g><g id="minder_node208"><g id="node_expander205" style="cursor: pointer;" display="none"><path id="kity_path_2561" fill="white" stroke="gray" d="M279.500007994473,3871.4999639466405A6,6,0,1,1,267.500007994473,3871.4999639466405A6,6,0,1,1,279.500007994473,3871.4999639466405"></path><path id="kity_path_2562" fill="none" stroke="gray"></path></g><path id="node_outline206" fill="none" stroke="none" d="M284.50000815838575,3862.4999639466405h247a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-247a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text206" fill="black"><text id="kity_text_1206" text-rendering="inherit" font-size="12" dy=".8em" y="3863.6999639198184" x="284.50000815838575">直接声明（中括号内必空）：var name []type</text></g></g><g id="minder_node209"><g id="node_expander206" style="cursor: pointer;" display="none"><path id="kity_path_2564" fill="white" stroke="gray" d="M279.500007994473,3897.4999643340707A6,6,0,1,1,267.500007994473,3897.4999643340707A6,6,0,1,1,279.500007994473,3897.4999643340707"></path><path id="kity_path_2565" fill="none" stroke="gray"></path></g><path id="node_outline207" fill="none" stroke="none" d="M284.50000815838575,3888.4999643340707h446a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-446a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text207" fill="black"><text id="kity_text_1208" text-rendering="inherit" font-size="12" dy=".8em" y="3889.6999643072486" x="284.50000815838575">使用内建函数make创建（容量为可选参数）：name := make([]type len, capacity)</text></g></g><g id="minder_node210"><g id="node_expander214" style="cursor: pointer;"><path id="kity_path_2588" fill="white" stroke="gray" d="M227.5000072196126,3968.499965392053A6,6,0,1,1,215.5000072196126,3968.499965392053A6,6,0,1,1,227.5000072196126,3968.499965392053"></path><path id="kity_path_2589" fill="none" stroke="gray" d="M217.0000072196126,3968.499965392053L226.0000072196126,3968.499965392053"></path></g><path id="node_outline215" fill="none" stroke="none" d="M232.50000738352537,3959.499965392053h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text215" fill="black"><text id="kity_text_1224" text-rendering="inherit" font-size="12" dy=".8em" y="3960.699965365231" x="232.50000738352537">相关函数</text></g></g><g id="minder_node211"><g id="node_expander208" style="cursor: pointer;" display="none"><path id="kity_path_2570" fill="white" stroke="gray" d="M303.50000835210085,3923.499964721501A6,6,0,1,1,291.50000835210085,3923.499964721501A6,6,0,1,1,303.50000835210085,3923.499964721501"></path><path id="kity_path_2571" fill="none" stroke="gray"></path></g><path id="node_outline209" fill="none" stroke="none" d="M308.5000085160136,3914.499964721501h109a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text209" fill="black"><text id="kity_text_1212" text-rendering="inherit" font-size="12" dy=".8em" y="3915.699964694679" x="308.5000085160136">len()：获取切片长度</text></g></g><g id="minder_node212"><g id="node_expander209" style="cursor: pointer;" display="none"><path id="kity_path_2573" fill="white" stroke="gray" d="M303.50000835210085,3949.499965108931A6,6,0,1,1,291.50000835210085,3949.499965108931A6,6,0,1,1,303.50000835210085,3949.499965108931"></path><path id="kity_path_2574" fill="none" stroke="gray"></path></g><path id="node_outline210" fill="none" stroke="none" d="M308.5000085160136,3940.499965108931h124a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-124a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text210" fill="black"><text id="kity_text_1214" text-rendering="inherit" font-size="12" dy=".8em" y="3941.699965082109" x="308.5000085160136">cap()：计算切片容量；</text></g></g><g id="minder_node213"><g id="node_expander210" style="cursor: pointer;" display="none"><path id="kity_path_2576" fill="white" stroke="gray" d="M303.50000835210085,3975.4999654963613A6,6,0,1,1,291.50000835210085,3975.4999654963613A6,6,0,1,1,303.50000835210085,3975.4999654963613"></path><path id="kity_path_2577" fill="none" stroke="gray"></path></g><path id="node_outline211" fill="none" stroke="none" d="M308.5000085160136,3966.4999654963613h684a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-684a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text211" fill="black"><text id="kity_text_1216" text-rendering="inherit" font-size="12" dy=".8em" y="3967.699965469539" x="308.5000085160136">append()：追加一个或一组新元素；当向切片中添加数据时，如果没有超过容量，直接添加，如果超过容量，自动扩容(成倍增长)</text></g></g><g id="minder_node214"><g id="node_expander213" style="cursor: pointer;"><path id="kity_path_2585" fill="white" stroke="gray" d="M303.50000835210085,4014.4999660775065A6,6,0,1,1,291.50000835210085,4014.4999660775065A6,6,0,1,1,303.50000835210085,4014.4999660775065"></path><path id="kity_path_2586" fill="none" stroke="gray" d="M293.00000835210085,4014.4999660775065L302.00000835210085,4014.4999660775065"></path></g><path id="node_outline214" fill="none" stroke="none" d="M308.5000085160136,4005.4999660775065h168a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-168a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text214" fill="black"><text id="kity_text_1222" text-rendering="inherit" font-size="12" dy=".8em" y="4006.6999660506845" x="308.5000085160136">copy()：拷贝切片到新的切片；</text></g></g><g id="minder_node215"><g id="node_expander211" style="cursor: pointer;" display="none"><path id="kity_path_2579" fill="white" stroke="gray" d="M497.5000112429261,4001.4999658837914A6,6,0,1,1,485.5000112429261,4001.4999658837914A6,6,0,1,1,497.5000112429261,4001.4999658837914"></path><path id="kity_path_2580" fill="none" stroke="gray"></path></g><path id="node_outline212" fill="none" stroke="none" d="M502.5000114068389,3992.4999658837914h375a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-375a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text212" fill="black"><text id="kity_text_1218" text-rendering="inherit" font-size="12" dy=".8em" y="3993.6999658569694" x="502.5000114068389">浅拷贝（拷贝的是地址）：引用类型默认都是浅拷贝，如：切片，map</text></g></g><g id="minder_node216"><g id="node_expander212" style="cursor: pointer;" display="none"><path id="kity_path_2582" fill="white" stroke="gray" d="M497.5000112429261,4027.4999662712216A6,6,0,1,1,485.5000112429261,4027.4999662712216A6,6,0,1,1,497.5000112429261,4027.4999662712216"></path><path id="kity_path_2583" fill="none" stroke="gray"></path></g><path id="node_outline213" fill="none" stroke="none" d="M502.5000114068389,4018.4999662712216h365a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-365a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text213" fill="black"><text id="kity_text_1220" text-rendering="inherit" font-size="12" dy=".8em" y="4019.6999662443995" x="502.5000114068389">深拷贝（拷贝的是数据）： 值类型都是深拷贝，如：基本类型、数组</text></g></g><g id="minder_node217"><g id="node_expander236" style="cursor: pointer;"><path id="kity_path_2654" fill="white" stroke="gray" d="M83.50000507384539,4207.499968953431A6,6,0,1,1,71.50000507384539,4207.499968953431A6,6,0,1,1,83.50000507384539,4207.499968953431"></path><path id="kity_path_2655" fill="none" stroke="gray" d="M73.00000507384539,4207.499968953431L82.00000507384539,4207.499968953431"></path></g><path id="node_outline237" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,4194.499968953431h121a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-121a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text237" fill="black"><text id="kity_text_1268" text-rendering="inherit" font-size="14" dy=".8em" y="4198.399968922138" x="104.50000547617674">集合（map）</text></g></g><g id="minder_node218"><g id="node_expander219" style="cursor: pointer;"><path id="kity_path_2603" fill="white" stroke="gray" d="M227.5000072196126,4087.4999671652913A6,6,0,1,1,215.5000072196126,4087.4999671652913A6,6,0,1,1,227.5000072196126,4087.4999671652913"></path><path id="kity_path_2604" fill="none" stroke="gray" d="M217.0000072196126,4087.4999671652913L226.0000072196126,4087.4999671652913"></path></g><path id="node_outline220" fill="none" stroke="none" d="M232.50000738352537,4078.4999671652913h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text220" fill="black"><text id="kity_text_1234" text-rendering="inherit" font-size="12" dy=".8em" y="4079.699967138469" x="232.50000738352537">特性</text></g></g><g id="minder_node219"><g id="node_expander216" style="cursor: pointer;" display="none"><path id="kity_path_2594" fill="white" stroke="gray" d="M279.500007994473,4061.499966777861A6,6,0,1,1,267.500007994473,4061.499966777861A6,6,0,1,1,279.500007994473,4061.499966777861"></path><path id="kity_path_2595" fill="none" stroke="gray"></path></g><path id="node_outline217" fill="none" stroke="none" d="M284.50000815838575,4052.499966777861h97a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-97a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text217" fill="black"><text id="kity_text_1228" text-rendering="inherit" font-size="12" dy=".8em" y="4053.699966751039" x="284.50000815838575">键值对集合，无序</text></g></g><g id="minder_node220"><g id="node_expander217" style="cursor: pointer;" display="none"><path id="kity_path_2597" fill="white" stroke="gray" d="M279.500007994473,4087.4999671652913A6,6,0,1,1,267.500007994473,4087.4999671652913A6,6,0,1,1,279.500007994473,4087.4999671652913"></path><path id="kity_path_2598" fill="none" stroke="gray"></path></g><path id="node_outline218" fill="none" stroke="none" d="M284.50000815838575,4078.4999671652913h153a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-153a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text218" fill="black"><text id="kity_text_1230" text-rendering="inherit" font-size="12" dy=".8em" y="4079.699967138469" x="284.50000815838575">可遍历，只返回一个值：key</text></g></g><g id="minder_node221"><g id="node_expander218" style="cursor: pointer;" display="none"><path id="kity_path_2600" fill="white" stroke="gray" d="M279.500007994473,4113.4999675527215A6,6,0,1,1,267.500007994473,4113.4999675527215A6,6,0,1,1,279.500007994473,4113.4999675527215"></path><path id="kity_path_2601" fill="none" stroke="gray"></path></g><path id="node_outline219" fill="none" stroke="none" d="M284.50000815838575,4104.4999675527215h673a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-673a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text219" fill="black"><text id="kity_text_1232" text-rendering="inherit" font-size="12" dy=".8em" y="4105.699967525899" x="284.50000815838575">map本身不支持==运算符（除了和nil），key和value都支持==（其中可以通过判断key是否相等来判断键值对是否已经存在）</text></g></g><g id="minder_node222"><g id="node_expander227" style="cursor: pointer;"><path id="kity_path_2627" fill="white" stroke="gray" d="M227.5000072196126,4197.499968804419A6,6,0,1,1,215.5000072196126,4197.499968804419A6,6,0,1,1,227.5000072196126,4197.499968804419"></path><path id="kity_path_2628" fill="none" stroke="gray" d="M217.0000072196126,4197.499968804419L226.0000072196126,4197.499968804419"></path></g><path id="node_outline228" fill="none" stroke="none" d="M232.50000738352537,4188.499968804419h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text228" fill="black"><text id="kity_text_1250" text-rendering="inherit" font-size="12" dy=".8em" y="4189.699968777597" x="232.50000738352537">定义</text></g></g><g id="minder_node223"><g id="node_expander222" style="cursor: pointer;"><path id="kity_path_2612" fill="white" stroke="gray" d="M279.500007994473,4152.499968133867A6,6,0,1,1,267.500007994473,4152.499968133867A6,6,0,1,1,279.500007994473,4152.499968133867"></path><path id="kity_path_2613" fill="none" stroke="gray" d="M269.000007994473,4152.499968133867L278.000007994473,4152.499968133867"></path></g><path id="node_outline223" fill="none" stroke="none" d="M284.50000815838575,4143.499968133867h226a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-226a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text223" fill="black"><text id="kity_text_1240" text-rendering="inherit" font-size="12" dy=".8em" y="4144.699968107045" x="284.50000815838575">使用内建函数make内建函数和map关键字</text></g></g><g id="minder_node224"><g id="node_expander220" style="cursor: pointer;" display="none"><path id="kity_path_2606" fill="white" stroke="gray" d="M531.5000117495656,4139.499967940152A6,6,0,1,1,519.5000117495656,4139.499967940152A6,6,0,1,1,531.5000117495656,4139.499967940152"></path><path id="kity_path_2607" fill="none" stroke="gray"></path></g><path id="node_outline221" fill="none" stroke="none" d="M536.5000119134784,4130.499967940152h272a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-272a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text221" fill="black"><text id="kity_text_1236" text-rendering="inherit" font-size="12" dy=".8em" y="4131.69996791333" x="536.5000119134784">格式：name := make(map[key_type]value_type)</text></g></g><g id="minder_node225"><g id="node_expander221" style="cursor: pointer;" display="none"><path id="kity_path_2609" fill="white" stroke="gray" d="M531.5000117495656,4165.499968327582A6,6,0,1,1,519.5000117495656,4165.499968327582A6,6,0,1,1,531.5000117495656,4165.499968327582"></path><path id="kity_path_2610" fill="none" stroke="gray"></path></g><path id="node_outline222" fill="none" stroke="none" d="M536.5000119134784,4156.499968327582h238a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text222" fill="black"><text id="kity_text_1238" text-rendering="inherit" font-size="12" dy=".8em" y="4157.69996830076" x="536.5000119134784">示例：country := make(map[string]string)</text></g></g><g id="minder_node226"><g id="node_expander225" style="cursor: pointer;"><path id="kity_path_2621" fill="white" stroke="gray" d="M279.500007994473,4204.499968908727A6,6,0,1,1,267.500007994473,4204.499968908727A6,6,0,1,1,279.500007994473,4204.499968908727"></path><path id="kity_path_2622" fill="none" stroke="gray" d="M269.000007994473,4204.499968908727L278.000007994473,4204.499968908727"></path></g><path id="node_outline226" fill="none" stroke="none" d="M284.50000815838575,4195.499968908727h86a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-86a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text226" fill="black"><text id="kity_text_1246" text-rendering="inherit" font-size="12" dy=".8em" y="4196.699968881905" x="284.50000815838575">使用map关键字</text></g></g><g id="minder_node227"><g id="node_expander223" style="cursor: pointer;" display="none"><path id="kity_path_2615" fill="white" stroke="gray" d="M391.50000966340303,4191.499968715012A6,6,0,1,1,379.50000966340303,4191.499968715012A6,6,0,1,1,391.50000966340303,4191.499968715012"></path><path id="kity_path_2616" fill="none" stroke="gray"></path></g><path id="node_outline224" fill="none" stroke="none" d="M396.5000098273158,4182.499968715012h239a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text224" fill="black"><text id="kity_text_1242" text-rendering="inherit" font-size="12" dy=".8em" y="4183.69996868819" x="396.5000098273158">格式：var&#xa0;name map[key_type]value_type</text></g></g><g id="minder_node228"><g id="node_expander224" style="cursor: pointer;" display="none"><path id="kity_path_2618" fill="white" stroke="gray" d="M391.50000966340303,4217.499969102442A6,6,0,1,1,379.50000966340303,4217.499969102442A6,6,0,1,1,391.50000966340303,4217.499969102442"></path><path id="kity_path_2619" fill="none" stroke="gray"></path></g><path id="node_outline225" fill="none" stroke="none" d="M396.5000098273158,4208.499969102442h205a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text225" fill="black"><text id="kity_text_1244" text-rendering="inherit" font-size="12" dy=".8em" y="4209.69996907562" x="396.5000098273158">示例：var country map[string]string</text></g></g><g id="minder_node229"><g id="node_expander226" style="cursor: pointer;" display="none"><path id="kity_path_2624" fill="white" stroke="gray" d="M279.500007994473,4243.4999694898725A6,6,0,1,1,267.500007994473,4243.4999694898725A6,6,0,1,1,279.500007994473,4243.4999694898725"></path><path id="kity_path_2625" fill="none" stroke="gray"></path></g><path id="node_outline227" fill="none" stroke="none" d="M284.50000815838575,4234.4999694898725h660a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-660a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text227" fill="black"><text id="kity_text_1248" text-rendering="inherit" font-size="12" dy=".8em" y="4235.69996946305" x="284.50000815838575">key的类型必须是支持 ==&#xa0;比较运算符的数据类型：bool, 数字，string, 指针, channel；不支持：slice， map 还有 function</text></g></g><g id="minder_node230"><g id="node_expander235" style="cursor: pointer;"><path id="kity_path_2651" fill="white" stroke="gray" d="M227.5000072196126,4327.49997074157A6,6,0,1,1,215.5000072196126,4327.49997074157A6,6,0,1,1,227.5000072196126,4327.49997074157"></path><path id="kity_path_2652" fill="none" stroke="gray" d="M217.0000072196126,4327.49997074157L226.0000072196126,4327.49997074157"></path></g><path id="node_outline236" fill="none" stroke="none" d="M232.50000738352537,4318.49997074157h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text236" fill="black"><text id="kity_text_1266" text-rendering="inherit" font-size="12" dy=".8em" y="4319.699970714748" x="232.50000738352537">使用</text></g></g><g id="minder_node231"><g id="node_expander228" style="cursor: pointer;" display="none"><path id="kity_path_2630" fill="white" stroke="gray" d="M278.5000079795718,4269.499969877303A6,6,0,1,1,266.5000079795718,4269.499969877303A6,6,0,1,1,278.5000079795718,4269.499969877303"></path><path id="kity_path_2631" fill="none" stroke="gray"></path></g><path id="node_outline229" fill="none" stroke="none" d="M283.5000081434846,4260.499969877303h294a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-294a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text229" fill="black"><text id="kity_text_1252" text-rendering="inherit" font-size="12" dy=".8em" y="4261.699969850481" x="283.5000081434846">可以在定义时使用大括号直接传key:value进行值初始化</text></g></g><g id="minder_node232"><g id="node_expander229" style="cursor: pointer;" display="none"><path id="kity_path_2633" fill="white" stroke="gray" d="M278.5000079795718,4295.499970264733A6,6,0,1,1,266.5000079795718,4295.499970264733A6,6,0,1,1,278.5000079795718,4295.499970264733"></path><path id="kity_path_2634" fill="none" stroke="gray"></path></g><path id="node_outline230" fill="none" stroke="none" d="M283.5000081434846,4286.499970264733h489a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-489a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text230" fill="black"><text id="kity_text_1254" text-rendering="inherit" font-size="12" dy=".8em" y="4287.699970237911" x="283.5000081434846">可以插入（如果key不存在，就是添加，如果key存在就是修改）：map_name[key] = value</text></g></g><g id="minder_node233"><g id="node_expander230" style="cursor: pointer;" display="none"><path id="kity_path_2636" fill="white" stroke="gray" d="M278.5000079795718,4321.499970652163A6,6,0,1,1,266.5000079795718,4321.499970652163A6,6,0,1,1,278.5000079795718,4321.499970652163"></path><path id="kity_path_2637" fill="none" stroke="gray"></path></g><path id="node_outline231" fill="none" stroke="none" d="M283.5000081434846,4312.499970652163h453a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-453a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text231" fill="black"><text id="kity_text_1256" text-rendering="inherit" font-size="12" dy=".8em" y="4313.699970625341" x="283.5000081434846">可以使用delete()函数删除集合元素，该函数不返回任何值：delete(map_name, key)</text></g></g><g id="minder_node234"><g id="node_expander231" style="cursor: pointer;" display="none"><path id="kity_path_2639" fill="white" stroke="gray" d="M278.5000079795718,4347.499971039593A6,6,0,1,1,266.5000079795718,4347.499971039593A6,6,0,1,1,278.5000079795718,4347.499971039593"></path><path id="kity_path_2640" fill="none" stroke="gray"></path></g><path id="node_outline232" fill="none" stroke="none" d="M283.5000081434846,4338.499971039593h793a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-793a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text232" fill="black"><text id="kity_text_1258" text-rendering="inherit" font-size="12" dy=".8em" y="4339.699971012771" x="283.5000081434846">map不能使用==操作符进行相互比较，==只能用来检查map是否为空（为nil的map不能直接插入值，需要先make分配内存空间）：map1 == nil。</text></g></g><g id="minder_node235"><g id="node_expander234" style="cursor: pointer;"><path id="kity_path_2648" fill="white" stroke="gray" d="M278.5000079795718,4386.4999716207385A6,6,0,1,1,266.5000079795718,4386.4999716207385A6,6,0,1,1,278.5000079795718,4386.4999716207385"></path><path id="kity_path_2649" fill="none" stroke="gray" d="M268.0000079795718,4386.4999716207385L277.0000079795718,4386.4999716207385"></path></g><path id="node_outline235" fill="none" stroke="none" d="M283.5000081434846,4377.4999716207385h343a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-343a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text235" fill="black"><text id="kity_text_1264" text-rendering="inherit" font-size="12" dy=".8em" y="4378.699971593916" x="283.5000081434846">获取map中的数据，根据key获取value：value ,ok := map[key]</text></g></g><g id="minder_node236"><g id="node_expander232" style="cursor: pointer;" display="none"><path id="kity_path_2642" fill="white" stroke="gray" d="M647.5000134781003,4373.499971427023A6,6,0,1,1,635.5000134781003,4373.499971427023A6,6,0,1,1,647.5000134781003,4373.499971427023"></path><path id="kity_path_2643" fill="none" stroke="gray"></path></g><path id="node_outline233" fill="none" stroke="none" d="M652.5000136420131,4364.499971427023h257a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-257a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text233" fill="black"><text id="kity_text_1260" text-rendering="inherit" font-size="12" dy=".8em" y="4365.699971400201" x="652.5000136420131">如果key存在，value就是对应的数值，ok为true</text></g></g><g id="minder_node237"><g id="node_expander233" style="cursor: pointer;" display="none"><path id="kity_path_2645" fill="white" stroke="gray" d="M647.5000134781003,4399.499971814454A6,6,0,1,1,635.5000134781003,4399.499971814454A6,6,0,1,1,647.5000134781003,4399.499971814454"></path><path id="kity_path_2646" fill="none" stroke="gray"></path></g><path id="node_outline234" fill="none" stroke="none" d="M652.5000136420131,4390.499971814454h296a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-296a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text234" fill="black"><text id="kity_text_1262" text-rendering="inherit" font-size="12" dy=".8em" y="4391.6999717876315" x="652.5000136420131">如果key不存在，value就是该类型的默认值，ok为false</text></g></g><g id="minder_node238"><g id="node_expander258" style="cursor: pointer;"><path id="kity_path_2720" fill="white" stroke="gray" d="M83.50000507384539,4550.499974064529A6,6,0,1,1,71.50000507384539,4550.499974064529A6,6,0,1,1,83.50000507384539,4550.499974064529"></path><path id="kity_path_2721" fill="none" stroke="gray" d="M73.00000507384539,4550.499974064529L82.00000507384539,4550.499974064529"></path></g><path id="node_outline259" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,4537.499974064529h144a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-144a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text259" fill="black"><text id="kity_text_1312" text-rendering="inherit" font-size="14" dy=".8em" y="4541.3999740332365" x="104.50000547617674">结构体（Struct）</text></g></g><g id="minder_node239"><g id="node_expander239" style="cursor: pointer;"><path id="kity_path_2663" fill="white" stroke="gray" d="M250.5000075623393,4446.499972514808A6,6,0,1,1,238.5000075623393,4446.499972514808A6,6,0,1,1,250.5000075623393,4446.499972514808"></path><path id="kity_path_2664" fill="none" stroke="gray" d="M240.0000075623393,4446.499972514808L249.0000075623393,4446.499972514808"></path></g><path id="node_outline240" fill="none" stroke="none" d="M255.50000772625208,4437.499972514808h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text240" fill="black"><text id="kity_text_1274" text-rendering="inherit" font-size="12" dy=".8em" y="4438.699972487986" x="255.50000772625208">特性</text></g></g><g id="minder_node240"><g id="node_expander237" style="cursor: pointer;" display="none"><path id="kity_path_2657" fill="white" stroke="gray" d="M302.5000083371997,4433.499972321093A6,6,0,1,1,290.5000083371997,4433.499972321093A6,6,0,1,1,302.5000083371997,4433.499972321093"></path><path id="kity_path_2658" fill="none" stroke="gray"></path></g><path id="node_outline238" fill="none" stroke="none" d="M307.50000850111246,4424.499972321093h517a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-517a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text238" fill="black"><text id="kity_text_1270" text-rendering="inherit" font-size="12" dy=".8em" y="4425.699972294271" x="307.50000850111246">可存储相同类型或者不通类型的数据，即：一系列具有相同类型或不同类型的数据构成的数据集合</text></g></g><g id="minder_node241"><g id="node_expander238" style="cursor: pointer;" display="none"><path id="kity_path_2660" fill="white" stroke="gray" d="M302.5000083371997,4459.499972708523A6,6,0,1,1,290.5000083371997,4459.499972708523A6,6,0,1,1,302.5000083371997,4459.499972708523"></path><path id="kity_path_2661" fill="none" stroke="gray"></path></g><path id="node_outline239" fill="none" stroke="none" d="M307.50000850111246,4450.499972708523h314a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-314a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text239" fill="black"><text id="kity_text_1272" text-rendering="inherit" font-size="12" dy=".8em" y="4451.699972681701" x="307.50000850111246">表示一项包含不同属性的纪录，类似于面向对象编程中的类</text></g></g><g id="minder_node242"><g id="node_expander240" style="cursor: pointer;" display="none"><path id="kity_path_2666" fill="white" stroke="gray" d="M250.5000075623393,4485.4999730959535A6,6,0,1,1,238.5000075623393,4485.4999730959535A6,6,0,1,1,250.5000075623393,4485.4999730959535"></path><path id="kity_path_2667" fill="none" stroke="gray"></path></g><path id="node_outline241" fill="none" stroke="none" d="M255.50000772625208,4476.4999730959535h432a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-432a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text241" fill="black"><text id="kity_text_1276" text-rendering="inherit" font-size="12" dy=".8em" y="4477.699973069131" x="255.50000772625208">定义格式（用到type和struct关键字）：type name struct { property_a a_type;}</text></g></g><g id="minder_node243"><g id="node_expander257" style="cursor: pointer;"><path id="kity_path_2717" fill="white" stroke="gray" d="M250.5000075623393,4654.49997561425A6,6,0,1,1,238.5000075623393,4654.49997561425A6,6,0,1,1,250.5000075623393,4654.49997561425"></path><path id="kity_path_2718" fill="none" stroke="gray" d="M240.0000075623393,4654.49997561425L249.0000075623393,4654.49997561425"></path></g><path id="node_outline258" fill="none" stroke="none" d="M255.50000772625208,4645.49997561425h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text258" fill="black"><text id="kity_text_1310" text-rendering="inherit" font-size="12" dy=".8em" y="4646.699975587428" x="255.50000772625208">使用</text></g></g><g id="minder_node244"><g id="node_expander241" style="cursor: pointer;" display="none"><path id="kity_path_2669" fill="white" stroke="gray" d="M301.5000083222985,4511.499973483384A6,6,0,1,1,289.5000083222985,4511.499973483384A6,6,0,1,1,301.5000083222985,4511.499973483384"></path><path id="kity_path_2670" fill="none" stroke="gray"></path></g><path id="node_outline242" fill="none" stroke="none" d="M306.5000084862113,4502.499973483384h133a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-133a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text242" fill="black"><text id="kity_text_1278" text-rendering="inherit" font-size="12" dy=".8em" y="4503.699973456562" x="306.5000084862113">定义后即可用于变量声明</text></g></g><g id="minder_node245"><g id="node_expander242" style="cursor: pointer;" display="none"><path id="kity_path_2672" fill="white" stroke="gray" d="M301.5000083222985,4537.499973870814A6,6,0,1,1,289.5000083222985,4537.499973870814A6,6,0,1,1,301.5000083222985,4537.499973870814"></path><path id="kity_path_2673" fill="none" stroke="gray"></path></g><path id="node_outline243" fill="none" stroke="none" d="M306.5000084862113,4528.499973870814h252a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-252a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text243" fill="black"><text id="kity_text_1280" text-rendering="inherit" font-size="12" dy=".8em" y="4529.699973843992" x="306.5000084862113">可以作为参数传递给函数，像其他数据类型一样</text></g></g><g id="minder_node246"><g id="node_expander243" style="cursor: pointer;" display="none"><path id="kity_path_2675" fill="white" stroke="gray" d="M301.5000083222985,4563.499974258244A6,6,0,1,1,289.5000083222985,4563.499974258244A6,6,0,1,1,301.5000083222985,4563.499974258244"></path><path id="kity_path_2676" fill="none" stroke="gray"></path></g><path id="node_outline244" fill="none" stroke="none" d="M306.5000084862113,4554.499974258244h174a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text244" fill="black"><text id="kity_text_1282" text-rendering="inherit" font-size="12" dy=".8em" y="4555.699974231422" x="306.5000084862113">可以定义/创建指向结构体的指针</text></g></g><g id="minder_node247"><g id="node_expander244" style="cursor: pointer;" display="none"><path id="kity_path_2678" fill="white" stroke="gray" d="M301.5000083222985,4589.499974645674A6,6,0,1,1,289.5000083222985,4589.499974645674A6,6,0,1,1,301.5000083222985,4589.499974645674"></path><path id="kity_path_2679" fill="none" stroke="gray"></path></g><path id="node_outline245" fill="none" stroke="none" d="M306.5000084862113,4580.499974645674h396a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-396a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text245" fill="black"><text id="kity_text_1284" text-rendering="inherit" font-size="12" dy=".8em" y="4581.699974618852" x="306.5000084862113">可以使用new内建函数初始化，未设置初始值的，会赋予类型的默认初始值</text></g></g><g id="minder_node248"><g id="node_expander245" style="cursor: pointer;" display="none"><path id="kity_path_2681" fill="white" stroke="gray" d="M301.5000083222985,4615.499975033104A6,6,0,1,1,289.5000083222985,4615.499975033104A6,6,0,1,1,301.5000083222985,4615.499975033104"></path><path id="kity_path_2682" fill="none" stroke="gray"></path></g><path id="node_outline246" fill="none" stroke="none" d="M306.5000084862113,4606.499975033104h362a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-362a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text246" fill="black"><text id="kity_text_1286" text-rendering="inherit" font-size="12" dy=".8em" y="4607.699975006282" x="306.5000084862113">结构体变量初始化可以直接使用短声明的形式，也可以逐个字段赋值</text></g></g><g id="minder_node249"><g id="node_expander247" style="cursor: pointer;"><path id="kity_path_2687" fill="white" stroke="gray" d="M301.5000083222985,4641.499975420535A6,6,0,1,1,289.5000083222985,4641.499975420535A6,6,0,1,1,301.5000083222985,4641.499975420535"></path><path id="kity_path_2688" fill="none" stroke="gray" d="M291.0000083222985,4641.499975420535L300.0000083222985,4641.499975420535"></path></g><path id="node_outline248" fill="none" stroke="none" d="M306.5000084862113,4632.499975420535h24a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-24a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text248" fill="black"><text id="kity_text_1290" text-rendering="inherit" font-size="12" dy=".8em" y="4633.6999753937125" x="306.5000084862113">访问</text></g></g><g id="minder_node250"><g id="node_expander246" style="cursor: pointer;" display="none"><path id="kity_path_2684" fill="white" stroke="gray" d="M351.5000090673566,4641.499975420535A6,6,0,1,1,339.5000090673566,4641.499975420535A6,6,0,1,1,351.5000090673566,4641.499975420535"></path><path id="kity_path_2685" fill="none" stroke="gray"></path></g><path id="node_outline247" fill="none" stroke="none" d="M356.50000923126936,4632.499975420535h253a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text247" fill="black"><text id="kity_text_1288" text-rendering="inherit" font-size="12" dy=".8em" y="4633.6999753937125" x="356.50000923126936">成员访问：通过点号 .&#xa0;操作符，如：Book1.title</text></g></g><g id="minder_node251"><g id="node_expander252" style="cursor: pointer;"><path id="kity_path_2702" fill="white" stroke="gray" d="M301.5000083222985,4706.49997638911A6,6,0,1,1,289.5000083222985,4706.49997638911A6,6,0,1,1,301.5000083222985,4706.49997638911"></path><path id="kity_path_2703" fill="none" stroke="gray" d="M291.0000083222985,4706.49997638911L300.0000083222985,4706.49997638911"></path></g><path id="node_outline253" fill="none" stroke="none" d="M306.5000084862113,4697.49997638911h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text253" fill="black"><text id="kity_text_1300" text-rendering="inherit" font-size="12" dy=".8em" y="4698.699976362288" x="306.5000084862113">匿名字段</text></g></g><g id="minder_node252"><g id="node_expander248" style="cursor: pointer;" display="none"><path id="kity_path_2690" fill="white" stroke="gray" d="M376.5000094398856,4667.499975807965A6,6,0,1,1,364.5000094398856,4667.499975807965A6,6,0,1,1,376.5000094398856,4667.499975807965"></path><path id="kity_path_2691" fill="none" stroke="gray"></path></g><path id="node_outline249" fill="none" stroke="none" d="M381.5000096037984,4658.499975807965h409a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-409a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text249" fill="black"><text id="kity_text_1292" text-rendering="inherit" font-size="12" dy=".8em" y="4659.699975781143" x="381.5000096037984">若匿名字段中的字段与非匿名字段名字重名，则最外层的优先访问：就近原则</text></g></g><g id="minder_node253"><g id="node_expander249" style="cursor: pointer;" display="none"><path id="kity_path_2693" fill="white" stroke="gray" d="M376.5000094398856,4693.499976195395A6,6,0,1,1,364.5000094398856,4693.499976195395A6,6,0,1,1,376.5000094398856,4693.499976195395"></path><path id="kity_path_2694" fill="none" stroke="gray"></path></g><path id="node_outline250" fill="none" stroke="none" d="M381.5000096037984,4684.499976195395h278a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-278a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text250" fill="black"><text id="kity_text_1294" text-rendering="inherit" font-size="12" dy=".8em" y="4685.699976168573" x="381.5000096037984">只有字段类型，没有字段名，实际上就是字段的继承</text></g></g><g id="minder_node254"><g id="node_expander250" style="cursor: pointer;" display="none"><path id="kity_path_2696" fill="white" stroke="gray" d="M376.5000094398856,4719.499976582825A6,6,0,1,1,364.5000094398856,4719.499976582825A6,6,0,1,1,376.5000094398856,4719.499976582825"></path><path id="kity_path_2697" fill="none" stroke="gray"></path></g><path id="node_outline251" fill="none" stroke="none" d="M381.5000096037984,4710.499976582825h278a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-278a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text251" fill="black"><text id="kity_text_1296" text-rendering="inherit" font-size="12" dy=".8em" y="4711.699976556003" x="381.5000096037984">所有的内置类型和自定义类型都是可以作为匿名字段</text></g></g><g id="minder_node255"><g id="node_expander251" style="cursor: pointer;" display="none"><path id="kity_path_2699" fill="white" stroke="gray" d="M376.5000094398856,4745.499976970255A6,6,0,1,1,364.5000094398856,4745.499976970255A6,6,0,1,1,376.5000094398856,4745.499976970255"></path><path id="kity_path_2700" fill="none" stroke="gray"></path></g><path id="node_outline252" fill="none" stroke="none" d="M381.5000096037984,4736.499976970255h181a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-181a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text252" fill="black"><text id="kity_text_1298" text-rendering="inherit" font-size="12" dy=".8em" y="4737.699976943433" x="381.5000096037984">匿名结构体中的字段称为提升字段</text></g></g><g id="minder_node256"><g id="node_expander254" style="cursor: pointer;"><path id="kity_path_2708" fill="white" stroke="gray" d="M301.5000083222985,4771.499977357686A6,6,0,1,1,289.5000083222985,4771.499977357686A6,6,0,1,1,301.5000083222985,4771.499977357686"></path><path id="kity_path_2709" fill="none" stroke="gray" d="M291.0000083222985,4771.499977357686L300.0000083222985,4771.499977357686"></path></g><path id="node_outline255" fill="none" stroke="none" d="M306.5000084862113,4762.499977357686h62a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-62a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text255" fill="black"><text id="kity_text_1304" text-rendering="inherit" font-size="12" dy=".8em" y="4763.6999773308635" x="306.5000084862113">结构体嵌套</text></g></g><g id="minder_node257"><g id="node_expander253" style="cursor: pointer;" display="none"><path id="kity_path_2705" fill="white" stroke="gray" d="M389.5000096336007,4771.499977357686A6,6,0,1,1,377.5000096336007,4771.499977357686A6,6,0,1,1,389.5000096336007,4771.499977357686"></path><path id="kity_path_2706" fill="none" stroke="gray"></path></g><path id="node_outline254" fill="none" stroke="none" d="M394.5000097975135,4762.499977357686h275a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-275a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text254" fill="black"><text id="kity_text_1302" text-rendering="inherit" font-size="12" dy=".8em" y="4763.6999773308635" x="394.5000097975135">结构体支持嵌套，使用一系列点号 .&#xa0;操作符访问成员</text></g></g><g id="minder_node258"><g id="node_expander256" style="cursor: pointer;"><path id="kity_path_2714" fill="white" stroke="gray" d="M301.5000083222985,4797.499977745116A6,6,0,1,1,289.5000083222985,4797.499977745116A6,6,0,1,1,301.5000083222985,4797.499977745116"></path><path id="kity_path_2715" fill="none" stroke="gray" d="M291.0000083222985,4797.499977745116L300.0000083222985,4797.499977745116"></path></g><path id="node_outline257" fill="none" stroke="none" d="M306.5000084862113,4788.499977745116h62a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-62a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text257" fill="black"><text id="kity_text_1308" text-rendering="inherit" font-size="12" dy=".8em" y="4789.699977718294" x="306.5000084862113">结构体比较</text></g></g><g id="minder_node259"><g id="node_expander255" style="cursor: pointer;" display="none"><path id="kity_path_2711" fill="white" stroke="gray" d="M389.5000096336007,4797.499977745116A6,6,0,1,1,377.5000096336007,4797.499977745116A6,6,0,1,1,389.5000096336007,4797.499977745116"></path><path id="kity_path_2712" fill="none" stroke="gray"></path></g><path id="node_outline256" fill="none" stroke="none" d="M394.5000097975135,4788.499977745116h422a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-422a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text256" fill="black"><text id="kity_text_1306" text-rendering="inherit" font-size="12" dy=".8em" y="4789.699977718294" x="394.5000097975135">结构体是值类型，如果每个字段具有可比性，则是可比较的（使用 ==&#xa0;操作符）</text></g></g><g id="minder_node260"><g id="node_expander276" style="cursor: pointer;"><path id="kity_path_2774" fill="white" stroke="gray" d="M83.50000507384539,4954.499980084598A6,6,0,1,1,71.50000507384539,4954.499980084598A6,6,0,1,1,83.50000507384539,4954.499980084598"></path><path id="kity_path_2775" fill="none" stroke="gray" d="M73.00000507384539,4954.499980084598L82.00000507384539,4954.499980084598"></path></g><path id="node_outline277" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,4941.499980084598h126a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-126a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text277" fill="black"><text id="kity_text_1348" text-rendering="inherit" font-size="14" dy=".8em" y="4945.399980053306" x="104.50000547617674">指针（Point）</text></g></g><g id="minder_node261"><g id="node_expander259" style="cursor: pointer;" display="none"><path id="kity_path_2723" fill="white" stroke="gray" d="M232.5000072941184,4831.499978251755A6,6,0,1,1,220.5000072941184,4831.499978251755A6,6,0,1,1,232.5000072941184,4831.499978251755"></path><path id="kity_path_2724" fill="none" stroke="gray"></path></g><path id="node_outline260" fill="none" stroke="none" d="M237.50000745803118,4822.499978251755h242a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-242a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text260" fill="black"><text id="kity_text_1314" text-rendering="inherit" font-size="12" dy=".8em" y="4823.699978224933" x="237.50000745803118">定义：一种数据类型，指向一个值的内存地址</text></g></g><g id="minder_node262"><g id="node_expander260" style="cursor: pointer;" display="none"><path id="kity_path_2726" fill="white" stroke="gray" d="M232.5000072941184,4857.499978639185A6,6,0,1,1,220.5000072941184,4857.499978639185A6,6,0,1,1,232.5000072941184,4857.499978639185"></path><path id="kity_path_2727" fill="none" stroke="gray"></path></g><path id="node_outline261" fill="none" stroke="none" d="M237.50000745803118,4848.499978639185h360a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-360a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text261" fill="black"><text id="kity_text_1316" text-rendering="inherit" font-size="12" dy=".8em" y="4849.699978612363" x="237.50000745803118">取地址符是：&amp;，放到一个变量前使用就会返回相应变量的内存地址</text></g></g><g id="minder_node263"><g id="node_expander263" style="cursor: pointer;"><path id="kity_path_2735" fill="white" stroke="gray" d="M232.5000072941184,4896.499979220331A6,6,0,1,1,220.5000072941184,4896.499979220331A6,6,0,1,1,232.5000072941184,4896.499979220331"></path><path id="kity_path_2736" fill="none" stroke="gray" d="M222.0000072941184,4896.499979220331L231.0000072941184,4896.499979220331"></path></g><path id="node_outline264" fill="none" stroke="none" d="M237.50000745803118,4887.499979220331h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text264" fill="black"><text id="kity_text_1322" text-rendering="inherit" font-size="12" dy=".8em" y="4888.699979193509" x="237.50000745803118">声明格式</text></g></g><g id="minder_node264"><g id="node_expander261" style="cursor: pointer;" display="none"><path id="kity_path_2729" fill="white" stroke="gray" d="M308.50000842660666,4883.499979026616A6,6,0,1,1,296.50000842660666,4883.499979026616A6,6,0,1,1,308.50000842660666,4883.499979026616"></path><path id="kity_path_2730" fill="none" stroke="gray"></path></g><path id="node_outline262" fill="none" stroke="none" d="M313.5000085905194,4874.499979026616h89a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-89a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text262" fill="black"><text id="kity_text_1318" text-rendering="inherit" font-size="12" dy=".8em" y="4875.6999789997935" x="313.5000085905194">var name *type</text></g></g><g id="minder_node265"><g id="node_expander262" style="cursor: pointer;" display="none"><path id="kity_path_2732" fill="white" stroke="gray" d="M308.50000842660666,4909.499979414046A6,6,0,1,1,296.50000842660666,4909.499979414046A6,6,0,1,1,308.50000842660666,4909.499979414046"></path><path id="kity_path_2733" fill="none" stroke="gray"></path></g><path id="node_outline263" fill="none" stroke="none" d="M313.5000085905194,4900.499979414046h109a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text263" fill="black"><text id="kity_text_1320" text-rendering="inherit" font-size="12" dy=".8em" y="4901.699979387224" x="313.5000085905194">nameA := &amp;nameB</text></g></g><g id="minder_node266"><g id="node_expander267" style="cursor: pointer;"><path id="kity_path_2747" fill="white" stroke="gray" d="M232.5000072941184,4961.499980188906A6,6,0,1,1,220.5000072941184,4961.499980188906A6,6,0,1,1,232.5000072941184,4961.499980188906"></path><path id="kity_path_2748" fill="none" stroke="gray" d="M222.0000072941184,4961.499980188906L231.0000072941184,4961.499980188906"></path></g><path id="node_outline268" fill="none" stroke="none" d="M237.50000745803118,4952.499980188906h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text268" fill="black"><text id="kity_text_1330" text-rendering="inherit" font-size="12" dy=".8em" y="4953.699980162084" x="237.50000745803118">使用流程</text></g></g><g id="minder_node267"><g id="node_expander264" style="cursor: pointer;" display="none"><path id="kity_path_2738" fill="white" stroke="gray" d="M308.50000842660666,4935.499979801476A6,6,0,1,1,296.50000842660666,4935.499979801476A6,6,0,1,1,308.50000842660666,4935.499979801476"></path><path id="kity_path_2739" fill="none" stroke="gray"></path></g><path id="node_outline265" fill="none" stroke="none" d="M313.5000085905194,4926.499979801476h74a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text265" fill="black"><text id="kity_text_1324" text-rendering="inherit" font-size="12" dy=".8em" y="4927.699979774654" x="313.5000085905194">定义指针变量</text></g></g><g id="minder_node268"><g id="node_expander265" style="cursor: pointer;" display="none"><path id="kity_path_2741" fill="white" stroke="gray" d="M308.50000842660666,4961.499980188906A6,6,0,1,1,296.50000842660666,4961.499980188906A6,6,0,1,1,308.50000842660666,4961.499980188906"></path><path id="kity_path_2742" fill="none" stroke="gray"></path></g><path id="node_outline266" fill="none" stroke="none" d="M313.5000085905194,4952.499980188906h140a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-140a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text266" fill="black"><text id="kity_text_1326" text-rendering="inherit" font-size="12" dy=".8em" y="4953.699980162084" x="313.5000085905194">为指针变量赋值：ip = &amp;a</text></g></g><g id="minder_node269"><g id="node_expander266" style="cursor: pointer;" display="none"><path id="kity_path_2744" fill="white" stroke="gray" d="M308.50000842660666,4987.499980576336A6,6,0,1,1,296.50000842660666,4987.499980576336A6,6,0,1,1,308.50000842660666,4987.499980576336"></path><path id="kity_path_2745" fill="none" stroke="gray"></path></g><path id="node_outline267" fill="none" stroke="none" d="M313.5000085905194,4978.499980576336h209a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-209a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text267" fill="black"><text id="kity_text_1328" text-rendering="inherit" font-size="12" dy=".8em" y="4979.699980549514" x="313.5000085905194">访问指针变量中指向地址的值（*前缀）</text></g></g><g id="minder_node270"><g id="node_expander268" style="cursor: pointer;" display="none"><path id="kity_path_2750" fill="white" stroke="gray" d="M232.5000072941184,5013.499980963767A6,6,0,1,1,220.5000072941184,5013.499980963767A6,6,0,1,1,232.5000072941184,5013.499980963767"></path><path id="kity_path_2751" fill="none" stroke="gray"></path></g><path id="node_outline269" fill="none" stroke="none" d="M237.50000745803118,5004.499980963767h540a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-540a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text269" fill="black"><text id="kity_text_1332" text-rendering="inherit" font-size="12" dy=".8em" y="5005.6999809369445" x="237.50000745803118">空指针（nil&#xa0;指针）：指针被定义后没有给它分配任何变量，它的值为 nil，即空指针，指代零值或空值</text></g></g><g id="minder_node271"><g id="node_expander275" style="cursor: pointer;"><path id="kity_path_2771" fill="white" stroke="gray" d="M232.5000072941184,5078.499981932342A6,6,0,1,1,220.5000072941184,5078.499981932342A6,6,0,1,1,232.5000072941184,5078.499981932342"></path><path id="kity_path_2772" fill="none" stroke="gray" d="M222.0000072941184,5078.499981932342L231.0000072941184,5078.499981932342"></path></g><path id="node_outline276" fill="none" stroke="none" d="M237.50000745803118,5069.499981932342h110a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-110a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text276" fill="black"><text id="kity_text_1346" text-rendering="inherit" font-size="12" dy=".8em" y="5070.69998190552" x="237.50000745803118">指针数据与数组指针</text></g></g><g id="minder_node272"><g id="node_expander271" style="cursor: pointer;"><path id="kity_path_2759" fill="white" stroke="gray" d="M368.5000093206763,5052.499981544912A6,6,0,1,1,356.5000093206763,5052.499981544912A6,6,0,1,1,368.5000093206763,5052.499981544912"></path><path id="kity_path_2760" fill="none" stroke="gray" d="M358.0000093206763,5052.499981544912L367.0000093206763,5052.499981544912"></path></g><path id="node_outline272" fill="none" stroke="none" d="M373.5000094845891,5043.499981544912h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text272" fill="black"><text id="kity_text_1338" text-rendering="inherit" font-size="12" dy=".8em" y="5044.69998151809" x="373.5000094845891">指针数组</text></g></g><g id="minder_node273"><g id="node_expander269" style="cursor: pointer;" display="none"><path id="kity_path_2753" fill="white" stroke="gray" d="M444.5000104531646,5039.499981351197A6,6,0,1,1,432.5000104531646,5039.499981351197A6,6,0,1,1,444.5000104531646,5039.499981351197"></path><path id="kity_path_2754" fill="none" stroke="gray"></path></g><path id="node_outline270" fill="none" stroke="none" d="M449.50001061707735,5030.499981351197h362a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-362a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text270" fill="black"><text id="kity_text_1334" text-rendering="inherit" font-size="12" dy=".8em" y="5031.699981324375" x="449.50001061707735">概念：它是一个数组，数组的元素都是指针，简称：储存指针的数组</text></g></g><g id="minder_node274"><g id="node_expander270" style="cursor: pointer;" display="none"><path id="kity_path_2756" fill="white" stroke="gray" d="M444.5000104531646,5065.499981738627A6,6,0,1,1,432.5000104531646,5065.499981738627A6,6,0,1,1,444.5000104531646,5065.499981738627"></path><path id="kity_path_2757" fill="none" stroke="gray"></path></g><path id="node_outline271" fill="none" stroke="none" d="M449.50001061707735,5056.499981738627h109a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text271" fill="black"><text id="kity_text_1336" text-rendering="inherit" font-size="12" dy=".8em" y="5057.699981711805" x="449.50001061707735">用途：用于保存数组</text></g></g><g id="minder_node275"><g id="node_expander274" style="cursor: pointer;"><path id="kity_path_2768" fill="white" stroke="gray" d="M368.5000093206763,5104.499982319772A6,6,0,1,1,356.5000093206763,5104.499982319772A6,6,0,1,1,368.5000093206763,5104.499982319772"></path><path id="kity_path_2769" fill="none" stroke="gray" d="M358.0000093206763,5104.499982319772L367.0000093206763,5104.499982319772"></path></g><path id="node_outline275" fill="none" stroke="none" d="M373.5000094845891,5095.499982319772h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text275" fill="black"><text id="kity_text_1344" text-rendering="inherit" font-size="12" dy=".8em" y="5096.69998229295" x="373.5000094845891">数组指针</text></g></g><g id="minder_node276"><g id="node_expander272" style="cursor: pointer;" display="none"><path id="kity_path_2762" fill="white" stroke="gray" d="M444.5000104531646,5091.499982126057A6,6,0,1,1,432.5000104531646,5091.499982126057A6,6,0,1,1,444.5000104531646,5091.499982126057"></path><path id="kity_path_2763" fill="none" stroke="gray"></path></g><path id="node_outline273" fill="none" stroke="none" d="M449.50001061707735,5082.499982126057h409a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-409a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text273" fill="black"><text id="kity_text_1340" text-rendering="inherit" font-size="12" dy=".8em" y="5083.699982099235" x="449.50001061707735">概念：也称行指针，是一个指针，它指向一个数组，简称：指向数组的指针；</text></g></g><g id="minder_node277"><g id="node_expander273" style="cursor: pointer;" display="none"><path id="kity_path_2765" fill="white" stroke="gray" d="M444.5000104531646,5117.499982513487A6,6,0,1,1,432.5000104531646,5117.499982513487A6,6,0,1,1,444.5000104531646,5117.499982513487"></path><path id="kity_path_2766" fill="none" stroke="gray"></path></g><path id="node_outline274" fill="none" stroke="none" d="M449.50001061707735,5108.499982513487h733a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-733a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text274" fill="black"><text id="kity_text_1342" text-rendering="inherit" font-size="12" dy=".8em" y="5109.699982486665" x="449.50001061707735">用途：默认情况下，数组作为函数参数是值传递的，如果想引用传递，可以使用数组指针，但是通常这种情况下我们使用切片进行参数传递</text></g></g><g id="minder_node278"><g id="node_expander298" style="cursor: pointer;"><path id="kity_path_2840" fill="white" stroke="gray" d="M83.50000507384539,5362.499986164272A6,6,0,1,1,71.50000507384539,5362.499986164272A6,6,0,1,1,83.50000507384539,5362.499986164272"></path><path id="kity_path_2841" fill="none" stroke="gray" d="M73.00000507384539,5362.499986164272L82.00000507384539,5362.499986164272"></path></g><path id="node_outline299" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,5349.499986164272h149a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-149a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text299" fill="black"><text id="kity_text_1393" text-rendering="inherit" font-size="14" dy=".8em" y="5353.399986132979" x="104.50000547617674">接口（interface）</text></g></g><g id="minder_node279"><g id="node_expander284" style="cursor: pointer;"><path id="kity_path_2798" fill="white" stroke="gray" d="M255.5000076368451,5237.499984301627A6,6,0,1,1,243.5000076368451,5237.499984301627A6,6,0,1,1,255.5000076368451,5237.499984301627"></path><path id="kity_path_2799" fill="none" stroke="gray" d="M245.0000076368451,5237.499984301627L254.0000076368451,5237.499984301627"></path></g><path id="node_outline285" fill="none" stroke="none" d="M260.5000078007579,5228.499984301627h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text285" fill="black"><text id="kity_text_1365" text-rendering="inherit" font-size="12" dy=".8em" y="5229.699984274805" x="260.5000078007579">特性</text></g></g><g id="minder_node280"><g id="node_expander277" style="cursor: pointer;" display="none"><path id="kity_path_2777" fill="white" stroke="gray" d="M307.5000084117055,5150.499983005226A6,6,0,1,1,295.5000084117055,5150.499983005226A6,6,0,1,1,307.5000084117055,5150.499983005226"></path><path id="kity_path_2778" fill="none" stroke="gray"></path></g><path id="node_outline278" fill="none" stroke="none" d="M312.50000857561827,5141.499983005226h457a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-457a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text278" fill="black"><text id="kity_text_1350" text-rendering="inherit" font-size="12" dy=".8em" y="5142.699982978404" x="312.50000857561827">一种数据类型，定义了一组方法，只要类型实现了这些方法，就被称为就实现了该接口</text></g></g><g id="minder_node281"><g id="node_expander278" style="cursor: pointer;" display="none"><path id="kity_path_2780" fill="white" stroke="gray" d="M307.5000084117055,5176.499983392656A6,6,0,1,1,295.5000084117055,5176.499983392656A6,6,0,1,1,307.5000084117055,5176.499983392656"></path><path id="kity_path_2781" fill="none" stroke="gray"></path></g><path id="node_outline279" fill="none" stroke="none" d="M312.50000857561827,5167.499983392656h446a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-446a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text279" fill="black"><text id="kity_text_1352" text-rendering="inherit" font-size="12" dy=".8em" y="5168.699983365834" x="312.50000857561827">接口指定了类型应该具有的方法（不包含具体实现），类型决定了如何实现这些方法</text></g></g><g id="minder_node282"><g id="node_expander279" style="cursor: pointer;" display="none"><path id="kity_path_2783" fill="white" stroke="gray" d="M307.5000084117055,5202.499983780086A6,6,0,1,1,295.5000084117055,5202.499983780086A6,6,0,1,1,307.5000084117055,5202.499983780086"></path><path id="kity_path_2784" fill="none" stroke="gray"></path></g><path id="node_outline280" fill="none" stroke="none" d="M312.50000857561827,5193.499983780086h362a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-362a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text280" fill="black"><text id="kity_text_1354" text-rendering="inherit" font-size="12" dy=".8em" y="5194.699983753264" x="312.50000857561827">接口类型对象，只能访问接口方法，不能访问具体的子类对象的字段</text></g></g><g id="minder_node283"><g id="node_expander280" style="cursor: pointer;" display="none"><path id="kity_path_2786" fill="white" stroke="gray" d="M307.5000084117055,5228.499984167516A6,6,0,1,1,295.5000084117055,5228.499984167516A6,6,0,1,1,307.5000084117055,5228.499984167516"></path><path id="kity_path_2787" fill="none" stroke="gray"></path></g><path id="node_outline281" fill="none" stroke="none" d="M312.50000857561827,5219.499984167516h388a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-388a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text281" fill="black"><text id="kity_text_1356" text-rendering="inherit" font-size="12" dy=".8em" y="5220.699984140694" x="312.50000857561827">interface可以被任意的对象实现、一个对象可以实现任意多个interface；</text></g></g><g id="minder_node284"><g id="node_expander281" style="cursor: pointer;" display="none"><path id="kity_path_2789" fill="white" stroke="gray" d="M307.5000084117055,5254.499984554946A6,6,0,1,1,295.5000084117055,5254.499984554946A6,6,0,1,1,307.5000084117055,5254.499984554946"></path><path id="kity_path_2790" fill="none" stroke="gray"></path></g><path id="node_outline282" fill="none" stroke="none" d="M312.50000857561827,5245.499984554946h426a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-426a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text282" fill="black"><text id="kity_text_1358" text-rendering="inherit" font-size="12" dy=".8em" y="5246.699984528124" x="312.50000857561827">任意的类型都实现了空接口（interface{}），也就是包含0个method的interface</text></g></g><g id="minder_node285"><g id="node_expander282" style="cursor: pointer;" display="none"><path id="kity_path_2792" fill="white" stroke="gray" d="M307.5000084117055,5289.499985076487A6,6,0,1,1,295.5000084117055,5289.499985076487A6,6,0,1,1,307.5000084117055,5289.499985076487"></path><path id="kity_path_2793" fill="none" stroke="gray"></path></g><path id="node_outline283" fill="none" stroke="none" d="M312.50000857561827,5271.499985076487h454a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text283" fill="black"><text id="kity_text_1360" text-rendering="inherit" font-size="12" dy=".8em" y="5272.699985049665" x="312.50000857561827">一个interface变量可以存储/被赋值的内容：实现了这个interface的任意类型的对象；</text><text id="kity_text_1361" text-rendering="inherit" font-size="12" dy=".8em" y="5290.699985049665" x="312.50000857561827">可以通过给函数定义interface形参，让函数接受各种类型的实参</text></g></g><g id="minder_node286"><g id="node_expander283" style="cursor: pointer;" display="none"><path id="kity_path_2795" fill="white" stroke="gray" d="M307.5000084117055,5324.499985598028A6,6,0,1,1,295.5000084117055,5324.499985598028A6,6,0,1,1,307.5000084117055,5324.499985598028"></path><path id="kity_path_2796" fill="none" stroke="gray"></path></g><path id="node_outline284" fill="none" stroke="none" d="M312.50000857561827,5315.499985598028h459a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-459a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text284" fill="black"><text id="kity_text_1363" text-rendering="inherit" font-size="12" dy=".8em" y="5316.699985571206" x="312.50000857561827">【多态】：go使用[接口]模拟多态，go中的多态可以简单理解为以接口作为形参的函数</text></g></g><g id="minder_node287"><g id="node_expander288" style="cursor: pointer;"><path id="kity_path_2810" fill="white" stroke="gray" d="M255.5000076368451,5376.499986372888A6,6,0,1,1,243.5000076368451,5376.499986372888A6,6,0,1,1,255.5000076368451,5376.499986372888"></path><path id="kity_path_2811" fill="none" stroke="gray" d="M245.0000076368451,5376.499986372888L254.0000076368451,5376.499986372888"></path></g><path id="node_outline289" fill="none" stroke="none" d="M260.5000078007579,5367.499986372888h232a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-232a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text289" fill="black"><text id="kity_text_1373" text-rendering="inherit" font-size="12" dy=".8em" y="5368.699986346066" x="260.5000078007579">定义格式（使用到type和interface关键字）</text></g></g><g id="minder_node288"><g id="node_expander285" style="cursor: pointer;" display="none"><path id="kity_path_2801" fill="white" stroke="gray" d="M513.5000114813447,5350.499985985458A6,6,0,1,1,501.5000114813447,5350.499985985458A6,6,0,1,1,513.5000114813447,5350.499985985458"></path><path id="kity_path_2802" fill="none" stroke="gray"></path></g><path id="node_outline286" fill="none" stroke="none" d="M518.5000116452575,5341.499985985458h309a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-309a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text286" fill="black"><text id="kity_text_1367" text-rendering="inherit" font-size="12" dy=".8em" y="5342.699985958636" x="518.5000116452575">示例：type name&#xa0;interface&#xa0;{&#xa0;method_a() [return_type]}</text></g></g><g id="minder_node289"><g id="node_expander286" style="cursor: pointer;" display="none"><path id="kity_path_2804" fill="white" stroke="gray" d="M513.5000114813447,5376.499986372888A6,6,0,1,1,501.5000114813447,5376.499986372888A6,6,0,1,1,513.5000114813447,5376.499986372888"></path><path id="kity_path_2805" fill="none" stroke="gray"></path></g><path id="node_outline287" fill="none" stroke="none" d="M518.5000116452575,5367.499986372888h319a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-319a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text287" fill="black"><text id="kity_text_1369" text-rendering="inherit" font-size="12" dy=".8em" y="5368.699986346066" x="518.5000116452575">说明：如果接口方法无返回值可以在定义时不写return_type</text></g></g><g id="minder_node290"><g id="node_expander287" style="cursor: pointer;" display="none"><path id="kity_path_2807" fill="white" stroke="gray" d="M513.5000114813447,5402.499986760318A6,6,0,1,1,501.5000114813447,5402.499986760318A6,6,0,1,1,513.5000114813447,5402.499986760318"></path><path id="kity_path_2808" fill="none" stroke="gray"></path></g><path id="node_outline288" fill="none" stroke="none" d="M518.5000116452575,5393.499986760318h301a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-301a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text288" fill="black"><text id="kity_text_1371" text-rendering="inherit" font-size="12" dy=".8em" y="5394.699986733496" x="518.5000116452575">接口声明只有方法声明，没有方法实现、没有数据字段。</text></g></g><g id="minder_node291"><g id="node_expander297" style="cursor: pointer;"><path id="kity_path_2837" fill="white" stroke="gray" d="M255.5000076368451,5487.499988026917A6,6,0,1,1,243.5000076368451,5487.499988026917A6,6,0,1,1,255.5000076368451,5487.499988026917"></path><path id="kity_path_2838" fill="none" stroke="gray" d="M245.0000076368451,5487.499988026917L254.0000076368451,5487.499988026917"></path></g><path id="node_outline298" fill="none" stroke="none" d="M260.5000078007579,5478.499988026917h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text298" fill="black"><text id="kity_text_1391" text-rendering="inherit" font-size="12" dy=".8em" y="5479.699988000095" x="260.5000078007579">使用</text></g></g><g id="minder_node292"><g id="node_expander289" style="cursor: pointer;" display="none"><path id="kity_path_2813" fill="white" stroke="gray" d="M306.50000839680433,5429.49998716265A6,6,0,1,1,294.50000839680433,5429.49998716265A6,6,0,1,1,306.50000839680433,5429.49998716265"></path><path id="kity_path_2814" fill="none" stroke="gray"></path></g><path id="node_outline290" fill="none" stroke="none" d="M311.5000085607171,5420.49998716265h509a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-509a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text290" fill="black"><text id="kity_text_1375" text-rendering="inherit" font-size="12" dy=".8em" y="5421.6999871358275" x="311.5000085607171">流程：定义接口 ---&#xa0;其他类型实现接口方法 ---&#xa0;使用new()创建接口 ---&#xa0;使用点符号调用接口函数</text></g></g><g id="minder_node293"><g id="node_expander290" style="cursor: pointer;" display="none"><path id="kity_path_2816" fill="white" stroke="gray" d="M306.50000839680433,5455.49998755008A6,6,0,1,1,294.50000839680433,5455.49998755008A6,6,0,1,1,306.50000839680433,5455.49998755008"></path><path id="kity_path_2817" fill="none" stroke="gray"></path></g><path id="node_outline291" fill="none" stroke="none" d="M311.5000085607171,5446.49998755008h667a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-667a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text291" fill="black"><text id="kity_text_1377" text-rendering="inherit" font-size="12" dy=".8em" y="5447.699987523258" x="311.5000085607171">示例：定义接口Phone --- struct类型实现方法call() ---&#xa0;创建接口phone：phone =&#xa0;new(xxx) ---&#xa0;调用call方法：phone.call()</text></g></g><g id="minder_node294"><g id="node_expander293" style="cursor: pointer;"><path id="kity_path_2825" fill="white" stroke="gray" d="M306.50000839680433,5494.499988131225A6,6,0,1,1,294.50000839680433,5494.499988131225A6,6,0,1,1,306.50000839680433,5494.499988131225"></path><path id="kity_path_2826" fill="none" stroke="gray" d="M296.00000839680433,5494.499988131225L305.00000839680433,5494.499988131225"></path></g><path id="node_outline294" fill="none" stroke="none" d="M311.5000085607171,5485.499988131225h37a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-37a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text294" fill="black"><text id="kity_text_1383" text-rendering="inherit" font-size="12" dy=".8em" y="5486.699988104403" x="311.5000085607171">空接口</text></g></g><g id="minder_node295"><g id="node_expander291" style="cursor: pointer;" display="none"><path id="kity_path_2819" fill="white" stroke="gray" d="M369.5000093355775,5481.49998793751A6,6,0,1,1,357.5000093355775,5481.49998793751A6,6,0,1,1,369.5000093355775,5481.49998793751"></path><path id="kity_path_2820" fill="none" stroke="gray"></path></g><path id="node_outline292" fill="none" stroke="none" d="M374.50000949949026,5472.49998793751h229a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-229a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text292" fill="black"><text id="kity_text_1379" text-rendering="inherit" font-size="12" dy=".8em" y="5473.699987910688" x="374.50000949949026">可以实现在一个变量中存储各种类型的对象</text></g></g><g id="minder_node296"><g id="node_expander292" style="cursor: pointer;" display="none"><path id="kity_path_2822" fill="white" stroke="gray" d="M369.5000093355775,5507.49998832494A6,6,0,1,1,357.5000093355775,5507.49998832494A6,6,0,1,1,369.5000093355775,5507.49998832494"></path><path id="kity_path_2823" fill="none" stroke="gray"></path></g><path id="node_outline293" fill="none" stroke="none" d="M374.50000949949026,5498.49998832494h181a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-181a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text293" fill="black"><text id="kity_text_1381" text-rendering="inherit" font-size="12" dy=".8em" y="5499.699988298118" x="374.50000949949026">可以使函数接收任意类型作为参数</text></g></g><g id="minder_node297"><g id="node_expander296" style="cursor: pointer;"><path id="kity_path_2834" fill="white" stroke="gray" d="M306.50000839680433,5546.4999889060855A6,6,0,1,1,294.50000839680433,5546.4999889060855A6,6,0,1,1,306.50000839680433,5546.4999889060855"></path><path id="kity_path_2835" fill="none" stroke="gray" d="M296.00000839680433,5546.4999889060855L305.00000839680433,5546.4999889060855"></path></g><path id="node_outline297" fill="none" stroke="none" d="M311.5000085607171,5537.4999889060855h211a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-211a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text297" fill="black"><text id="kity_text_1389" text-rendering="inherit" font-size="12" dy=".8em" y="5538.699988879263" x="311.5000085607171">判断接口a的类型（是哪种类型实现的）</text></g></g><g id="minder_node298"><g id="node_expander294" style="cursor: pointer;" display="none"><path id="kity_path_2828" fill="white" stroke="gray" d="M543.5000119283795,5533.49998871237A6,6,0,1,1,531.5000119283795,5533.49998871237A6,6,0,1,1,543.5000119283795,5533.49998871237"></path><path id="kity_path_2829" fill="none" stroke="gray"></path></g><path id="node_outline295" fill="none" stroke="none" d="M548.5000120922923,5524.49998871237h555a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-555a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text295" fill="black"><text id="kity_text_1385" text-rendering="inherit" font-size="12" dy=".8em" y="5525.699988685548" x="548.5000120922923">a.(指定类型)：返回两个值 inst 和 ok ，ok代表是否是这个类型，ok如果返回 inst 就表示是转换后的类型</text></g></g><g id="minder_node299"><g id="node_expander295" style="cursor: pointer;" display="none"><path id="kity_path_2831" fill="white" stroke="gray" d="M543.5000119283795,5559.499989099801A6,6,0,1,1,531.5000119283795,5559.499989099801A6,6,0,1,1,543.5000119283795,5559.499989099801"></path><path id="kity_path_2832" fill="none" stroke="gray"></path></g><path id="node_outline296" fill="none" stroke="none" d="M548.5000120922923,5550.499989099801h244a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-244a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text296" fill="black"><text id="kity_text_1387" text-rendering="inherit" font-size="12" dy=".8em" y="5551.6999890729785" x="548.5000120922923">a.(type)：type是关键字 结合switch case使用</text></g></g><g id="minder_node300"><g id="node_expander320" style="cursor: pointer;"><path id="kity_path_2906" fill="white" stroke="gray" d="M83.50000507384539,5803.499992735684A6,6,0,1,1,71.50000507384539,5803.499992735684A6,6,0,1,1,83.50000507384539,5803.499992735684"></path><path id="kity_path_2907" fill="none" stroke="gray" d="M73.00000507384539,5803.499992735684L82.00000507384539,5803.499992735684"></path></g><path id="node_outline321" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,5790.499992735684h143a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-143a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text321" fill="black"><text id="kity_text_1438" text-rendering="inherit" font-size="14" dy=".8em" y="5794.3999927043915" x="104.50000547617674">通道（channel）</text></g></g><g id="minder_node301"><g id="node_expander303" style="cursor: pointer;"><path id="kity_path_2855" fill="white" stroke="gray" d="M249.50000754743814,5632.499990187585A6,6,0,1,1,237.50000754743814,5632.499990187585A6,6,0,1,1,249.50000754743814,5632.499990187585"></path><path id="kity_path_2856" fill="none" stroke="gray" d="M239.00000754743814,5632.499990187585L248.00000754743814,5632.499990187585"></path></g><path id="node_outline304" fill="none" stroke="none" d="M254.50000771135092,5623.499990187585h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text304" fill="black"><text id="kity_text_1403" text-rendering="inherit" font-size="12" dy=".8em" y="5624.699990160763" x="254.50000771135092">特性</text></g></g><g id="minder_node302"><g id="node_expander299" style="cursor: pointer;" display="none"><path id="kity_path_2843" fill="white" stroke="gray" d="M301.5000083222985,5593.49998960644A6,6,0,1,1,289.5000083222985,5593.49998960644A6,6,0,1,1,301.5000083222985,5593.49998960644"></path><path id="kity_path_2844" fill="none" stroke="gray"></path></g><path id="node_outline300" fill="none" stroke="none" d="M306.5000084862113,5584.49998960644h485a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-485a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text300" fill="black"><text id="kity_text_1395" text-rendering="inherit" font-size="12" dy=".8em" y="5585.699989579618" x="306.5000084862113">【用于线程间通讯】：在两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯</text></g></g><g id="minder_node303"><g id="node_expander300" style="cursor: pointer;" display="none"><path id="kity_path_2846" fill="white" stroke="gray" d="M301.5000083222985,5619.49998999387A6,6,0,1,1,289.5000083222985,5619.49998999387A6,6,0,1,1,301.5000083222985,5619.49998999387"></path><path id="kity_path_2847" fill="none" stroke="gray"></path></g><path id="node_outline301" fill="none" stroke="none" d="M306.5000084862113,5610.49998999387h374a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-374a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text301" fill="black"><text id="kity_text_1397" text-rendering="inherit" font-size="12" dy=".8em" y="5611.699989967048" x="306.5000084862113">【注】通道在使用前必须先创建，只声明不初始化的话为nil、不能使用</text></g></g><g id="minder_node304"><g id="node_expander301" style="cursor: pointer;" display="none"><path id="kity_path_2849" fill="white" stroke="gray" d="M301.5000083222985,5645.4999903813A6,6,0,1,1,289.5000083222985,5645.4999903813A6,6,0,1,1,301.5000083222985,5645.4999903813"></path><path id="kity_path_2850" fill="none" stroke="gray"></path></g><path id="node_outline302" fill="none" stroke="none" d="M306.5000084862113,5636.4999903813h713a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-713a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text302" fill="black"><text id="kity_text_1399" text-rendering="inherit" font-size="12" dy=".8em" y="5637.699990354478" x="306.5000084862113">通道发送和接收数据，默认是阻塞的：该特性是帮助Goroutines有效地进行通信，而无需像其他编程语言中那样使用显式锁或条件变量</text></g></g><g id="minder_node305"><g id="node_expander302" style="cursor: pointer;" display="none"><path id="kity_path_2852" fill="white" stroke="gray" d="M301.5000083222985,5671.499990768731A6,6,0,1,1,289.5000083222985,5671.499990768731A6,6,0,1,1,301.5000083222985,5671.499990768731"></path><path id="kity_path_2853" fill="none" stroke="gray"></path></g><path id="node_outline303" fill="none" stroke="none" d="M306.5000084862113,5662.499990768731h720a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-720a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text303" fill="black"><text id="kity_text_1401" text-rendering="inherit" font-size="12" dy=".8em" y="5663.699990741909" x="306.5000084862113">支持定向通道：只能发送或者接收数据的通道，主要是为了防止channel被滥用。箭头&lt;-和关键字chan的相对位置表明了channel的方向</text></g></g><g id="minder_node306"><g id="node_expander308" style="cursor: pointer;"><path id="kity_path_2870" fill="white" stroke="gray" d="M249.50000754743814,5736.499991737306A6,6,0,1,1,237.50000754743814,5736.499991737306A6,6,0,1,1,249.50000754743814,5736.499991737306"></path><path id="kity_path_2871" fill="none" stroke="gray" d="M239.00000754743814,5736.499991737306L248.00000754743814,5736.499991737306"></path></g><path id="node_outline309" fill="none" stroke="none" d="M254.50000771135092,5727.499991737306h58a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text309" fill="black"><text id="kity_text_1413" text-rendering="inherit" font-size="12" dy=".8em" y="5728.699991710484" x="254.50000771135092">操作符 &lt;-&#xa0;</text></g></g><g id="minder_node307"><g id="node_expander304" style="cursor: pointer;" display="none"><path id="kity_path_2858" fill="white" stroke="gray" d="M333.5000087991357,5697.499991156161A6,6,0,1,1,321.5000087991357,5697.499991156161A6,6,0,1,1,333.5000087991357,5697.499991156161"></path><path id="kity_path_2859" fill="none" stroke="gray"></path></g><path id="node_outline305" fill="none" stroke="none" d="M338.50000896304846,5688.499991156161h312a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-312a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text305" fill="black"><text id="kity_text_1405" text-rendering="inherit" font-size="12" dy=".8em" y="5689.699991129339" x="338.50000896304846">用于指定通道的方向（发送或接收，未指定则为双向通道）</text></g></g><g id="minder_node308"><g id="node_expander305" style="cursor: pointer;" display="none"><path id="kity_path_2861" fill="white" stroke="gray" d="M333.5000087991357,5723.499991543591A6,6,0,1,1,321.5000087991357,5723.499991543591A6,6,0,1,1,333.5000087991357,5723.499991543591"></path><path id="kity_path_2862" fill="none" stroke="gray"></path></g><path id="node_outline306" fill="none" stroke="none" d="M338.50000896304846,5714.499991543591h158a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-158a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text306" fill="black"><text id="kity_text_1407" text-rendering="inherit" font-size="12" dy=".8em" y="5715.699991516769" x="338.50000896304846">发送v到通道ch示例：ch &lt;- v</text></g></g><g id="minder_node309"><g id="node_expander306" style="cursor: pointer;" display="none"><path id="kity_path_2864" fill="white" stroke="gray" d="M333.5000087991357,5749.499991931021A6,6,0,1,1,321.5000087991357,5749.499991931021A6,6,0,1,1,333.5000087991357,5749.499991931021"></path><path id="kity_path_2865" fill="none" stroke="gray"></path></g><path id="node_outline307" fill="none" stroke="none" d="M338.50000896304846,5740.499991931021h239a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text307" fill="black"><text id="kity_text_1409" text-rendering="inherit" font-size="12" dy=".8em" y="5741.699991904199" x="338.50000896304846">从ch通道中接收数据并赋值给w：w := &lt;- ch</text></g></g><g id="minder_node310"><g id="node_expander307" style="cursor: pointer;" display="none"><path id="kity_path_2867" fill="white" stroke="gray" d="M333.5000087991357,5775.499992318451A6,6,0,1,1,321.5000087991357,5775.499992318451A6,6,0,1,1,333.5000087991357,5775.499992318451"></path><path id="kity_path_2868" fill="none" stroke="gray"></path></g><path id="node_outline308" fill="none" stroke="none" d="M338.50000896304846,5766.499992318451h343a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-343a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text308" fill="black"><text id="kity_text_1411" text-rendering="inherit" font-size="12" dy=".8em" y="5767.699992291629" x="338.50000896304846">&lt;- ch：直接接收，不使用或不用变量进行存储的写法也是合法的</text></g></g><g id="minder_node311"><g id="node_expander311" style="cursor: pointer;"><path id="kity_path_2879" fill="white" stroke="gray" d="M249.50000754743814,5814.499992899597A6,6,0,1,1,237.50000754743814,5814.499992899597A6,6,0,1,1,249.50000754743814,5814.499992899597"></path><path id="kity_path_2880" fill="none" stroke="gray" d="M239.00000754743814,5814.499992899597L248.00000754743814,5814.499992899597"></path></g><path id="node_outline312" fill="none" stroke="none" d="M254.50000771135092,5805.499992899597h418a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-418a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text312" fill="black"><text id="kity_text_1419" text-rendering="inherit" font-size="12" dy=".8em" y="5806.699992872775" x="254.50000771135092">声明（使用make方法和chan关键字）：ch := make(chan type, [缓冲区大小])</text></g></g><g id="minder_node312"><g id="node_expander309" style="cursor: pointer;" display="none"><path id="kity_path_2873" fill="white" stroke="gray" d="M693.5000141635537,5801.499992705882A6,6,0,1,1,681.5000141635537,5801.499992705882A6,6,0,1,1,693.5000141635537,5801.499992705882"></path><path id="kity_path_2874" fill="none" stroke="gray"></path></g><path id="node_outline310" fill="none" stroke="none" d="M698.5000143274665,5792.499992705882h288a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-288a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text310" fill="black"><text id="kity_text_1415" text-rendering="inherit" font-size="12" dy=".8em" y="5793.6999926790595" x="698.5000143274665">单向发送通道（只能发送数据到通道中）：chan&lt;- int</text></g></g><g id="minder_node313"><g id="node_expander310" style="cursor: pointer;" display="none"><path id="kity_path_2876" fill="white" stroke="gray" d="M693.5000141635537,5827.499993093312A6,6,0,1,1,681.5000141635537,5827.499993093312A6,6,0,1,1,693.5000141635537,5827.499993093312"></path><path id="kity_path_2877" fill="none" stroke="gray"></path></g><path id="node_outline311" fill="none" stroke="none" d="M698.5000143274665,5818.499993093312h288a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-288a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text311" fill="black"><text id="kity_text_1417" text-rendering="inherit" font-size="12" dy=".8em" y="5819.69999306649" x="698.5000143274665">单向接收通道（只能从通道中接收数据）：&lt;-chan int</text></g></g><g id="minder_node314"><g id="node_expander312" style="cursor: pointer;" display="none"><path id="kity_path_2882" fill="white" stroke="gray" d="M249.50000754743814,5853.499993480742A6,6,0,1,1,237.50000754743814,5853.499993480742A6,6,0,1,1,249.50000754743814,5853.499993480742"></path><path id="kity_path_2883" fill="none" stroke="gray"></path></g><path id="node_outline313" fill="none" stroke="none" d="M254.50000771135092,5844.499993480742h734a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-734a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text313" fill="black"><text id="kity_text_1421" text-rendering="inherit" font-size="12" dy=".8em" y="5845.69999345392" x="254.50000771135092">通道缓冲区（实现发送端和接收端的异步）：实现：【发送时】只有在缓冲区满、或【接收时】只有在缓冲区为空时这两种情况下才被阻塞</text></g></g><g id="minder_node315"><g id="node_expander315" style="cursor: pointer;"><path id="kity_path_2891" fill="white" stroke="gray" d="M249.50000754743814,5901.499994195998A6,6,0,1,1,237.50000754743814,5901.499994195998A6,6,0,1,1,249.50000754743814,5901.499994195998"></path><path id="kity_path_2892" fill="none" stroke="gray" d="M239.00000754743814,5901.499994195998L248.00000754743814,5901.499994195998"></path></g><path id="node_outline316" fill="none" stroke="none" d="M254.50000771135092,5892.499994195998h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text316" fill="black"><text id="kity_text_1428" text-rendering="inherit" font-size="12" dy=".8em" y="5893.699994169176" x="254.50000771135092">遍历通道</text></g></g><g id="minder_node316"><g id="node_expander313" style="cursor: pointer;" display="none"><path id="kity_path_2885" fill="white" stroke="gray" d="M325.5000086799264,5879.499993868172A6,6,0,1,1,313.5000086799264,5879.499993868172A6,6,0,1,1,325.5000086799264,5879.499993868172"></path><path id="kity_path_2886" fill="none" stroke="gray"></path></g><path id="node_outline314" fill="none" stroke="none" d="M330.50000884383917,5870.499993868172h353a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-353a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text314" fill="black"><text id="kity_text_1423" text-rendering="inherit" font-size="12" dy=".8em" y="5871.69999384135" x="330.50000884383917">通过 range 关键字来实现遍历读取道的数据，类似于与数组或切片</text></g></g><g id="minder_node317"><g id="node_expander314" style="cursor: pointer;" display="none"><path id="kity_path_2888" fill="white" stroke="gray" d="M325.5000086799264,5914.499994389713A6,6,0,1,1,313.5000086799264,5914.499994389713A6,6,0,1,1,325.5000086799264,5914.499994389713"></path><path id="kity_path_2889" fill="none" stroke="gray"></path></g><path id="node_outline315" fill="none" stroke="none" d="M330.50000884383917,5896.499994389713h429a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-429a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text315" fill="black"><text id="kity_text_1425" text-rendering="inherit" font-size="12" dy=".8em" y="5897.699994362891" x="330.50000884383917">使用ok变量用作检测通道是否被关闭：v, ok := &lt;- ch</text><text id="kity_text_1426" text-rendering="inherit" font-size="12" dy=".8em" y="5915.699994362891" x="330.50000884383917">ok == true：读取成功；ok == false，通道已关闭，将会读取到通道类型的零值</text></g></g><g id="minder_node318"><g id="node_expander317" style="cursor: pointer;"><path id="kity_path_2897" fill="white" stroke="gray" d="M249.50000754743814,5949.499994911253A6,6,0,1,1,237.50000754743814,5949.499994911253A6,6,0,1,1,249.50000754743814,5949.499994911253"></path><path id="kity_path_2898" fill="none" stroke="gray" d="M239.00000754743814,5949.499994911253L248.00000754743814,5949.499994911253"></path></g><path id="node_outline318" fill="none" stroke="none" d="M254.50000771135092,5940.499994911253h49a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text318" fill="black"><text id="kity_text_1432" text-rendering="inherit" font-size="12" dy=".8em" y="5941.699994884431" x="254.50000771135092">关闭通道</text></g></g><g id="minder_node319"><g id="node_expander316" style="cursor: pointer;" display="none"><path id="kity_path_2894" fill="white" stroke="gray" d="M324.50000866502523,5949.499994911253A6,6,0,1,1,312.50000866502523,5949.499994911253A6,6,0,1,1,324.50000866502523,5949.499994911253"></path><path id="kity_path_2895" fill="none" stroke="gray"></path></g><path id="node_outline317" fill="none" stroke="none" d="M329.500008828938,5940.499994911253h482a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-482a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text317" fill="black"><text id="kity_text_1430" text-rendering="inherit" font-size="12" dy=".8em" y="5941.699994884431" x="329.500008828938">发送者可以使用close()函数关闭通道，接收者可以使用额外的变量来检查通道是否已经关闭</text></g></g><g id="minder_node320"><g id="node_expander319" style="cursor: pointer;"><path id="kity_path_2903" fill="white" stroke="gray" d="M249.50000754743814,5975.499995298684A6,6,0,1,1,237.50000754743814,5975.499995298684A6,6,0,1,1,249.50000754743814,5975.499995298684"></path><path id="kity_path_2904" fill="none" stroke="gray" d="M239.00000754743814,5975.499995298684L248.00000754743814,5975.499995298684"></path></g><path id="node_outline320" fill="none" stroke="none" d="M254.50000771135092,5966.499995298684h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text320" fill="black"><text id="kity_text_1436" text-rendering="inherit" font-size="12" dy=".8em" y="5967.699995271862" x="254.50000771135092">死锁</text></g></g><g id="minder_node321"><g id="node_expander318" style="cursor: pointer;" display="none"><path id="kity_path_2900" fill="white" stroke="gray" d="M300.50000830739737,5975.499995298684A6,6,0,1,1,288.50000830739737,5975.499995298684A6,6,0,1,1,300.50000830739737,5975.499995298684"></path><path id="kity_path_2901" fill="none" stroke="gray"></path></g><path id="node_outline319" fill="none" stroke="none" d="M305.50000847131014,5966.499995298684h311a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-311a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text319" fill="black"><text id="kity_text_1434" text-rendering="inherit" font-size="12" dy=".8em" y="5967.699995271862" x="305.50000847131014">Goroutine在一个通道上发送数据必须被接收，否则会死锁</text></g></g><g id="minder_node322"><g id="node_expander331" style="cursor: pointer;"><path id="kity_path_2939" fill="white" stroke="gray" d="M83.50000507384539,6113.499997355044A6,6,0,1,1,71.50000507384539,6113.499997355044A6,6,0,1,1,83.50000507384539,6113.499997355044"></path><path id="kity_path_2940" fill="none" stroke="gray" d="M73.00000507384539,6113.499997355044L82.00000507384539,6113.499997355044"></path></g><path id="node_outline332" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,6100.499997355044h232a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-232a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text332" fill="black"><text id="kity_text_1461" text-rendering="inherit" font-size="14" dy=".8em" y="6104.399997323751" x="104.50000547617674">并发（goroutine 和 channel）</text></g></g><g id="minder_node323"><g id="node_expander324" style="cursor: pointer;"><path id="kity_path_2918" fill="white" stroke="gray" d="M338.5000088736415,6044.499996326864A6,6,0,1,1,326.5000088736415,6044.499996326864A6,6,0,1,1,338.5000088736415,6044.499996326864"></path><path id="kity_path_2919" fill="none" stroke="gray" d="M328.0000088736415,6044.499996326864L337.0000088736415,6044.499996326864"></path></g><path id="node_outline325" fill="none" stroke="none" d="M343.50000903755426,6035.499996326864h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text325" fill="black"><text id="kity_text_1447" text-rendering="inherit" font-size="12" dy=".8em" y="6036.699996300042" x="343.50000903755426">特性</text></g></g><g id="minder_node324"><g id="node_expander321" style="cursor: pointer;" display="none"><path id="kity_path_2909" fill="white" stroke="gray" d="M390.5000096485019,6009.499995805323A6,6,0,1,1,378.5000096485019,6009.499995805323A6,6,0,1,1,390.5000096485019,6009.499995805323"></path><path id="kity_path_2910" fill="none" stroke="gray"></path></g><path id="node_outline322" fill="none" stroke="none" d="M395.50000981241465,6000.499995805323h303a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-303a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text322" fill="black"><text id="kity_text_1440" text-rendering="inherit" font-size="12" dy=".8em" y="6001.699995778501" x="395.50000981241465">支持并发，只需要通过 go 关键字来开启 goroutine 即可</text></g></g><g id="minder_node325"><g id="node_expander322" style="cursor: pointer;" display="none"><path id="kity_path_2912" fill="white" stroke="gray" d="M390.5000096485019,6035.499996192753A6,6,0,1,1,378.5000096485019,6035.499996192753A6,6,0,1,1,390.5000096485019,6035.499996192753"></path><path id="kity_path_2913" fill="none" stroke="gray"></path></g><path id="node_outline323" fill="none" stroke="none" d="M395.50000981241465,6026.499996192753h337a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-337a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text323" fill="black"><text id="kity_text_1442" text-rendering="inherit" font-size="12" dy=".8em" y="6027.699996165931" x="395.50000981241465">goroutine 是轻量级线程，其调度由 Golang 运行时进行管理的</text></g></g><g id="minder_node326"><g id="node_expander323" style="cursor: pointer;" display="none"><path id="kity_path_2915" fill="white" stroke="gray" d="M390.5000096485019,6070.499996714294A6,6,0,1,1,378.5000096485019,6070.499996714294A6,6,0,1,1,390.5000096485019,6070.499996714294"></path><path id="kity_path_2916" fill="none" stroke="gray"></path></g><path id="node_outline324" fill="none" stroke="none" d="M395.50000981241465,6052.499996714294h608a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-608a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text324" fill="black"><text id="kity_text_1444" text-rendering="inherit" font-size="12" dy=".8em" y="6053.699996687472" x="395.50000981241465">允许使用 go 语句开启一个新的运行期线程；与函数不同，Goroutine调用会立即返回，不等待Goroutine执行结束</text><text id="kity_text_1445" text-rendering="inherit" font-size="12" dy=".8em" y="6071.699996687472" x="395.50000981241465">同一个程序中的所有 goroutine 共享同一个地址空间</text></g></g><g id="minder_node327"><g id="node_expander325" style="cursor: pointer;" display="none"><path id="kity_path_2921" fill="white" stroke="gray" d="M338.5000088736415,6105.499997235835A6,6,0,1,1,326.5000088736415,6105.499997235835A6,6,0,1,1,338.5000088736415,6105.499997235835"></path><path id="kity_path_2922" fill="none" stroke="gray"></path></g><path id="node_outline326" fill="none" stroke="none" d="M343.50000903755426,6096.499997235835h235a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-235a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text326" fill="black"><text id="kity_text_1449" text-rendering="inherit" font-size="12" dy=".8em" y="6097.6999972090125" x="343.50000903755426">goroutine语法格式：go 函数名( 参数列表 )</text></g></g><g id="minder_node328"><g id="node_expander326" style="cursor: pointer;" display="none"><path id="kity_path_2924" fill="white" stroke="gray" d="M338.5000088736415,6131.499997623265A6,6,0,1,1,326.5000088736415,6131.499997623265A6,6,0,1,1,338.5000088736415,6131.499997623265"></path><path id="kity_path_2925" fill="none" stroke="gray"></path></g><path id="node_outline327" fill="none" stroke="none" d="M343.50000903755426,6122.499997623265h313a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-313a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text327" fill="black"><text id="kity_text_1451" text-rendering="inherit" font-size="12" dy=".8em" y="6123.699997596443" x="343.50000903755426">channel：用于Goroutines通信，可以防止竞态条件的发生</text></g></g><g id="minder_node329"><g id="node_expander330" style="cursor: pointer;"><path id="kity_path_2936" fill="white" stroke="gray" d="M338.5000088736415,6183.499998398125A6,6,0,1,1,326.5000088736415,6183.499998398125A6,6,0,1,1,338.5000088736415,6183.499998398125"></path><path id="kity_path_2937" fill="none" stroke="gray" d="M328.0000088736415,6183.499998398125L337.0000088736415,6183.499998398125"></path></g><path id="node_outline331" fill="none" stroke="none" d="M343.50000903755426,6174.499998398125h222a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-222a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text331" fill="black"><text id="kity_text_1459" text-rendering="inherit" font-size="12" dy=".8em" y="6175.699998371303" x="343.50000903755426">如何保证gorountine执行完毕后继续执行</text></g></g><g id="minder_node330"><g id="node_expander327" style="cursor: pointer;" display="none"><path id="kity_path_2927" fill="white" stroke="gray" d="M586.5000125691295,6157.499998010695A6,6,0,1,1,574.5000125691295,6157.499998010695A6,6,0,1,1,586.5000125691295,6157.499998010695"></path><path id="kity_path_2928" fill="none" stroke="gray"></path></g><path id="node_outline328" fill="none" stroke="none" d="M591.5000127330422,6148.499998010695h303a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-303a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text328" fill="black"><text id="kity_text_1453" text-rendering="inherit" font-size="12" dy=".8em" y="6149.699997983873" x="591.5000127330422">time包中的Sleep方法（有缺陷，不确定sleep多久合适）</text></g></g><g id="minder_node331"><g id="node_expander328" style="cursor: pointer;" display="none"><path id="kity_path_2930" fill="white" stroke="gray" d="M586.5000125691295,6183.499998398125A6,6,0,1,1,574.5000125691295,6183.499998398125A6,6,0,1,1,586.5000125691295,6183.499998398125"></path><path id="kity_path_2931" fill="none" stroke="gray"></path></g><path id="node_outline329" fill="none" stroke="none" d="M591.5000127330422,6174.499998398125h330a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-330a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text329" fill="black"><text id="kity_text_1455" text-rendering="inherit" font-size="12" dy=".8em" y="6175.699998371303" x="591.5000127330422">channel等待（也有缺陷，只能用于channel个数一定的情况）</text></g></g><g id="minder_node332"><g id="node_expander329" style="cursor: pointer;" display="none"><path id="kity_path_2933" fill="white" stroke="gray" d="M586.5000125691295,6209.499998785555A6,6,0,1,1,574.5000125691295,6209.499998785555A6,6,0,1,1,586.5000125691295,6209.499998785555"></path><path id="kity_path_2934" fill="none" stroke="gray"></path></g><path id="node_outline330" fill="none" stroke="none" d="M591.5000127330422,6200.499998785555h139a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-139a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text330" fill="black"><text id="kity_text_1457" text-rendering="inherit" font-size="12" dy=".8em" y="6201.699998758733" x="591.5000127330422">sync.WaitGroup（推荐）</text></g></g><g id="minder_node333"><g id="node_expander347" style="cursor: pointer;"><path id="kity_path_2987" fill="white" stroke="gray" d="M83.50000507384539,6354.500000946224A6,6,0,1,1,71.50000507384539,6354.500000946224A6,6,0,1,1,83.50000507384539,6354.500000946224"></path><path id="kity_path_2988" fill="none" stroke="gray" d="M73.00000507384539,6354.500000946224L82.00000507384539,6354.500000946224"></path></g><path id="node_outline348" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,6341.500000946224h180a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-180a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text348" fill="black"><text id="kity_text_1495" text-rendering="inherit" font-size="14" dy=".8em" y="6345.400000914931" x="104.50000547617674">错误处理（error接口）</text></g></g><g id="minder_node334"><g id="node_expander332" style="cursor: pointer;" display="none"><path id="kity_path_2942" fill="white" stroke="gray" d="M286.5000080987811,6243.499999292195A6,6,0,1,1,274.5000080987811,6243.499999292195A6,6,0,1,1,286.5000080987811,6243.499999292195"></path><path id="kity_path_2943" fill="none" stroke="gray"></path></g><path id="node_outline333" fill="none" stroke="none" d="M291.5000082626939,6234.499999292195h305a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-305a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text333" fill="black"><text id="kity_text_1463" text-rendering="inherit" font-size="12" dy=".8em" y="6235.699999265373" x="291.5000082626939">Go中的错误是一种接口类型。用内置的 error&#xa0;关键字表示</text></g></g><g id="minder_node335"><g id="node_expander333" style="cursor: pointer;" display="none"><path id="kity_path_2945" fill="white" stroke="gray" d="M286.5000080987811,6278.4999998137355A6,6,0,1,1,274.5000080987811,6278.4999998137355A6,6,0,1,1,286.5000080987811,6278.4999998137355"></path><path id="kity_path_2946" fill="none" stroke="gray"></path></g><path id="node_outline334" fill="none" stroke="none" d="M291.5000082626939,6260.4999998137355h538a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text334" fill="black"><text id="kity_text_1465" text-rendering="inherit" font-size="12" dy=".8em" y="6261.699999786913" x="291.5000082626939">内置error错误接口，可以自己用struct错误类型实现Error()方法来自定义错误输出</text><text id="kity_text_1466" text-rendering="inherit" font-size="12" dy=".8em" y="6279.699999786913" x="291.5000082626939">错误类型的命名约定是：名称应该以文本Error结束，如：type areaError struct {err string r float64}</text></g></g><g id="minder_node336"><g id="node_expander334" style="cursor: pointer;" display="none"><path id="kity_path_2948" fill="white" stroke="gray" d="M286.5000080987811,6313.500000335276A6,6,0,1,1,274.5000080987811,6313.500000335276A6,6,0,1,1,286.5000080987811,6313.500000335276"></path><path id="kity_path_2949" fill="none" stroke="gray"></path></g><path id="node_outline335" fill="none" stroke="none" d="M291.5000082626939,6304.500000335276h446a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-446a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text335" fill="black"><text id="kity_text_1468" text-rendering="inherit" font-size="12" dy=".8em" y="6305.700000308454" x="291.5000082626939">如果一个函数或方法返回一个错误，那么按照惯例，它必须是函数返回的最后一个值</text></g></g><g id="minder_node337"><g id="node_expander335" style="cursor: pointer;" display="none"><path id="kity_path_2951" fill="white" stroke="gray" d="M286.5000080987811,6339.500000722706A6,6,0,1,1,274.5000080987811,6339.500000722706A6,6,0,1,1,286.5000080987811,6339.500000722706"></path><path id="kity_path_2952" fill="none" stroke="gray"></path></g><path id="node_outline336" fill="none" stroke="none" d="M291.5000082626939,6330.500000722706h702a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-702a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text336" fill="black"><text id="kity_text_1470" text-rendering="inherit" font-size="12" dy=".8em" y="6331.700000695884" x="291.5000082626939">处理错误的惯用方法是将返回的错误与nil进行比较（非nil值表示出现错误，打印错误并从主函数返回即可；nil值表示没有发生错误）</text></g></g><g id="minder_node338"><g id="node_expander336" style="cursor: pointer;" display="none"><path id="kity_path_2954" fill="white" stroke="gray" d="M286.5000080987811,6365.5000011101365A6,6,0,1,1,274.5000080987811,6365.5000011101365A6,6,0,1,1,286.5000080987811,6365.5000011101365"></path><path id="kity_path_2955" fill="none" stroke="gray"></path></g><path id="node_outline337" fill="none" stroke="none" d="M291.5000082626939,6356.5000011101365h604a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-604a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text337" fill="black"><text id="kity_text_1472" text-rendering="inherit" font-size="12" dy=".8em" y="6357.700001083314" x="291.5000082626939">可以使用errors.New("xxx")或者fmt包的Errorf函数，来返回一个错误信息，示例：fmt.Errorf("age是：%d", age)</text></g></g><g id="minder_node339"><g id="node_expander337" style="cursor: pointer;" display="none"><path id="kity_path_2957" fill="white" stroke="gray" d="M286.5000080987811,6391.500001497567A6,6,0,1,1,274.5000080987811,6391.500001497567A6,6,0,1,1,286.5000080987811,6391.500001497567"></path><path id="kity_path_2958" fill="none" stroke="gray"></path></g><path id="node_outline338" fill="none" stroke="none" d="M291.5000082626939,6382.500001497567h285a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-285a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text338" fill="black"><text id="kity_text_1474" text-rendering="inherit" font-size="12" dy=".8em" y="6383.700001470745" x="291.5000082626939">永远不要忽略一个错误（不要使用"_"接收并忽略err）</text></g></g><g id="minder_node340"><g id="node_expander346" style="cursor: pointer;"><path id="kity_path_2984" fill="white" stroke="gray" d="M286.5000080987811,6465.500002600253A6,6,0,1,1,274.5000080987811,6465.500002600253A6,6,0,1,1,286.5000080987811,6465.500002600253"></path><path id="kity_path_2985" fill="none" stroke="gray" d="M276.0000080987811,6465.500002600253L285.0000080987811,6465.500002600253"></path></g><path id="node_outline347" fill="none" stroke="none" d="M291.5000082626939,6456.500002600253h209a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-209a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text347" fill="black"><text id="kity_text_1493" text-rendering="inherit" font-size="12" dy=".8em" y="6457.7000025734305" x="291.5000082626939">Exception处理：defer, panic, recover</text></g></g><g id="minder_node341"><g id="node_expander338" style="cursor: pointer;" display="none"><path id="kity_path_2960" fill="white" stroke="gray" d="M521.500011600554,6417.500001884997A6,6,0,1,1,509.500011600554,6417.500001884997A6,6,0,1,1,521.500011600554,6417.500001884997"></path><path id="kity_path_2961" fill="none" stroke="gray"></path></g><path id="node_outline339" fill="none" stroke="none" d="M526.5000117644668,6408.500001884997h292a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-292a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text339" fill="black"><text id="kity_text_1476" text-rendering="inherit" font-size="12" dy=".8em" y="6409.700001858175" x="526.5000117644668">Go语言不支持传统的 try…catch…finally 这种异常捕获</text></g></g><g id="minder_node342"><g id="node_expander339" style="cursor: pointer;" display="none"><path id="kity_path_2963" fill="white" stroke="gray" d="M521.500011600554,6452.5000024065375A6,6,0,1,1,509.500011600554,6452.5000024065375A6,6,0,1,1,521.500011600554,6452.5000024065375"></path><path id="kity_path_2964" fill="none" stroke="gray"></path></g><path id="node_outline340" fill="none" stroke="none" d="M526.5000117644668,6434.5000024065375h433a5,5,0,0,1,5,5v26a5,5,0,0,1,-5,5h-433a5,5,0,0,1,-5,-5v-26a5,5,0,0,1,5,-5z"></path><g id="node_text340" fill="black"><text id="kity_text_1478" text-rendering="inherit" font-size="12" dy=".8em" y="6435.700002379715" x="526.5000117644668">建议使用多值返回来返回错误；不要用异常代替错误，更不要用来控制流程，即：</text><text id="kity_text_1479" text-rendering="inherit" font-size="12" dy=".8em" y="6453.700002379715" x="526.5000117644668">panic和recover机制作为最后的手段，尽量避免出现在代码中</text></g></g><g id="minder_node343"><g id="node_expander345" style="cursor: pointer;"><path id="kity_path_2981" fill="white" stroke="gray" d="M521.500011600554,6513.500003315508A6,6,0,1,1,509.500011600554,6513.500003315508A6,6,0,1,1,521.500011600554,6513.500003315508"></path><path id="kity_path_2982" fill="none" stroke="gray" d="M511.000011600554,6513.500003315508L520.000011600554,6513.500003315508"></path></g><path id="node_outline346" fill="none" stroke="none" d="M526.5000117644668,6504.500003315508h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text346" fill="black"><text id="kity_text_1491" text-rendering="inherit" font-size="12" dy=".8em" y="6505.700003288686" x="526.5000117644668">概念</text></g></g><g id="minder_node344"><g id="node_expander341" style="cursor: pointer;"><path id="kity_path_2969" fill="white" stroke="gray" d="M573.5000123754144,6487.500002928078A6,6,0,1,1,561.5000123754144,6487.500002928078A6,6,0,1,1,573.5000123754144,6487.500002928078"></path><path id="kity_path_2970" fill="none" stroke="gray" d="M563.0000123754144,6487.500002928078L572.0000123754144,6487.500002928078"></path></g><path id="node_outline342" fill="none" stroke="none" d="M578.5000125393271,6478.500002928078h79a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text342" fill="black"><text id="kity_text_1483" text-rendering="inherit" font-size="12" dy=".8em" y="6479.700002901256" x="578.5000125393271">panic（恐慌）</text></g></g><g id="minder_node345"><g id="node_expander340" style="cursor: pointer;" display="none"><path id="kity_path_2966" fill="white" stroke="gray" d="M678.5000139400363,6487.500002928078A6,6,0,1,1,666.5000139400363,6487.500002928078A6,6,0,1,1,678.5000139400363,6487.500002928078"></path><path id="kity_path_2967" fill="none" stroke="gray"></path></g><path id="node_outline341" fill="none" stroke="none" d="M683.5000141039491,6478.500002928078h228a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-228a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text341" fill="black"><text id="kity_text_1481" text-rendering="inherit" font-size="12" dy=".8em" y="6479.700002901256" x="683.5000141039491">可以中断原有的控制流程。进入一个恐慌中</text></g></g><g id="minder_node346"><g id="node_expander343" style="cursor: pointer;"><path id="kity_path_2975" fill="white" stroke="gray" d="M573.5000123754144,6513.500003315508A6,6,0,1,1,561.5000123754144,6513.500003315508A6,6,0,1,1,573.5000123754144,6513.500003315508"></path><path id="kity_path_2976" fill="none" stroke="gray" d="M563.0000123754144,6513.500003315508L572.0000123754144,6513.500003315508"></path></g><path id="node_outline344" fill="none" stroke="none" d="M578.5000125393271,6504.500003315508h91a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-91a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text344" fill="black"><text id="kity_text_1487" text-rendering="inherit" font-size="12" dy=".8em" y="6505.700003288686" x="578.5000125393271">recover（恢复）</text></g></g><g id="minder_node347"><g id="node_expander342" style="cursor: pointer;" display="none"><path id="kity_path_2972" fill="white" stroke="gray" d="M690.5000141188502,6513.500003315508A6,6,0,1,1,678.5000141188502,6513.500003315508A6,6,0,1,1,690.5000141188502,6513.500003315508"></path><path id="kity_path_2973" fill="none" stroke="gray"></path></g><path id="node_outline343" fill="none" stroke="none" d="M695.500014282763,6504.500003315508h380a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-380a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text343" fill="black"><text id="kity_text_1485" text-rendering="inherit" font-size="12" dy=".8em" y="6505.700003288686" x="695.500014282763">通过恢复正常的执行并检索传递给panic的调用的错误值来停止恐慌序列</text></g></g><g id="minder_node348"><g id="node_expander344" style="cursor: pointer;" display="none"><path id="kity_path_2978" fill="white" stroke="gray" d="M573.5000123754144,6539.500003702939A6,6,0,1,1,561.5000123754144,6539.500003702939A6,6,0,1,1,573.5000123754144,6539.500003702939"></path><path id="kity_path_2979" fill="none" stroke="gray"></path></g><path id="node_outline345" fill="none" stroke="none" d="M578.5000125393271,6530.500003702939h344a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-344a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text345" fill="black"><text id="kity_text_1489" text-rendering="inherit" font-size="12" dy=".8em" y="6531.7000036761165" x="578.5000125393271">panic可以在任何地方引发，但是recover只能在defer函数中有效</text></g></g><g id="minder_node349"><g id="node_expander354" style="cursor: pointer;"><path id="kity_path_3008" fill="white" stroke="gray" d="M83.50000507384539,6599.500004597008A6,6,0,1,1,71.50000507384539,6599.500004597008A6,6,0,1,1,83.50000507384539,6599.500004597008"></path><path id="kity_path_3009" fill="none" stroke="gray" d="M73.00000507384539,6599.500004597008L82.00000507384539,6599.500004597008"></path></g><path id="node_outline355" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,6586.500004597008h95a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-95a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text355" fill="black"><text id="kity_text_1509" text-rendering="inherit" font-size="14" dy=".8em" y="6590.400004565716" x="104.50000547617674">OOP编程</text></g></g><g id="minder_node350"><g id="node_expander349" style="cursor: pointer;"><path id="kity_path_2993" fill="white" stroke="gray" d="M201.5000068321824,6573.500004209578A6,6,0,1,1,189.5000068321824,6573.500004209578A6,6,0,1,1,201.5000068321824,6573.500004209578"></path><path id="kity_path_2994" fill="none" stroke="gray" d="M191.0000068321824,6573.500004209578L200.0000068321824,6573.500004209578"></path></g><path id="node_outline350" fill="none" stroke="none" d="M206.50000699609518,6564.500004209578h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text350" fill="black"><text id="kity_text_1499" text-rendering="inherit" font-size="12" dy=".8em" y="6565.700004182756" x="206.50000699609518">继承</text></g></g><g id="minder_node351"><g id="node_expander348" style="cursor: pointer;" display="none"><path id="kity_path_2990" fill="white" stroke="gray" d="M253.5000076070428,6573.500004209578A6,6,0,1,1,241.5000076070428,6573.500004209578A6,6,0,1,1,253.5000076070428,6573.500004209578"></path><path id="kity_path_2991" fill="none" stroke="gray"></path></g><path id="node_outline349" fill="none" stroke="none" d="M258.50000777095556,6564.500004209578h161a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-161a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text349" fill="black"><text id="kity_text_1497" text-rendering="inherit" font-size="12" dy=".8em" y="6565.700004182756" x="258.50000777095556">Go不支持继承，使用嵌套模拟</text></g></g><g id="minder_node352"><g id="node_expander351" style="cursor: pointer;"><path id="kity_path_2999" fill="white" stroke="gray" d="M201.5000068321824,6599.500004597008A6,6,0,1,1,189.5000068321824,6599.500004597008A6,6,0,1,1,201.5000068321824,6599.500004597008"></path><path id="kity_path_3000" fill="none" stroke="gray" d="M191.0000068321824,6599.500004597008L200.0000068321824,6599.500004597008"></path></g><path id="node_outline352" fill="none" stroke="none" d="M206.50000699609518,6590.500004597008h181a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-181a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text352" fill="black"><text id="kity_text_1503" text-rendering="inherit" font-size="12" dy=".8em" y="6591.700004570186" x="206.50000699609518">构造函数（用于对象属性初始化）</text></g></g><g id="minder_node353"><g id="node_expander350" style="cursor: pointer;" display="none"><path id="kity_path_2996" fill="white" stroke="gray" d="M408.5000099167228,6599.500004597008A6,6,0,1,1,396.5000099167228,6599.500004597008A6,6,0,1,1,408.5000099167228,6599.500004597008"></path><path id="kity_path_2997" fill="none" stroke="gray"></path></g><path id="node_outline351" fill="none" stroke="none" d="M413.50001008063555,6590.500004597008h299a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-299a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text351" fill="black"><text id="kity_text_1501" text-rendering="inherit" font-size="12" dy=".8em" y="6591.700004570186" x="413.50001008063555">使用New()函数模拟构造函数，避免包外调用和零值异常</text></g></g><g id="minder_node354"><g id="node_expander353" style="cursor: pointer;"><path id="kity_path_3005" fill="white" stroke="gray" d="M201.5000068321824,6625.500004984438A6,6,0,1,1,189.5000068321824,6625.500004984438A6,6,0,1,1,201.5000068321824,6625.500004984438"></path><path id="kity_path_3006" fill="none" stroke="gray" d="M191.0000068321824,6625.500004984438L200.0000068321824,6625.500004984438"></path></g><path id="node_outline354" fill="none" stroke="none" d="M206.50000699609518,6616.500004984438h25a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-25a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text354" fill="black"><text id="kity_text_1507" text-rendering="inherit" font-size="12" dy=".8em" y="6617.700004957616" x="206.50000699609518">多态</text></g></g><g id="minder_node355"><g id="node_expander352" style="cursor: pointer;" display="none"><path id="kity_path_3002" fill="white" stroke="gray" d="M252.50000759214163,6625.500004984438A6,6,0,1,1,240.50000759214163,6625.500004984438A6,6,0,1,1,252.50000759214163,6625.500004984438"></path><path id="kity_path_3003" fill="none" stroke="gray"></path></g><path id="node_outline353" fill="none" stroke="none" d="M257.5000077560544,6616.500004984438h337a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-337a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text353" fill="black"><text id="kity_text_1505" text-rendering="inherit" font-size="12" dy=".8em" y="6617.700004957616" x="257.5000077560544">Go使用[接口]模拟多态，可以简单理解为以接口作为形参的函数</text></g></g><g id="minder_node356"><g id="node_expander373" style="cursor: pointer;"><path id="kity_path_3065" fill="white" stroke="gray" d="M83.50000507384539,6730.50000654906A6,6,0,1,1,71.50000507384539,6730.50000654906A6,6,0,1,1,83.50000507384539,6730.50000654906"></path><path id="kity_path_3066" fill="none" stroke="gray" d="M73.00000507384539,6730.50000654906L82.00000507384539,6730.50000654906"></path></g><path id="node_outline374" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,6717.50000654906h133a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-133a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text374" fill="black"><text id="kity_text_1547" text-rendering="inherit" font-size="14" dy=".8em" y="6721.400006517768" x="104.50000547617674">反射（reflect）</text></g></g><g id="minder_node357"><g id="node_expander356" style="cursor: pointer;"><path id="kity_path_3014" fill="white" stroke="gray" d="M239.50000739842653,6659.500005491078A6,6,0,1,1,227.50000739842653,6659.500005491078A6,6,0,1,1,239.50000739842653,6659.500005491078"></path><path id="kity_path_3015" fill="none" stroke="gray" d="M229.00000739842653,6659.500005491078L238.00000739842653,6659.500005491078"></path></g><path id="node_outline357" fill="none" stroke="none" d="M244.5000075623393,6650.500005491078h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text357" fill="black"><text id="kity_text_1513" text-rendering="inherit" font-size="12" dy=".8em" y="6651.700005464256" x="244.5000075623393">定义</text></g></g><g id="minder_node358"><g id="node_expander355" style="cursor: pointer;" display="none"><path id="kity_path_3011" fill="white" stroke="gray" d="M291.5000081732869,6659.500005491078A6,6,0,1,1,279.5000081732869,6659.500005491078A6,6,0,1,1,291.5000081732869,6659.500005491078"></path><path id="kity_path_3012" fill="none" stroke="gray"></path></g><path id="node_outline356" fill="none" stroke="none" d="M296.5000083371997,6650.500005491078h594a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-594a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text356" fill="black"><text id="kity_text_1511" text-rendering="inherit" font-size="12" dy=".8em" y="6651.700005464256" x="296.5000083371997">在golang中简单地说就是：在运行时通过变量的值来访问变量的相关信息（属性），并且支持动态修改变量的值</text></g></g><g id="minder_node359"><g id="node_expander358" style="cursor: pointer;"><path id="kity_path_3020" fill="white" stroke="gray" d="M239.50000739842653,6685.500005878508A6,6,0,1,1,227.50000739842653,6685.500005878508A6,6,0,1,1,239.50000739842653,6685.500005878508"></path><path id="kity_path_3021" fill="none" stroke="gray" d="M229.00000739842653,6685.500005878508L238.00000739842653,6685.500005878508"></path></g><path id="node_outline359" fill="none" stroke="none" d="M244.5000075623393,6676.500005878508h26a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-26a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text359" fill="black"><text id="kity_text_1517" text-rendering="inherit" font-size="12" dy=".8em" y="6677.700005851686" x="244.5000075623393">特性</text></g></g><g id="minder_node360"><g id="node_expander357" style="cursor: pointer;" display="none"><path id="kity_path_3017" fill="white" stroke="gray" d="M291.5000081732869,6685.500005878508A6,6,0,1,1,279.5000081732869,6685.500005878508A6,6,0,1,1,291.5000081732869,6685.500005878508"></path><path id="kity_path_3018" fill="none" stroke="gray"></path></g><path id="node_outline358" fill="none" stroke="none" d="M296.5000083371997,6676.500005878508h110a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-110a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text358" fill="black"><text id="kity_text_1515" text-rendering="inherit" font-size="12" dy=".8em" y="6677.700005851686" x="296.5000083371997">一般使用reflect操作</text></g></g><g id="minder_node361"><g id="node_expander372" style="cursor: pointer;"><path id="kity_path_3062" fill="white" stroke="gray" d="M239.50000739842653,6802.500007621944A6,6,0,1,1,227.50000739842653,6802.500007621944A6,6,0,1,1,239.50000739842653,6802.500007621944"></path><path id="kity_path_3063" fill="none" stroke="gray" d="M229.00000739842653,6802.500007621944L238.00000739842653,6802.500007621944"></path></g><path id="node_outline373" fill="none" stroke="none" d="M244.5000075623393,6793.500007621944h116a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-116a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text373" fill="black"><text id="kity_text_1545" text-rendering="inherit" font-size="12" dy=".8em" y="6794.700007595122" x="244.5000075623393">使用（一般分为3步）</text></g></g><g id="minder_node362"><g id="node_expander359" style="cursor: pointer;" display="none"><path id="kity_path_3023" fill="white" stroke="gray" d="M381.5000095143914,6711.500006265938A6,6,0,1,1,369.5000095143914,6711.500006265938A6,6,0,1,1,381.5000095143914,6711.500006265938"></path><path id="kity_path_3024" fill="none" stroke="gray"></path></g><path id="node_outline360" fill="none" stroke="none" d="M386.5000096783042,6702.500006265938h638a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-638a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text360" fill="black"><text id="kity_text_1519" text-rendering="inherit" font-size="12" dy=".8em" y="6703.700006239116" x="386.5000096783042">最佳应用场景是：程序的启动阶段，实现一些类型检查、注册等前置工作，既不影响程序性能同时又增加了代码的可读性</text></g></g><g id="minder_node363"><g id="node_expander360" style="cursor: pointer;" display="none"><path id="kity_path_3026" fill="white" stroke="gray" d="M381.5000095143914,6737.5000066533685A6,6,0,1,1,369.5000095143914,6737.5000066533685A6,6,0,1,1,381.5000095143914,6737.5000066533685"></path><path id="kity_path_3027" fill="none" stroke="gray"></path></g><path id="node_outline361" fill="none" stroke="none" d="M386.5000096783042,6728.5000066533685h202a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text361" fill="black"><text id="kity_text_1521" text-rendering="inherit" font-size="12" dy=".8em" y="6729.700006626546" x="386.5000096783042">【Step1】：把变量转化成reflect对象</text></g></g><g id="minder_node364"><g id="node_expander361" style="cursor: pointer;" display="none"><path id="kity_path_3029" fill="white" stroke="gray" d="M381.5000095143914,6763.500007040799A6,6,0,1,1,369.5000095143914,6763.500007040799A6,6,0,1,1,381.5000095143914,6763.500007040799"></path><path id="kity_path_3030" fill="none" stroke="gray"></path></g><path id="node_outline362" fill="none" stroke="none" d="M386.5000096783042,6754.500007040799h238a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text362" fill="black"><text id="kity_text_1523" text-rendering="inherit" font-size="12" dy=".8em" y="6755.700007013977" x="386.5000096783042">【Step2】：获取能返回的响应类型或者数值</text></g></g><g id="minder_node365"><g id="node_expander362" style="cursor: pointer;" display="none"><path id="kity_path_3032" fill="white" stroke="gray" d="M381.5000095143914,6789.500007428229A6,6,0,1,1,369.5000095143914,6789.500007428229A6,6,0,1,1,381.5000095143914,6789.500007428229"></path><path id="kity_path_3033" fill="none" stroke="gray"></path></g><path id="node_outline363" fill="none" stroke="none" d="M386.5000096783042,6780.500007428229h118a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text363" fill="black"><text id="kity_text_1525" text-rendering="inherit" font-size="12" dy=".8em" y="6781.700007401407" x="386.5000096783042">【Step3】：动态修改</text></g></g><g id="minder_node366"><g id="node_expander367" style="cursor: pointer;"><path id="kity_path_3047" fill="white" stroke="gray" d="M381.5000095143914,6828.500008009374A6,6,0,1,1,369.5000095143914,6828.500008009374A6,6,0,1,1,381.5000095143914,6828.500008009374"></path><path id="kity_path_3048" fill="none" stroke="gray" d="M371.0000095143914,6828.500008009374L380.0000095143914,6828.500008009374"></path></g><path id="node_outline368" fill="none" stroke="none" d="M386.5000096783042,6819.500008009374h84a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-84a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text368" fill="black"><text id="kity_text_1535" text-rendering="inherit" font-size="12" dy=".8em" y="6820.700007982552" x="386.5000096783042">常用内置方法：</text></g></g><g id="minder_node367"><g id="node_expander364" style="cursor: pointer;"><path id="kity_path_3038" fill="white" stroke="gray" d="M491.50001115351915,6815.500007815659A6,6,0,1,1,479.50001115351915,6815.500007815659A6,6,0,1,1,491.50001115351915,6815.500007815659"></path><path id="kity_path_3039" fill="none" stroke="gray" d="M481.00001115351915,6815.500007815659L490.00001115351915,6815.500007815659"></path></g><path id="node_outline365" fill="none" stroke="none" d="M496.5000113174319,6806.500007815659h73a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-73a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text365" fill="black"><text id="kity_text_1529" text-rendering="inherit" font-size="12" dy=".8em" y="6807.700007788837" x="496.5000113174319">reflect包方法</text></g></g><g id="minder_node368"><g id="node_expander363" style="cursor: pointer;" display="none"><path id="kity_path_3035" fill="white" stroke="gray" d="M590.5000126287341,6815.500007815659A6,6,0,1,1,578.5000126287341,6815.500007815659A6,6,0,1,1,590.5000126287341,6815.500007815659"></path><path id="kity_path_3036" fill="none" stroke="gray"></path></g><path id="node_outline364" fill="none" stroke="none" d="M595.5000127926469,6806.500007815659h117a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-117a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text364" fill="black"><text id="kity_text_1527" text-rendering="inherit" font-size="12" dy=".8em" y="6807.700007788837" x="595.5000127926469">ValueOf()、TypeOf()</text></g></g><g id="minder_node369"><g id="node_expander366" style="cursor: pointer;"><path id="kity_path_3044" fill="white" stroke="gray" d="M491.50001115351915,6841.500008203089A6,6,0,1,1,479.50001115351915,6841.500008203089A6,6,0,1,1,491.50001115351915,6841.500008203089"></path><path id="kity_path_3045" fill="none" stroke="gray" d="M481.00001115351915,6841.500008203089L490.00001115351915,6841.500008203089"></path></g><path id="node_outline367" fill="none" stroke="none" d="M496.5000113174319,6832.500008203089h50a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text367" fill="black"><text id="kity_text_1533" text-rendering="inherit" font-size="12" dy=".8em" y="6833.700008176267" x="496.5000113174319">对象方法</text></g></g><g id="minder_node370"><g id="node_expander365" style="cursor: pointer;" display="none"><path id="kity_path_3041" fill="white" stroke="gray" d="M567.5000122860074,6841.500008203089A6,6,0,1,1,555.5000122860074,6841.500008203089A6,6,0,1,1,567.5000122860074,6841.500008203089"></path><path id="kity_path_3042" fill="none" stroke="gray"></path></g><path id="node_outline366" fill="none" stroke="none" d="M572.5000124499202,6832.500008203089h369a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-369a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text366" fill="black"><text id="kity_text_1531" text-rendering="inherit" font-size="12" dy=".8em" y="6833.700008176267" x="572.5000124499202">Elem()、Float()、Kind()、Type()、Name()、Interface()、SetFloat()</text></g></g><g id="minder_node371"><g id="node_expander371" style="cursor: pointer;"><path id="kity_path_3059" fill="white" stroke="gray" d="M381.5000095143914,6893.50000897795A6,6,0,1,1,369.5000095143914,6893.50000897795A6,6,0,1,1,381.5000095143914,6893.50000897795"></path><path id="kity_path_3060" fill="none" stroke="gray" d="M371.0000095143914,6893.50000897795L380.0000095143914,6893.50000897795"></path></g><path id="node_outline372" fill="none" stroke="none" d="M386.5000096783042,6884.50000897795h190a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text372" fill="black"><text id="kity_text_1543" text-rendering="inherit" font-size="12" dy=".8em" y="6885.7000089511275" x="386.5000096783042">在结构体（struct）中可以通过反射</text></g></g><g id="minder_node372"><g id="node_expander368" style="cursor: pointer;" display="none"><path id="kity_path_3050" fill="white" stroke="gray" d="M597.5000127330422,6867.500008590519A6,6,0,1,1,585.5000127330422,6867.500008590519A6,6,0,1,1,597.5000127330422,6867.500008590519"></path><path id="kity_path_3051" fill="none" stroke="gray"></path></g><path id="node_outline369" fill="none" stroke="none" d="M602.500012896955,6858.500008590519h158a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-158a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text369" fill="black"><text id="kity_text_1537" text-rendering="inherit" font-size="12" dy=".8em" y="6859.700008563697" x="602.500012896955">获取结构体对象的属性和方法</text></g></g><g id="minder_node373"><g id="node_expander369" style="cursor: pointer;" display="none"><path id="kity_path_3053" fill="white" stroke="gray" d="M597.5000127330422,6893.50000897795A6,6,0,1,1,585.5000127330422,6893.50000897795A6,6,0,1,1,597.5000127330422,6893.50000897795"></path><path id="kity_path_3054" fill="none" stroke="gray"></path></g><path id="node_outline370" fill="none" stroke="none" d="M602.500012896955,6884.50000897795h86a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-86a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text370" fill="black"><text id="kity_text_1539" text-rendering="inherit" font-size="12" dy=".8em" y="6885.7000089511275" x="602.500012896955">调用结构体方法</text></g></g><g id="minder_node374"><g id="node_expander370" style="cursor: pointer;" display="none"><path id="kity_path_3056" fill="white" stroke="gray" d="M597.5000127330422,6919.50000936538A6,6,0,1,1,585.5000127330422,6919.50000936538A6,6,0,1,1,597.5000127330422,6919.50000936538"></path><path id="kity_path_3057" fill="none" stroke="gray"></path></g><path id="node_outline371" fill="none" stroke="none" d="M602.500012896955,6910.50000936538h98a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text371" fill="black"><text id="kity_text_1541" text-rendering="inherit" font-size="12" dy=".8em" y="6911.700009338558" x="602.500012896955">修改结构体的数据</text></g></g><g id="minder_node375"><g id="node_expander382" style="cursor: pointer;"><path id="kity_path_3092" fill="white" stroke="gray" d="M83.50000507384539,7044.500011228025A6,6,0,1,1,71.50000507384539,7044.500011228025A6,6,0,1,1,83.50000507384539,7044.500011228025"></path><path id="kity_path_3093" fill="none" stroke="gray" d="M73.00000507384539,7044.500011228025L82.00000507384539,7044.500011228025"></path></g><path id="node_outline383" fill="rgb(238, 246, 238)" stroke="rgb(115, 191, 118)" d="M87.50000547617674,7031.500011228025h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text383" fill="black"><text id="kity_text_1565" text-rendering="inherit" font-size="14" dy=".8em" y="7035.4000111967325" x="104.50000547617674">其他</text></g></g><g id="minder_node376"><g id="node_expander374" style="cursor: pointer;" display="none"><path id="kity_path_3068" fill="white" stroke="gray" d="M169.50000635534525,6953.500009872019A6,6,0,1,1,157.50000635534525,6953.500009872019A6,6,0,1,1,169.50000635534525,6953.500009872019"></path><path id="kity_path_3069" fill="none" stroke="gray"></path></g><path id="node_outline375" fill="none" stroke="none" d="M174.50000651925802,6944.500009872019h441a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-441a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text375" fill="black"><text id="kity_text_1549" text-rendering="inherit" font-size="12" dy=".8em" y="6945.700009845197" x="174.50000651925802">多变量之间的分隔符用逗号，同一变量的内部属性如name、type之间用空格分割；</text></g></g><g id="minder_node377"><g id="node_expander375" style="cursor: pointer;" display="none"><path id="kity_path_3071" fill="white" stroke="gray" d="M169.50000635534525,6979.5000102594495A6,6,0,1,1,157.50000635534525,6979.5000102594495A6,6,0,1,1,169.50000635534525,6979.5000102594495"></path><path id="kity_path_3072" fill="none" stroke="gray"></path></g><path id="node_outline376" fill="none" stroke="none" d="M174.50000651925802,6970.5000102594495h123a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-123a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text376" fill="black"><text id="kity_text_1551" text-rendering="inherit" font-size="12" dy=".8em" y="6971.700010232627" x="174.50000651925802">nil：指代零值或者空值</text></g></g><g id="minder_node378"><g id="node_expander376" style="cursor: pointer;" display="none"><path id="kity_path_3074" fill="white" stroke="gray" d="M169.50000635534525,7005.50001064688A6,6,0,1,1,157.50000635534525,7005.50001064688A6,6,0,1,1,169.50000635534525,7005.50001064688"></path><path id="kity_path_3075" fill="none" stroke="gray"></path></g><path id="node_outline377" fill="none" stroke="none" d="M174.50000651925802,6996.50001064688h295a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-295a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text377" fill="black"><text id="kity_text_1553" text-rendering="inherit" font-size="12" dy=".8em" y="6997.700010620058" x="174.50000651925802">_：空标识符，通常用于语法需要但是逻辑不需要的时候</text></g></g><g id="minder_node379"><g id="node_expander377" style="cursor: pointer;" display="none"><path id="kity_path_3077" fill="white" stroke="gray" d="M169.50000635534525,7031.50001103431A6,6,0,1,1,157.50000635534525,7031.50001103431A6,6,0,1,1,169.50000635534525,7031.50001103431"></path><path id="kity_path_3078" fill="none" stroke="gray"></path></g><path id="node_outline378" fill="none" stroke="none" d="M174.50000651925802,7022.50001103431h118a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text378" fill="black"><text id="kity_text_1555" text-rendering="inherit" font-size="12" dy=".8em" y="7023.700011007488" x="174.50000651925802">初始化 =&#xa0;声明 +&#xa0;赋值</text></g></g><g id="minder_node380"><g id="node_expander378" style="cursor: pointer;" display="none"><path id="kity_path_3080" fill="white" stroke="gray" d="M169.50000635534525,7057.50001142174A6,6,0,1,1,157.50000635534525,7057.50001142174A6,6,0,1,1,169.50000635534525,7057.50001142174"></path><path id="kity_path_3081" fill="none" stroke="gray"></path></g><path id="node_outline379" fill="none" stroke="none" d="M174.50000651925802,7048.50001142174h337a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-337a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text379" fill="black"><text id="kity_text_1557" text-rendering="inherit" font-size="12" dy=".8em" y="7049.700011394918" x="174.50000651925802">【函数类型】：是表示所有包含相同参数和返回类型的函数集合</text></g></g><g id="minder_node381"><g id="node_expander379" style="cursor: pointer;" display="none"><path id="kity_path_3083" fill="white" stroke="gray" d="M169.50000635534525,7083.50001180917A6,6,0,1,1,157.50000635534525,7083.50001180917A6,6,0,1,1,169.50000635534525,7083.50001180917"></path><path id="kity_path_3084" fill="none" stroke="gray"></path></g><path id="node_outline380" fill="none" stroke="none" d="M174.50000651925802,7074.50001180917h131a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-131a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text380" fill="black"><text id="kity_text_1559" text-rendering="inherit" font-size="12" dy=".8em" y="7075.700011782348" x="174.50000651925802">语句结尾不加分号（ ; ）</text></g></g><g id="minder_node382"><g id="node_expander380" style="cursor: pointer;" display="none"><path id="kity_path_3086" fill="white" stroke="gray" d="M169.50000635534525,7109.5000121966A6,6,0,1,1,157.50000635534525,7109.5000121966A6,6,0,1,1,169.50000635534525,7109.5000121966"></path><path id="kity_path_3087" fill="none" stroke="gray"></path></g><path id="node_outline381" fill="none" stroke="none" d="M174.50000651925802,7100.5000121966h290a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-290a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text381" fill="black"><text id="kity_text_1561" text-rendering="inherit" font-size="12" dy=".8em" y="7101.700012169778" x="174.50000651925802">&lt;&lt;：左移，j=3&lt;&lt;1（3左移1位：11---110，即为6）</text></g></g><g id="minder_node383"><g id="node_expander381" style="cursor: pointer;" display="none"><path id="kity_path_3089" fill="white" stroke="gray" d="M169.50000635534525,7135.500012584031A6,6,0,1,1,157.50000635534525,7135.500012584031A6,6,0,1,1,169.50000635534525,7135.500012584031"></path><path id="kity_path_3090" fill="none" stroke="gray"></path></g><path id="node_outline382" fill="none" stroke="none" d="M174.50000651925802,7126.500012584031h506a5,5,0,0,1,5,5v8a5,5,0,0,1,-5,5h-506a5,5,0,0,1,-5,-5v-8a5,5,0,0,1,5,-5z"></path><g id="node_text382" fill="black"><text id="kity_text_1563" text-rendering="inherit" font-size="12" dy=".8em" y="7127.7000125572085" x="174.50000651925802">一个可执行的程序有且仅有一个main包，main包中包含唯一一个main函数：作为程序的主入口</text></g></g></g></g></svg>