/*
	和错误的区别：错误是业务过程的一部分，而异常不是
	golang 引入两个内置函数 panic 和 recover 来触发和终止异常处理流程，同时引入关键字 defer 来延迟执行 defer 后面的函数；
	通常用来表示程序不可预知的情况，或者我们没有处理好的情况，如空指针引用、数组越界、下标越界、除数为0、非预期输入引起的函数错误
	错误 和 异常 是可以互相转换的：
		1、【错误转异常】：比如请求某个 URL，最多尝试三次，尝试三次的过程中请求失败是错误，尝试完第三次还不成功的话，被提升为异常；
		2、【异常转错误】：比如 panic 触发的异常被 recover 恢复后，将返回值中 error 类型的变量进行赋值，以便上层函数继续走错误处理流程。
*/

package main

import "os"

func main() {

	// 直接panic退出程序运行
	panic(" a problem")

	// 以下部分不会被执行，代码格式化工具会提示代码不可达
	_, err := os.Create("/tmp/file")
	if err != nil {
		panic(err)
	}
}
